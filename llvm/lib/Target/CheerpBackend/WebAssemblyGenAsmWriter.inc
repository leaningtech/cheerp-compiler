/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// getMnemonic - This method is automatically generated by tablegen
/// from the instruction set description.
std::pair<const char *, uint64_t> WebAssemblyInstPrinter::getMnemonic(const MCInst *MI) {

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ "br      \t\0"
  /* 10 */ "try     \t\0"
  /* 20 */ "if    \t\0"
  /* 28 */ "return_call    \t\0"
  /* 45 */ "loop    \t\0"
  /* 55 */ "br_if   \t\0"
  /* 65 */ "catch   \t\0"
  /* 75 */ "block   \t\0"
  /* 85 */ "throw   \t\0"
  /* 95 */ "f32.ge  \t\0"
  /* 105 */ "f64.ge  \t\0"
  /* 115 */ "f32.le  \t\0"
  /* 125 */ "f64.le  \t\0"
  /* 135 */ "f32.ne  \t\0"
  /* 145 */ "i32.ne  \t\0"
  /* 155 */ "f64.ne  \t\0"
  /* 165 */ "i64.ne  \t\0"
  /* 175 */ "f32.eq  \t\0"
  /* 185 */ "i32.eq  \t\0"
  /* 195 */ "f64.eq  \t\0"
  /* 205 */ "i64.eq  \t\0"
  /* 215 */ "i32.or  \t\0"
  /* 225 */ "i64.or  \t\0"
  /* 235 */ "f32.gt  \t\0"
  /* 245 */ "f64.gt  \t\0"
  /* 255 */ "f32.lt  \t\0"
  /* 265 */ "f64.lt  \t\0"
  /* 275 */ "memory.atomic.wait32 \t\0"
  /* 298 */ "memory.atomic.wait64 \t\0"
  /* 321 */ "f32.sub \t\0"
  /* 331 */ "i32.sub \t\0"
  /* 341 */ "f64.sub \t\0"
  /* 351 */ "i64.sub \t\0"
  /* 361 */ "f32.add \t\0"
  /* 371 */ "i32.add \t\0"
  /* 381 */ "f64.add \t\0"
  /* 391 */ "i64.add \t\0"
  /* 401 */ "i32.and \t\0"
  /* 411 */ "i64.and \t\0"
  /* 421 */ "br_table \t\0"
  /* 432 */ "f32.neg \t\0"
  /* 442 */ "f64.neg \t\0"
  /* 452 */ "i32.shl \t\0"
  /* 462 */ "i64.shl \t\0"
  /* 472 */ "f32.mul \t\0"
  /* 482 */ "i32.mul \t\0"
  /* 492 */ "f64.mul \t\0"
  /* 502 */ "i64.mul \t\0"
  /* 512 */ "f32.min \t\0"
  /* 522 */ "f64.min \t\0"
  /* 532 */ "i32.xor \t\0"
  /* 542 */ "i64.xor \t\0"
  /* 552 */ "f32.abs \t\0"
  /* 562 */ "f64.abs \t\0"
  /* 572 */ "f32.div \t\0"
  /* 582 */ "f64.div \t\0"
  /* 592 */ "rethrow \t\0"
  /* 602 */ "f32.max \t\0"
  /* 612 */ "f64.max \t\0"
  /* 622 */ "memory.atomic.notify \t\0"
  /* 645 */ "i32.clz \t\0"
  /* 655 */ "i64.clz \t\0"
  /* 665 */ "i32.eqz \t\0"
  /* 675 */ "i64.eqz \t\0"
  /* 685 */ "i32.ctz \t\0"
  /* 695 */ "i64.ctz \t\0"
  /* 705 */ "i64.store32\t\0"
  /* 718 */ "i64.atomic.store32\t\0"
  /* 738 */ "f32x4.relaxed_dot_bf16x8_add_f32\t\0"
  /* 772 */ "f64.promote_f32\t\0"
  /* 789 */ "i32.reinterpret_f32\t\0"
  /* 810 */ "f32.reinterpret_i32\t\0"
  /* 831 */ "f32.demote_f64\t\0"
  /* 847 */ "i64.reinterpret_f64\t\0"
  /* 868 */ "i32.wrap_i64\t\0"
  /* 882 */ "f64.reinterpret_i64\t\0"
  /* 903 */ "f64x2.promote_low_f32x4\t\0"
  /* 928 */ "i32.store16\t\0"
  /* 941 */ "i64.store16\t\0"
  /* 954 */ "i32.atomic.store16\t\0"
  /* 974 */ "i64.atomic.store16\t\0"
  /* 994 */ "i32.store8\t\0"
  /* 1006 */ "i64.store8\t\0"
  /* 1018 */ "i32.atomic.store8\t\0"
  /* 1037 */ "i64.atomic.store8\t\0"
  /* 1056 */ "f64x2.sub\t\0"
  /* 1067 */ "i64x2.sub\t\0"
  /* 1078 */ "f32x4.sub\t\0"
  /* 1089 */ "i32x4.sub\t\0"
  /* 1100 */ "i8x16.sub\t\0"
  /* 1111 */ "i16x8.sub\t\0"
  /* 1122 */ "i32.atomic.rmw.sub\t\0"
  /* 1142 */ "i64.atomic.rmw.sub\t\0"
  /* 1162 */ "f32.trunc\t\0"
  /* 1173 */ "f64x2.trunc\t\0"
  /* 1186 */ "f64.trunc\t\0"
  /* 1197 */ "f32x4.trunc\t\0"
  /* 1210 */ "f32.load\t\0"
  /* 1220 */ "i32.load\t\0"
  /* 1230 */ "f64.load\t\0"
  /* 1240 */ "i64.load\t\0"
  /* 1250 */ "v128.load\t\0"
  /* 1261 */ "i32.atomic.load\t\0"
  /* 1278 */ "i64.atomic.load\t\0"
  /* 1295 */ "f64x2.add\t\0"
  /* 1306 */ "i64x2.add\t\0"
  /* 1317 */ "f32x4.add\t\0"
  /* 1328 */ "i32x4.add\t\0"
  /* 1339 */ "i8x16.add\t\0"
  /* 1350 */ "i16x8.add\t\0"
  /* 1361 */ "i32.atomic.rmw.add\t\0"
  /* 1381 */ "i64.atomic.rmw.add\t\0"
  /* 1401 */ "f64x2.relaxed_madd\t\0"
  /* 1421 */ "f32x4.relaxed_madd\t\0"
  /* 1441 */ "f64x2.relaxed_nmadd\t\0"
  /* 1462 */ "f32x4.relaxed_nmadd\t\0"
  /* 1483 */ "v128.and\t\0"
  /* 1493 */ "i32.atomic.rmw.and\t\0"
  /* 1513 */ "i64.atomic.rmw.and\t\0"
  /* 1533 */ "local.tee\t\0"
  /* 1544 */ "f64x2.ge\t\0"
  /* 1554 */ "f32x4.ge\t\0"
  /* 1564 */ "f64x2.le\t\0"
  /* 1574 */ "f32x4.le\t\0"
  /* 1584 */ "i8x16.shuffle\t\0"
  /* 1599 */ "i8x16.swizzle\t\0"
  /* 1614 */ "i8x16.relaxed_swizzle\t\0"
  /* 1637 */ "f64x2.ne\t\0"
  /* 1647 */ "i64x2.ne\t\0"
  /* 1657 */ "f32x4.ne\t\0"
  /* 1667 */ "i32x4.ne\t\0"
  /* 1677 */ "i8x16.ne\t\0"
  /* 1687 */ "i16x8.ne\t\0"
  /* 1697 */ "v128.load32_lane\t\0"
  /* 1715 */ "v128.store32_lane\t\0"
  /* 1734 */ "v128.load64_lane\t\0"
  /* 1752 */ "v128.store64_lane\t\0"
  /* 1771 */ "v128.load16_lane\t\0"
  /* 1789 */ "v128.store16_lane\t\0"
  /* 1808 */ "v128.load8_lane\t\0"
  /* 1825 */ "v128.store8_lane\t\0"
  /* 1843 */ "f64x2.replace_lane\t\0"
  /* 1863 */ "i64x2.replace_lane\t\0"
  /* 1883 */ "f32x4.replace_lane\t\0"
  /* 1903 */ "i32x4.replace_lane\t\0"
  /* 1923 */ "i8x16.replace_lane\t\0"
  /* 1943 */ "i16x8.replace_lane\t\0"
  /* 1963 */ "f64x2.extract_lane\t\0"
  /* 1983 */ "i64x2.extract_lane\t\0"
  /* 2003 */ "f32x4.extract_lane\t\0"
  /* 2023 */ "i32x4.extract_lane\t\0"
  /* 2043 */ "f32.store\t\0"
  /* 2054 */ "i32.store\t\0"
  /* 2065 */ "f64.store\t\0"
  /* 2076 */ "i64.store\t\0"
  /* 2087 */ "v128.store\t\0"
  /* 2099 */ "i32.atomic.store\t\0"
  /* 2117 */ "i64.atomic.store\t\0"
  /* 2135 */ "i64x2.all_true\t\0"
  /* 2151 */ "i32x4.all_true\t\0"
  /* 2167 */ "i8x16.all_true\t\0"
  /* 2183 */ "i16x8.all_true\t\0"
  /* 2199 */ "v128.any_true\t\0"
  /* 2214 */ "table.size\t\0"
  /* 2226 */ "memory.size\t\0"
  /* 2239 */ "f64x2.neg\t\0"
  /* 2250 */ "i64x2.neg\t\0"
  /* 2261 */ "f32x4.neg\t\0"
  /* 2272 */ "i32x4.neg\t\0"
  /* 2283 */ "i8x16.neg\t\0"
  /* 2294 */ "i16x8.neg\t\0"
  /* 2305 */ "i32.atomic.rmw.xchg\t\0"
  /* 2326 */ "i64.atomic.rmw.xchg\t\0"
  /* 2347 */ "i32.atomic.rmw.cmpxchg\t\0"
  /* 2371 */ "i64.atomic.rmw.cmpxchg\t\0"
  /* 2395 */ "i64x2.bitmask\t\0"
  /* 2410 */ "i32x4.bitmask\t\0"
  /* 2425 */ "i8x16.bitmask\t\0"
  /* 2440 */ "i16x8.bitmask\t\0"
  /* 2455 */ "i64x2.shl\t\0"
  /* 2466 */ "i32x4.shl\t\0"
  /* 2477 */ "i8x16.shl\t\0"
  /* 2488 */ "i16x8.shl\t\0"
  /* 2499 */ "f32.ceil\t\0"
  /* 2509 */ "f64x2.ceil\t\0"
  /* 2521 */ "f64.ceil\t\0"
  /* 2531 */ "f32x4.ceil\t\0"
  /* 2543 */ "return_call\t\0"
  /* 2556 */ "table.fill\t\0"
  /* 2568 */ "memory.fill\t\0"
  /* 2581 */ "ref.is_null\t\0"
  /* 2594 */ "i32.rotl\t\0"
  /* 2604 */ "i64.rotl\t\0"
  /* 2614 */ "f64x2.mul\t\0"
  /* 2625 */ "i64x2.mul\t\0"
  /* 2636 */ "f32x4.mul\t\0"
  /* 2647 */ "i32x4.mul\t\0"
  /* 2658 */ "i16x8.mul\t\0"
  /* 2669 */ "f32.copysign\t\0"
  /* 2683 */ "f64.copysign\t\0"
  /* 2697 */ "f64x2.min\t\0"
  /* 2708 */ "f32x4.min\t\0"
  /* 2719 */ "f64x2.relaxed_min\t\0"
  /* 2738 */ "f32x4.relaxed_min\t\0"
  /* 2757 */ "f64x2.pmin\t\0"
  /* 2769 */ "f32x4.pmin\t\0"
  /* 2781 */ "v128.load32_zero\t\0"
  /* 2799 */ "f32x4.demote_f64x2_zero\t\0"
  /* 2824 */ "v128.load64_zero\t\0"
  /* 2842 */ "i32x4.relaxed_trunc_f64x2_s_zero\t\0"
  /* 2876 */ "i32x4.trunc_sat_f64x2_s_zero\t\0"
  /* 2906 */ "i32x4.relaxed_trunc_f64x2_u_zero\t\0"
  /* 2940 */ "i32x4.trunc_sat_f64x2_u_zero\t\0"
  /* 2970 */ "data.drop\t\0"
  /* 2981 */ "f64x2.eq\t\0"
  /* 2991 */ "i64x2.eq\t\0"
  /* 3001 */ "f32x4.eq\t\0"
  /* 3011 */ "i32x4.eq\t\0"
  /* 3021 */ "i8x16.eq\t\0"
  /* 3031 */ "i16x8.eq\t\0"
  /* 3041 */ "v128.or\t\0"
  /* 3050 */ "i32.atomic.rmw.or\t\0"
  /* 3069 */ "i64.atomic.rmw.or\t\0"
  /* 3088 */ "f32.floor\t\0"
  /* 3099 */ "f64x2.floor\t\0"
  /* 3112 */ "f64.floor\t\0"
  /* 3123 */ "f32x4.floor\t\0"
  /* 3136 */ "v128.xor\t\0"
  /* 3146 */ "i32.atomic.rmw.xor\t\0"
  /* 3166 */ "i64.atomic.rmw.xor\t\0"
  /* 3186 */ "i32.rotr\t\0"
  /* 3196 */ "i64.rotr\t\0"
  /* 3206 */ "i64.load32_s\t\0"
  /* 3220 */ "i64.extend32_s\t\0"
  /* 3236 */ "i32.trunc_f32_s\t\0"
  /* 3253 */ "i64.trunc_f32_s\t\0"
  /* 3270 */ "i32.trunc_sat_f32_s\t\0"
  /* 3291 */ "i64.trunc_sat_f32_s\t\0"
  /* 3312 */ "i64.extend_i32_s\t\0"
  /* 3330 */ "f32.convert_i32_s\t\0"
  /* 3349 */ "f64.convert_i32_s\t\0"
  /* 3368 */ "i64x2.load32x2_s\t\0"
  /* 3386 */ "i32.trunc_f64_s\t\0"
  /* 3403 */ "i64.trunc_f64_s\t\0"
  /* 3420 */ "i32.trunc_sat_f64_s\t\0"
  /* 3441 */ "i64.trunc_sat_f64_s\t\0"
  /* 3462 */ "f32.convert_i64_s\t\0"
  /* 3481 */ "f64.convert_i64_s\t\0"
  /* 3500 */ "i32x4.relaxed_trunc_f32x4_s\t\0"
  /* 3529 */ "i32x4.trunc_sat_f32x4_s\t\0"
  /* 3554 */ "i64x2.extend_high_i32x4_s\t\0"
  /* 3581 */ "i64x2.extmul_high_i32x4_s\t\0"
  /* 3608 */ "f32x4.convert_i32x4_s\t\0"
  /* 3631 */ "i64x2.extend_low_i32x4_s\t\0"
  /* 3657 */ "i64x2.extmul_low_i32x4_s\t\0"
  /* 3683 */ "f64x2.convert_low_i32x4_s\t\0"
  /* 3710 */ "i16x8.narrow_i32x4_s\t\0"
  /* 3732 */ "i32x4.load16x4_s\t\0"
  /* 3750 */ "i32.load16_s\t\0"
  /* 3764 */ "i64.load16_s\t\0"
  /* 3778 */ "i32.extend16_s\t\0"
  /* 3794 */ "i64.extend16_s\t\0"
  /* 3810 */ "i16x8.relaxed_dot_i8x16_i7x16_s\t\0"
  /* 3843 */ "i16x8.extadd_pairwise_i8x16_s\t\0"
  /* 3874 */ "i16x8.extend_high_i8x16_s\t\0"
  /* 3901 */ "i16x8.extmul_high_i8x16_s\t\0"
  /* 3928 */ "i16x8.extend_low_i8x16_s\t\0"
  /* 3954 */ "i16x8.extmul_low_i8x16_s\t\0"
  /* 3980 */ "i32.load8_s\t\0"
  /* 3993 */ "i64.load8_s\t\0"
  /* 4006 */ "i32.extend8_s\t\0"
  /* 4021 */ "i64.extend8_s\t\0"
  /* 4036 */ "i32x4.extadd_pairwise_i16x8_s\t\0"
  /* 4067 */ "i32x4.extend_high_i16x8_s\t\0"
  /* 4094 */ "i32x4.extmul_high_i16x8_s\t\0"
  /* 4121 */ "i32x4.dot_i16x8_s\t\0"
  /* 4140 */ "i32x4.extend_low_i16x8_s\t\0"
  /* 4166 */ "i32x4.extmul_low_i16x8_s\t\0"
  /* 4192 */ "i8x16.narrow_i16x8_s\t\0"
  /* 4214 */ "i16x8.load8x8_s\t\0"
  /* 4231 */ "i32x4.relaxed_dot_i8x16_i7x16_add_s\t\0"
  /* 4268 */ "i32.ge_s\t\0"
  /* 4278 */ "i64x2.ge_s\t\0"
  /* 4290 */ "i64.ge_s\t\0"
  /* 4300 */ "i32x4.ge_s\t\0"
  /* 4312 */ "i8x16.ge_s\t\0"
  /* 4324 */ "i16x8.ge_s\t\0"
  /* 4336 */ "i32.le_s\t\0"
  /* 4346 */ "i64x2.le_s\t\0"
  /* 4358 */ "i64.le_s\t\0"
  /* 4368 */ "i32x4.le_s\t\0"
  /* 4380 */ "i8x16.le_s\t\0"
  /* 4392 */ "i16x8.le_s\t\0"
  /* 4404 */ "i8x16.extract_lane_s\t\0"
  /* 4426 */ "i16x8.extract_lane_s\t\0"
  /* 4448 */ "i32.rem_s\t\0"
  /* 4459 */ "i64.rem_s\t\0"
  /* 4470 */ "i32x4.min_s\t\0"
  /* 4483 */ "i8x16.min_s\t\0"
  /* 4496 */ "i16x8.min_s\t\0"
  /* 4509 */ "i32.shr_s\t\0"
  /* 4520 */ "i64x2.shr_s\t\0"
  /* 4533 */ "i64.shr_s\t\0"
  /* 4544 */ "i32x4.shr_s\t\0"
  /* 4557 */ "i8x16.shr_s\t\0"
  /* 4570 */ "i16x8.shr_s\t\0"
  /* 4583 */ "i16x8.relaxed_q15mulr_s\t\0"
  /* 4608 */ "i8x16.sub_sat_s\t\0"
  /* 4625 */ "i16x8.sub_sat_s\t\0"
  /* 4642 */ "i8x16.add_sat_s\t\0"
  /* 4659 */ "i16x8.add_sat_s\t\0"
  /* 4676 */ "i16x8.q15mulr_sat_s\t\0"
  /* 4697 */ "i32.gt_s\t\0"
  /* 4707 */ "i64x2.gt_s\t\0"
  /* 4719 */ "i64.gt_s\t\0"
  /* 4729 */ "i32x4.gt_s\t\0"
  /* 4741 */ "i8x16.gt_s\t\0"
  /* 4753 */ "i16x8.gt_s\t\0"
  /* 4765 */ "i32.lt_s\t\0"
  /* 4775 */ "i64x2.lt_s\t\0"
  /* 4787 */ "i64.lt_s\t\0"
  /* 4797 */ "i32x4.lt_s\t\0"
  /* 4809 */ "i8x16.lt_s\t\0"
  /* 4821 */ "i16x8.lt_s\t\0"
  /* 4833 */ "i32.div_s\t\0"
  /* 4844 */ "i64.div_s\t\0"
  /* 4855 */ "i32x4.max_s\t\0"
  /* 4868 */ "i8x16.max_s\t\0"
  /* 4881 */ "i16x8.max_s\t\0"
  /* 4894 */ "f64x2.abs\t\0"
  /* 4905 */ "i64x2.abs\t\0"
  /* 4916 */ "f32x4.abs\t\0"
  /* 4927 */ "i32x4.abs\t\0"
  /* 4938 */ "i8x16.abs\t\0"
  /* 4949 */ "i16x8.abs\t\0"
  /* 4960 */ "call_params\t\0"
  /* 4973 */ "f64x2.splat\t\0"
  /* 4986 */ "i64x2.splat\t\0"
  /* 4999 */ "f32x4.splat\t\0"
  /* 5012 */ "i32x4.splat\t\0"
  /* 5025 */ "i8x16.splat\t\0"
  /* 5038 */ "i16x8.splat\t\0"
  /* 5051 */ "v128.load32_splat\t\0"
  /* 5070 */ "v128.load64_splat\t\0"
  /* 5089 */ "v128.load16_splat\t\0"
  /* 5108 */ "v128.load8_splat\t\0"
  /* 5126 */ "f32.select\t\0"
  /* 5138 */ "i32.select\t\0"
  /* 5150 */ "f64.select\t\0"
  /* 5162 */ "i64.select\t\0"
  /* 5174 */ "v128.select\t\0"
  /* 5187 */ "funcref.select\t\0"
  /* 5203 */ "externref.select\t\0"
  /* 5221 */ "i64x2.relaxed_laneselect\t\0"
  /* 5247 */ "i32x4.relaxed_laneselect\t\0"
  /* 5273 */ "i8x16.relaxed_laneselect\t\0"
  /* 5299 */ "i16x8.relaxed_laneselect\t\0"
  /* 5325 */ "v128.bitselect\t\0"
  /* 5341 */ "return_call_indirect\t\0"
  /* 5363 */ "table.get\t\0"
  /* 5374 */ "global.get\t\0"
  /* 5386 */ "local.get\t\0"
  /* 5397 */ "table.set\t\0"
  /* 5408 */ "global.set\t\0"
  /* 5420 */ "local.set\t\0"
  /* 5431 */ "f64x2.gt\t\0"
  /* 5441 */ "f32x4.gt\t\0"
  /* 5451 */ "memory.init\t\0"
  /* 5464 */ "f64x2.lt\t\0"
  /* 5474 */ "f32x4.lt\t\0"
  /* 5484 */ "i32.popcnt\t\0"
  /* 5496 */ "i64.popcnt\t\0"
  /* 5508 */ "i8x16.popcnt\t\0"
  /* 5522 */ "v128.not\t\0"
  /* 5532 */ "v128.andnot\t\0"
  /* 5545 */ "f32.sqrt\t\0"
  /* 5555 */ "f64x2.sqrt\t\0"
  /* 5567 */ "f64.sqrt\t\0"
  /* 5577 */ "f32x4.sqrt\t\0"
  /* 5589 */ "f32.nearest\t\0"
  /* 5602 */ "f64x2.nearest\t\0"
  /* 5617 */ "f64.nearest\t\0"
  /* 5630 */ "f32x4.nearest\t\0"
  /* 5645 */ "f32.const\t\0"
  /* 5656 */ "i32.const\t\0"
  /* 5667 */ "f64.const\t\0"
  /* 5678 */ "i64.const\t\0"
  /* 5689 */ "v128.const\t\0"
  /* 5701 */ "i64.load32_u\t\0"
  /* 5715 */ "i64.atomic.load32_u\t\0"
  /* 5736 */ "i32.trunc_f32_u\t\0"
  /* 5753 */ "i64.trunc_f32_u\t\0"
  /* 5770 */ "i32.trunc_sat_f32_u\t\0"
  /* 5791 */ "i64.trunc_sat_f32_u\t\0"
  /* 5812 */ "i64.extend_i32_u\t\0"
  /* 5830 */ "f32.convert_i32_u\t\0"
  /* 5849 */ "f64.convert_i32_u\t\0"
  /* 5868 */ "i64x2.load32x2_u\t\0"
  /* 5886 */ "i32.trunc_f64_u\t\0"
  /* 5903 */ "i64.trunc_f64_u\t\0"
  /* 5920 */ "i32.trunc_sat_f64_u\t\0"
  /* 5941 */ "i64.trunc_sat_f64_u\t\0"
  /* 5962 */ "f32.convert_i64_u\t\0"
  /* 5981 */ "f64.convert_i64_u\t\0"
  /* 6000 */ "i32x4.relaxed_trunc_f32x4_u\t\0"
  /* 6029 */ "i32x4.trunc_sat_f32x4_u\t\0"
  /* 6054 */ "i64x2.extend_high_i32x4_u\t\0"
  /* 6081 */ "i64x2.extmul_high_i32x4_u\t\0"
  /* 6108 */ "f32x4.convert_i32x4_u\t\0"
  /* 6131 */ "i64x2.extend_low_i32x4_u\t\0"
  /* 6157 */ "i64x2.extmul_low_i32x4_u\t\0"
  /* 6183 */ "f64x2.convert_low_i32x4_u\t\0"
  /* 6210 */ "i16x8.narrow_i32x4_u\t\0"
  /* 6232 */ "i32x4.load16x4_u\t\0"
  /* 6250 */ "i32.load16_u\t\0"
  /* 6264 */ "i64.load16_u\t\0"
  /* 6278 */ "i32.atomic.load16_u\t\0"
  /* 6299 */ "i64.atomic.load16_u\t\0"
  /* 6320 */ "i16x8.extadd_pairwise_i8x16_u\t\0"
  /* 6351 */ "i16x8.extend_high_i8x16_u\t\0"
  /* 6378 */ "i16x8.extmul_high_i8x16_u\t\0"
  /* 6405 */ "i16x8.extend_low_i8x16_u\t\0"
  /* 6431 */ "i16x8.extmul_low_i8x16_u\t\0"
  /* 6457 */ "i32.load8_u\t\0"
  /* 6470 */ "i64.load8_u\t\0"
  /* 6483 */ "i32.atomic.load8_u\t\0"
  /* 6503 */ "i64.atomic.load8_u\t\0"
  /* 6523 */ "i32x4.extadd_pairwise_i16x8_u\t\0"
  /* 6554 */ "i32x4.extend_high_i16x8_u\t\0"
  /* 6581 */ "i32x4.extmul_high_i16x8_u\t\0"
  /* 6608 */ "i32x4.extend_low_i16x8_u\t\0"
  /* 6634 */ "i32x4.extmul_low_i16x8_u\t\0"
  /* 6660 */ "i8x16.narrow_i16x8_u\t\0"
  /* 6682 */ "i16x8.load8x8_u\t\0"
  /* 6699 */ "i64.atomic.rmw32.sub_u\t\0"
  /* 6723 */ "i32.atomic.rmw16.sub_u\t\0"
  /* 6747 */ "i64.atomic.rmw16.sub_u\t\0"
  /* 6771 */ "i32.atomic.rmw8.sub_u\t\0"
  /* 6794 */ "i64.atomic.rmw8.sub_u\t\0"
  /* 6817 */ "i64.atomic.rmw32.add_u\t\0"
  /* 6841 */ "i32.atomic.rmw16.add_u\t\0"
  /* 6865 */ "i64.atomic.rmw16.add_u\t\0"
  /* 6889 */ "i32.atomic.rmw8.add_u\t\0"
  /* 6912 */ "i64.atomic.rmw8.add_u\t\0"
  /* 6935 */ "i64.atomic.rmw32.and_u\t\0"
  /* 6959 */ "i32.atomic.rmw16.and_u\t\0"
  /* 6983 */ "i64.atomic.rmw16.and_u\t\0"
  /* 7007 */ "i32.atomic.rmw8.and_u\t\0"
  /* 7030 */ "i64.atomic.rmw8.and_u\t\0"
  /* 7053 */ "i32.ge_u\t\0"
  /* 7063 */ "i64.ge_u\t\0"
  /* 7073 */ "i32x4.ge_u\t\0"
  /* 7085 */ "i8x16.ge_u\t\0"
  /* 7097 */ "i16x8.ge_u\t\0"
  /* 7109 */ "i32.le_u\t\0"
  /* 7119 */ "i64.le_u\t\0"
  /* 7129 */ "i32x4.le_u\t\0"
  /* 7141 */ "i8x16.le_u\t\0"
  /* 7153 */ "i16x8.le_u\t\0"
  /* 7165 */ "i8x16.extract_lane_u\t\0"
  /* 7187 */ "i16x8.extract_lane_u\t\0"
  /* 7209 */ "i64.atomic.rmw32.xchg_u\t\0"
  /* 7234 */ "i32.atomic.rmw16.xchg_u\t\0"
  /* 7259 */ "i64.atomic.rmw16.xchg_u\t\0"
  /* 7284 */ "i32.atomic.rmw8.xchg_u\t\0"
  /* 7308 */ "i64.atomic.rmw8.xchg_u\t\0"
  /* 7332 */ "i64.atomic.rmw32.cmpxchg_u\t\0"
  /* 7360 */ "i32.atomic.rmw16.cmpxchg_u\t\0"
  /* 7388 */ "i64.atomic.rmw16.cmpxchg_u\t\0"
  /* 7416 */ "i32.atomic.rmw8.cmpxchg_u\t\0"
  /* 7443 */ "i64.atomic.rmw8.cmpxchg_u\t\0"
  /* 7470 */ "i32.rem_u\t\0"
  /* 7481 */ "i64.rem_u\t\0"
  /* 7492 */ "i32x4.min_u\t\0"
  /* 7505 */ "i8x16.min_u\t\0"
  /* 7518 */ "i16x8.min_u\t\0"
  /* 7531 */ "i8x16.avgr_u\t\0"
  /* 7545 */ "i16x8.avgr_u\t\0"
  /* 7559 */ "i32.shr_u\t\0"
  /* 7570 */ "i64x2.shr_u\t\0"
  /* 7583 */ "i64.shr_u\t\0"
  /* 7594 */ "i32x4.shr_u\t\0"
  /* 7607 */ "i8x16.shr_u\t\0"
  /* 7620 */ "i16x8.shr_u\t\0"
  /* 7633 */ "i64.atomic.rmw32.or_u\t\0"
  /* 7656 */ "i32.atomic.rmw16.or_u\t\0"
  /* 7679 */ "i64.atomic.rmw16.or_u\t\0"
  /* 7702 */ "i32.atomic.rmw8.or_u\t\0"
  /* 7724 */ "i64.atomic.rmw8.or_u\t\0"
  /* 7746 */ "i64.atomic.rmw32.xor_u\t\0"
  /* 7770 */ "i32.atomic.rmw16.xor_u\t\0"
  /* 7794 */ "i64.atomic.rmw16.xor_u\t\0"
  /* 7818 */ "i32.atomic.rmw8.xor_u\t\0"
  /* 7841 */ "i64.atomic.rmw8.xor_u\t\0"
  /* 7864 */ "i8x16.sub_sat_u\t\0"
  /* 7881 */ "i16x8.sub_sat_u\t\0"
  /* 7898 */ "i8x16.add_sat_u\t\0"
  /* 7915 */ "i16x8.add_sat_u\t\0"
  /* 7932 */ "i32.gt_u\t\0"
  /* 7942 */ "i64.gt_u\t\0"
  /* 7952 */ "i32x4.gt_u\t\0"
  /* 7964 */ "i8x16.gt_u\t\0"
  /* 7976 */ "i16x8.gt_u\t\0"
  /* 7988 */ "i32.lt_u\t\0"
  /* 7998 */ "i64.lt_u\t\0"
  /* 8008 */ "i32x4.lt_u\t\0"
  /* 8020 */ "i8x16.lt_u\t\0"
  /* 8032 */ "i16x8.lt_u\t\0"
  /* 8044 */ "i32.div_u\t\0"
  /* 8055 */ "i64.div_u\t\0"
  /* 8066 */ "i32x4.max_u\t\0"
  /* 8079 */ "i8x16.max_u\t\0"
  /* 8092 */ "i16x8.max_u\t\0"
  /* 8105 */ "f64x2.div\t\0"
  /* 8116 */ "f32x4.div\t\0"
  /* 8127 */ "table.grow\t\0"
  /* 8139 */ "memory.grow\t\0"
  /* 8152 */ "f64x2.max\t\0"
  /* 8163 */ "f32x4.max\t\0"
  /* 8174 */ "f64x2.relaxed_max\t\0"
  /* 8193 */ "f32x4.relaxed_max\t\0"
  /* 8212 */ "f64x2.pmax\t\0"
  /* 8224 */ "f32x4.pmax\t\0"
  /* 8236 */ "table.copy\t\0"
  /* 8248 */ "local.copy\t\0"
  /* 8260 */ "memory.copy\t\0"
  /* 8273 */ "delegate \t \0"
  /* 8285 */ "f32.ge  \0"
  /* 8294 */ "f64.ge  \0"
  /* 8303 */ "f32.le  \0"
  /* 8312 */ "f64.le  \0"
  /* 8321 */ "f32.ne  \0"
  /* 8330 */ "i32.ne  \0"
  /* 8339 */ "f64.ne  \0"
  /* 8348 */ "i64.ne  \0"
  /* 8357 */ "f32.eq  \0"
  /* 8366 */ "i32.eq  \0"
  /* 8375 */ "f64.eq  \0"
  /* 8384 */ "i64.eq  \0"
  /* 8393 */ "i32.or  \0"
  /* 8402 */ "i64.or  \0"
  /* 8411 */ "f32.gt  \0"
  /* 8420 */ "f64.gt  \0"
  /* 8429 */ "f32.lt  \0"
  /* 8438 */ "f64.lt  \0"
  /* 8447 */ "f32.sub \0"
  /* 8456 */ "i32.sub \0"
  /* 8465 */ "f64.sub \0"
  /* 8474 */ "i64.sub \0"
  /* 8483 */ "f32.add \0"
  /* 8492 */ "i32.add \0"
  /* 8501 */ "f64.add \0"
  /* 8510 */ "i64.add \0"
  /* 8519 */ "i32.and \0"
  /* 8528 */ "i64.and \0"
  /* 8537 */ "f32.neg \0"
  /* 8546 */ "f64.neg \0"
  /* 8555 */ "i32.shl \0"
  /* 8564 */ "i64.shl \0"
  /* 8573 */ "f32.mul \0"
  /* 8582 */ "i32.mul \0"
  /* 8591 */ "f64.mul \0"
  /* 8600 */ "i64.mul \0"
  /* 8609 */ "f32.min \0"
  /* 8618 */ "f64.min \0"
  /* 8627 */ "i32.xor \0"
  /* 8636 */ "i64.xor \0"
  /* 8645 */ "f32.abs \0"
  /* 8654 */ "f64.abs \0"
  /* 8663 */ "f32.div \0"
  /* 8672 */ "f64.div \0"
  /* 8681 */ "f32.max \0"
  /* 8690 */ "f64.max \0"
  /* 8699 */ "i32.clz \0"
  /* 8708 */ "i64.clz \0"
  /* 8717 */ "i32.ctz \0"
  /* 8726 */ "i64.ctz \0"
  /* 8735 */ "# XRay Function Patchable RET.\0"
  /* 8766 */ "# XRay Typed Event Log.\0"
  /* 8790 */ "# XRay Custom Event Log.\0"
  /* 8815 */ "# XRay Function Enter.\0"
  /* 8838 */ "# XRay Tail Call Exit.\0"
  /* 8861 */ "# XRay Function Exit.\0"
  /* 8883 */ "f32x4.relaxed_dot_bf16x8_add_f32\0"
  /* 8916 */ "f64.promote_f32\0"
  /* 8932 */ "i32.reinterpret_f32\0"
  /* 8952 */ "f32.reinterpret_i32\0"
  /* 8972 */ "f32.demote_f64\0"
  /* 8987 */ "i64.reinterpret_f64\0"
  /* 9007 */ "i32.wrap_i64\0"
  /* 9020 */ "f64.reinterpret_i64\0"
  /* 9040 */ "f64x2.promote_low_f32x4\0"
  /* 9064 */ "LIFETIME_END\0"
  /* 9077 */ "PSEUDO_PROBE\0"
  /* 9090 */ "BUNDLE\0"
  /* 9097 */ "DBG_VALUE\0"
  /* 9107 */ "DBG_INSTR_REF\0"
  /* 9121 */ "DBG_PHI\0"
  /* 9129 */ "DBG_LABEL\0"
  /* 9139 */ "LIFETIME_START\0"
  /* 9154 */ "DBG_VALUE_LIST\0"
  /* 9169 */ "f64x2.sub\0"
  /* 9179 */ "i64x2.sub\0"
  /* 9189 */ "f32x4.sub\0"
  /* 9199 */ "i32x4.sub\0"
  /* 9209 */ "i8x16.sub\0"
  /* 9219 */ "i16x8.sub\0"
  /* 9229 */ "ref.null_func\0"
  /* 9243 */ "f32.trunc\0"
  /* 9253 */ "f64x2.trunc\0"
  /* 9265 */ "f64.trunc\0"
  /* 9275 */ "f32x4.trunc\0"
  /* 9287 */ "f64x2.add\0"
  /* 9297 */ "i64x2.add\0"
  /* 9307 */ "f32x4.add\0"
  /* 9317 */ "i32x4.add\0"
  /* 9327 */ "i8x16.add\0"
  /* 9337 */ "i16x8.add\0"
  /* 9347 */ "f64x2.relaxed_madd\0"
  /* 9366 */ "f32x4.relaxed_madd\0"
  /* 9385 */ "f64x2.relaxed_nmadd\0"
  /* 9405 */ "f32x4.relaxed_nmadd\0"
  /* 9425 */ "v128.and\0"
  /* 9434 */ "end\0"
  /* 9438 */ "atomic.fence\0"
  /* 9451 */ "compiler_fence\0"
  /* 9466 */ "local.tee\0"
  /* 9476 */ "f64x2.ge\0"
  /* 9485 */ "f32x4.ge\0"
  /* 9494 */ "f64x2.le\0"
  /* 9503 */ "f32x4.le\0"
  /* 9512 */ "unreachable\0"
  /* 9524 */ "i8x16.swizzle\0"
  /* 9538 */ "i8x16.relaxed_swizzle\0"
  /* 9560 */ "f64x2.ne\0"
  /* 9569 */ "i64x2.ne\0"
  /* 9578 */ "f32x4.ne\0"
  /* 9587 */ "i32x4.ne\0"
  /* 9596 */ "i8x16.ne\0"
  /* 9605 */ "i16x8.ne\0"
  /* 9614 */ "else\0"
  /* 9619 */ "i64x2.all_true\0"
  /* 9634 */ "i32x4.all_true\0"
  /* 9649 */ "i8x16.all_true\0"
  /* 9664 */ "i16x8.all_true\0"
  /* 9679 */ "v128.any_true\0"
  /* 9693 */ "end_if\0"
  /* 9700 */ "f64x2.neg\0"
  /* 9710 */ "i64x2.neg\0"
  /* 9720 */ "f32x4.neg\0"
  /* 9730 */ "i32x4.neg\0"
  /* 9740 */ "i8x16.neg\0"
  /* 9750 */ "i16x8.neg\0"
  /* 9760 */ "catch\0"
  /* 9766 */ "end_block\0"
  /* 9776 */ "i64x2.bitmask\0"
  /* 9790 */ "i32x4.bitmask\0"
  /* 9804 */ "i8x16.bitmask\0"
  /* 9818 */ "i16x8.bitmask\0"
  /* 9832 */ "i64x2.shl\0"
  /* 9842 */ "i32x4.shl\0"
  /* 9852 */ "i8x16.shl\0"
  /* 9862 */ "i16x8.shl\0"
  /* 9872 */ "f32.ceil\0"
  /* 9881 */ "f64x2.ceil\0"
  /* 9892 */ "f64.ceil\0"
  /* 9901 */ "f32x4.ceil\0"
  /* 9912 */ "catch_all\0"
  /* 9922 */ "# FEntry call\0"
  /* 9936 */ "ref.is_null\0"
  /* 9948 */ "i32.rotl\0"
  /* 9957 */ "i64.rotl\0"
  /* 9966 */ "f64x2.mul\0"
  /* 9976 */ "i64x2.mul\0"
  /* 9986 */ "f32x4.mul\0"
  /* 9996 */ "i32x4.mul\0"
  /* 10006 */ "i16x8.mul\0"
  /* 10016 */ "f32.copysign\0"
  /* 10029 */ "f64.copysign\0"
  /* 10042 */ "f64x2.min\0"
  /* 10052 */ "f32x4.min\0"
  /* 10062 */ "f64x2.relaxed_min\0"
  /* 10080 */ "f32x4.relaxed_min\0"
  /* 10098 */ "f64x2.pmin\0"
  /* 10109 */ "f32x4.pmin\0"
  /* 10120 */ "end_function\0"
  /* 10133 */ "ref.null_extern\0"
  /* 10149 */ "return\0"
  /* 10156 */ "f32x4.demote_f64x2_zero\0"
  /* 10180 */ "i32x4.relaxed_trunc_f64x2_s_zero\0"
  /* 10213 */ "i32x4.trunc_sat_f64x2_s_zero\0"
  /* 10242 */ "i32x4.relaxed_trunc_f64x2_u_zero\0"
  /* 10275 */ "i32x4.trunc_sat_f64x2_u_zero\0"
  /* 10304 */ "nop\0"
  /* 10308 */ "end_loop\0"
  /* 10317 */ "drop\0"
  /* 10322 */ "f64x2.eq\0"
  /* 10331 */ "i64x2.eq\0"
  /* 10340 */ "f32x4.eq\0"
  /* 10349 */ "i32x4.eq\0"
  /* 10358 */ "i8x16.eq\0"
  /* 10367 */ "i16x8.eq\0"
  /* 10376 */ "v128.or\0"
  /* 10384 */ "f32.floor\0"
  /* 10394 */ "f64x2.floor\0"
  /* 10406 */ "f64.floor\0"
  /* 10416 */ "f32x4.floor\0"
  /* 10428 */ "v128.xor\0"
  /* 10437 */ "i32.rotr\0"
  /* 10446 */ "i64.rotr\0"
  /* 10455 */ "i64.extend32_s\0"
  /* 10470 */ "i32.trunc_f32_s\0"
  /* 10486 */ "i64.trunc_f32_s\0"
  /* 10502 */ "i32.trunc_sat_f32_s\0"
  /* 10522 */ "i64.trunc_sat_f32_s\0"
  /* 10542 */ "i64.extend_i32_s\0"
  /* 10559 */ "f32.convert_i32_s\0"
  /* 10577 */ "f64.convert_i32_s\0"
  /* 10595 */ "i32.trunc_f64_s\0"
  /* 10611 */ "i64.trunc_f64_s\0"
  /* 10627 */ "i32.trunc_sat_f64_s\0"
  /* 10647 */ "i64.trunc_sat_f64_s\0"
  /* 10667 */ "f32.convert_i64_s\0"
  /* 10685 */ "f64.convert_i64_s\0"
  /* 10703 */ "i32x4.relaxed_trunc_f32x4_s\0"
  /* 10731 */ "i32x4.trunc_sat_f32x4_s\0"
  /* 10755 */ "i64x2.extend_high_i32x4_s\0"
  /* 10781 */ "i64x2.extmul_high_i32x4_s\0"
  /* 10807 */ "f32x4.convert_i32x4_s\0"
  /* 10829 */ "i64x2.extend_low_i32x4_s\0"
  /* 10854 */ "i64x2.extmul_low_i32x4_s\0"
  /* 10879 */ "f64x2.convert_low_i32x4_s\0"
  /* 10905 */ "i16x8.narrow_i32x4_s\0"
  /* 10926 */ "i32.extend16_s\0"
  /* 10941 */ "i64.extend16_s\0"
  /* 10956 */ "i16x8.relaxed_dot_i8x16_i7x16_s\0"
  /* 10988 */ "i16x8.extadd_pairwise_i8x16_s\0"
  /* 11018 */ "i16x8.extend_high_i8x16_s\0"
  /* 11044 */ "i16x8.extmul_high_i8x16_s\0"
  /* 11070 */ "i16x8.extend_low_i8x16_s\0"
  /* 11095 */ "i16x8.extmul_low_i8x16_s\0"
  /* 11120 */ "i32.extend8_s\0"
  /* 11134 */ "i64.extend8_s\0"
  /* 11148 */ "i32x4.extadd_pairwise_i16x8_s\0"
  /* 11178 */ "i32x4.extend_high_i16x8_s\0"
  /* 11204 */ "i32x4.extmul_high_i16x8_s\0"
  /* 11230 */ "i32x4.dot_i16x8_s\0"
  /* 11248 */ "i32x4.extend_low_i16x8_s\0"
  /* 11273 */ "i32x4.extmul_low_i16x8_s\0"
  /* 11298 */ "i8x16.narrow_i16x8_s\0"
  /* 11319 */ "i32x4.relaxed_dot_i8x16_i7x16_add_s\0"
  /* 11355 */ "i32.ge_s\0"
  /* 11364 */ "i64x2.ge_s\0"
  /* 11375 */ "i64.ge_s\0"
  /* 11384 */ "i32x4.ge_s\0"
  /* 11395 */ "i8x16.ge_s\0"
  /* 11406 */ "i16x8.ge_s\0"
  /* 11417 */ "i32.le_s\0"
  /* 11426 */ "i64x2.le_s\0"
  /* 11437 */ "i64.le_s\0"
  /* 11446 */ "i32x4.le_s\0"
  /* 11457 */ "i8x16.le_s\0"
  /* 11468 */ "i16x8.le_s\0"
  /* 11479 */ "i32.rem_s\0"
  /* 11489 */ "i64.rem_s\0"
  /* 11499 */ "i32x4.min_s\0"
  /* 11511 */ "i8x16.min_s\0"
  /* 11523 */ "i16x8.min_s\0"
  /* 11535 */ "i32.shr_s\0"
  /* 11545 */ "i64x2.shr_s\0"
  /* 11557 */ "i64.shr_s\0"
  /* 11567 */ "i32x4.shr_s\0"
  /* 11579 */ "i8x16.shr_s\0"
  /* 11591 */ "i16x8.shr_s\0"
  /* 11603 */ "i16x8.relaxed_q15mulr_s\0"
  /* 11627 */ "i8x16.sub_sat_s\0"
  /* 11643 */ "i16x8.sub_sat_s\0"
  /* 11659 */ "i8x16.add_sat_s\0"
  /* 11675 */ "i16x8.add_sat_s\0"
  /* 11691 */ "i16x8.q15mulr_sat_s\0"
  /* 11711 */ "i32.gt_s\0"
  /* 11720 */ "i64x2.gt_s\0"
  /* 11731 */ "i64.gt_s\0"
  /* 11740 */ "i32x4.gt_s\0"
  /* 11751 */ "i8x16.gt_s\0"
  /* 11762 */ "i16x8.gt_s\0"
  /* 11773 */ "i32.lt_s\0"
  /* 11782 */ "i64x2.lt_s\0"
  /* 11793 */ "i64.lt_s\0"
  /* 11802 */ "i32x4.lt_s\0"
  /* 11813 */ "i8x16.lt_s\0"
  /* 11824 */ "i16x8.lt_s\0"
  /* 11835 */ "i32.div_s\0"
  /* 11845 */ "i64.div_s\0"
  /* 11855 */ "i32x4.max_s\0"
  /* 11867 */ "i8x16.max_s\0"
  /* 11879 */ "i16x8.max_s\0"
  /* 11891 */ "f64x2.abs\0"
  /* 11901 */ "i64x2.abs\0"
  /* 11911 */ "f32x4.abs\0"
  /* 11921 */ "i32x4.abs\0"
  /* 11931 */ "i8x16.abs\0"
  /* 11941 */ "i16x8.abs\0"
  /* 11951 */ "return_call_results\0"
  /* 11971 */ "f64x2.splat\0"
  /* 11983 */ "i64x2.splat\0"
  /* 11995 */ "f32x4.splat\0"
  /* 12007 */ "i32x4.splat\0"
  /* 12019 */ "i8x16.splat\0"
  /* 12031 */ "i16x8.splat\0"
  /* 12043 */ "f32.select\0"
  /* 12054 */ "i32.select\0"
  /* 12065 */ "f64.select\0"
  /* 12076 */ "i64.select\0"
  /* 12087 */ "v128.select\0"
  /* 12099 */ "funcref.select\0"
  /* 12114 */ "externref.select\0"
  /* 12131 */ "i64x2.relaxed_laneselect\0"
  /* 12156 */ "i32x4.relaxed_laneselect\0"
  /* 12181 */ "i8x16.relaxed_laneselect\0"
  /* 12206 */ "i16x8.relaxed_laneselect\0"
  /* 12231 */ "v128.bitselect\0"
  /* 12246 */ "call_indirect\0"
  /* 12260 */ "catchret\0"
  /* 12269 */ "cleanupret\0"
  /* 12280 */ "f64x2.gt\0"
  /* 12289 */ "f32x4.gt\0"
  /* 12298 */ "f64x2.lt\0"
  /* 12307 */ "f32x4.lt\0"
  /* 12316 */ "i32.popcnt\0"
  /* 12327 */ "i64.popcnt\0"
  /* 12338 */ "i8x16.popcnt\0"
  /* 12351 */ "v128.not\0"
  /* 12360 */ "v128.andnot\0"
  /* 12372 */ "f32.sqrt\0"
  /* 12381 */ "f64x2.sqrt\0"
  /* 12392 */ "f64.sqrt\0"
  /* 12401 */ "f32x4.sqrt\0"
  /* 12412 */ "f32.nearest\0"
  /* 12424 */ "f64x2.nearest\0"
  /* 12438 */ "f64.nearest\0"
  /* 12450 */ "f32x4.nearest\0"
  /* 12464 */ "i32.trunc_f32_u\0"
  /* 12480 */ "i64.trunc_f32_u\0"
  /* 12496 */ "i32.trunc_sat_f32_u\0"
  /* 12516 */ "i64.trunc_sat_f32_u\0"
  /* 12536 */ "i64.extend_i32_u\0"
  /* 12553 */ "f32.convert_i32_u\0"
  /* 12571 */ "f64.convert_i32_u\0"
  /* 12589 */ "i32.trunc_f64_u\0"
  /* 12605 */ "i64.trunc_f64_u\0"
  /* 12621 */ "i32.trunc_sat_f64_u\0"
  /* 12641 */ "i64.trunc_sat_f64_u\0"
  /* 12661 */ "f32.convert_i64_u\0"
  /* 12679 */ "f64.convert_i64_u\0"
  /* 12697 */ "i32x4.relaxed_trunc_f32x4_u\0"
  /* 12725 */ "i32x4.trunc_sat_f32x4_u\0"
  /* 12749 */ "i64x2.extend_high_i32x4_u\0"
  /* 12775 */ "i64x2.extmul_high_i32x4_u\0"
  /* 12801 */ "f32x4.convert_i32x4_u\0"
  /* 12823 */ "i64x2.extend_low_i32x4_u\0"
  /* 12848 */ "i64x2.extmul_low_i32x4_u\0"
  /* 12873 */ "f64x2.convert_low_i32x4_u\0"
  /* 12899 */ "i16x8.narrow_i32x4_u\0"
  /* 12920 */ "i16x8.extadd_pairwise_i8x16_u\0"
  /* 12950 */ "i16x8.extend_high_i8x16_u\0"
  /* 12976 */ "i16x8.extmul_high_i8x16_u\0"
  /* 13002 */ "i16x8.extend_low_i8x16_u\0"
  /* 13027 */ "i16x8.extmul_low_i8x16_u\0"
  /* 13052 */ "i32x4.extadd_pairwise_i16x8_u\0"
  /* 13082 */ "i32x4.extend_high_i16x8_u\0"
  /* 13108 */ "i32x4.extmul_high_i16x8_u\0"
  /* 13134 */ "i32x4.extend_low_i16x8_u\0"
  /* 13159 */ "i32x4.extmul_low_i16x8_u\0"
  /* 13184 */ "i8x16.narrow_i16x8_u\0"
  /* 13205 */ "i32.ge_u\0"
  /* 13214 */ "i64.ge_u\0"
  /* 13223 */ "i32x4.ge_u\0"
  /* 13234 */ "i8x16.ge_u\0"
  /* 13245 */ "i16x8.ge_u\0"
  /* 13256 */ "i32.le_u\0"
  /* 13265 */ "i64.le_u\0"
  /* 13274 */ "i32x4.le_u\0"
  /* 13285 */ "i8x16.le_u\0"
  /* 13296 */ "i16x8.le_u\0"
  /* 13307 */ "i32.rem_u\0"
  /* 13317 */ "i64.rem_u\0"
  /* 13327 */ "i32x4.min_u\0"
  /* 13339 */ "i8x16.min_u\0"
  /* 13351 */ "i16x8.min_u\0"
  /* 13363 */ "i8x16.avgr_u\0"
  /* 13376 */ "i16x8.avgr_u\0"
  /* 13389 */ "i32.shr_u\0"
  /* 13399 */ "i64x2.shr_u\0"
  /* 13411 */ "i64.shr_u\0"
  /* 13421 */ "i32x4.shr_u\0"
  /* 13433 */ "i8x16.shr_u\0"
  /* 13445 */ "i16x8.shr_u\0"
  /* 13457 */ "i8x16.sub_sat_u\0"
  /* 13473 */ "i16x8.sub_sat_u\0"
  /* 13489 */ "i8x16.add_sat_u\0"
  /* 13505 */ "i16x8.add_sat_u\0"
  /* 13521 */ "i32.gt_u\0"
  /* 13530 */ "i64.gt_u\0"
  /* 13539 */ "i32x4.gt_u\0"
  /* 13550 */ "i8x16.gt_u\0"
  /* 13561 */ "i16x8.gt_u\0"
  /* 13572 */ "i32.lt_u\0"
  /* 13581 */ "i64.lt_u\0"
  /* 13590 */ "i32x4.lt_u\0"
  /* 13601 */ "i8x16.lt_u\0"
  /* 13612 */ "i16x8.lt_u\0"
  /* 13623 */ "i32.div_u\0"
  /* 13633 */ "i64.div_u\0"
  /* 13643 */ "i32x4.max_u\0"
  /* 13655 */ "i8x16.max_u\0"
  /* 13667 */ "i16x8.max_u\0"
  /* 13679 */ "f64x2.div\0"
  /* 13689 */ "f32x4.div\0"
  /* 13699 */ "f64x2.max\0"
  /* 13709 */ "f32x4.max\0"
  /* 13719 */ "f64x2.relaxed_max\0"
  /* 13737 */ "f32x4.relaxed_max\0"
  /* 13755 */ "f64x2.pmax\0"
  /* 13766 */ "f32x4.pmax\0"
  /* 13777 */ "local.copy\0"
  /* 13788 */ "end_try\0"
  /* 13796 */ "i32.eqz\0"
  /* 13804 */ "i64.eqz\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    9098U,	// DBG_VALUE
    9155U,	// DBG_VALUE_LIST
    9108U,	// DBG_INSTR_REF
    9122U,	// DBG_PHI
    9130U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    9091U,	// BUNDLE
    9140U,	// LIFETIME_START
    9065U,	// LIFETIME_END
    9078U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    9923U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    8816U,	// PATCHABLE_FUNCTION_ENTER
    8736U,	// PATCHABLE_RET
    8862U,	// PATCHABLE_FUNCTION_EXIT
    8839U,	// PATCHABLE_TAIL_CALL
    8791U,	// PATCHABLE_EVENT_CALL
    8767U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    21345U,	// CALL_PARAMS
    21345U,	// CALL_PARAMS_S
    11959U,	// CALL_RESULTS
    11959U,	// CALL_RESULTS_S
    12261U,	// CATCHRET
    12261U,	// CATCHRET_S
    12270U,	// CLEANUPRET
    12270U,	// CLEANUPRET_S
    9452U,	// COMPILER_FENCE
    9452U,	// COMPILER_FENCE_S
    11952U,	// RET_CALL_RESULTS
    11952U,	// RET_CALL_RESULTS_S
    148009U,	// ABS_F32
    8646U,	// ABS_F32_S
    152373U,	// ABS_F32x4
    11912U,	// ABS_F32x4_S
    148019U,	// ABS_F64
    8655U,	// ABS_F64_S
    152351U,	// ABS_F64x2
    11892U,	// ABS_F64x2_S
    152406U,	// ABS_I16x8
    11942U,	// ABS_I16x8_S
    152384U,	// ABS_I32x4
    11922U,	// ABS_I32x4_S
    152362U,	// ABS_I64x2
    11902U,	// ABS_I64x2_S
    152395U,	// ABS_I8x16
    11932U,	// ABS_I8x16_S
    4342122U,	// ADD_F32
    8484U,	// ADD_F32_S
    4343078U,	// ADD_F32x4
    9308U,	// ADD_F32x4_S
    4342142U,	// ADD_F64
    8502U,	// ADD_F64_S
    4343056U,	// ADD_F64x2
    9288U,	// ADD_F64x2_S
    4343111U,	// ADD_I16x8
    9338U,	// ADD_I16x8_S
    4342132U,	// ADD_I32
    8493U,	// ADD_I32_S
    4343089U,	// ADD_I32x4
    9318U,	// ADD_I32x4_S
    4342152U,	// ADD_I64
    8511U,	// ADD_I64_S
    4343067U,	// ADD_I64x2
    9298U,	// ADD_I64x2_S
    4343100U,	// ADD_I8x16
    9328U,	// ADD_I8x16_S
    4346420U,	// ADD_SAT_S_I16x8
    11676U,	// ADD_SAT_S_I16x8_S
    4346403U,	// ADD_SAT_S_I8x16
    11660U,	// ADD_SAT_S_I8x16_S
    4349676U,	// ADD_SAT_U_I16x8
    13506U,	// ADD_SAT_U_I16x8_S
    4349659U,	// ADD_SAT_U_I8x16
    13490U,	// ADD_SAT_U_I8x16_S
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKDOWN_S
    0U,	// ADJCALLSTACKUP
    0U,	// ADJCALLSTACKUP_S
    149640U,	// ALLTRUE_I16x8
    9665U,	// ALLTRUE_I16x8_S
    149608U,	// ALLTRUE_I32x4
    9635U,	// ALLTRUE_I32x4_S
    149592U,	// ALLTRUE_I64x2
    9620U,	// ALLTRUE_I64x2_S
    149624U,	// ALLTRUE_I8x16
    9650U,	// ALLTRUE_I8x16_S
    4343244U,	// AND
    4347293U,	// ANDNOT
    12361U,	// ANDNOT_S
    4342162U,	// AND_I32
    8520U,	// AND_I32_S
    4342172U,	// AND_I64
    8529U,	// AND_I64_S
    9426U,	// AND_S
    149656U,	// ANYTRUE
    9680U,	// ANYTRUE_S
    0U,	// ARGUMENT_externref
    0U,	// ARGUMENT_externref_S
    0U,	// ARGUMENT_f32
    0U,	// ARGUMENT_f32_S
    0U,	// ARGUMENT_f64
    0U,	// ARGUMENT_f64_S
    0U,	// ARGUMENT_funcref
    0U,	// ARGUMENT_funcref_S
    0U,	// ARGUMENT_i32
    0U,	// ARGUMENT_i32_S
    0U,	// ARGUMENT_i64
    0U,	// ARGUMENT_i64_S
    0U,	// ARGUMENT_v16i8
    0U,	// ARGUMENT_v16i8_S
    0U,	// ARGUMENT_v2f64
    0U,	// ARGUMENT_v2f64_S
    0U,	// ARGUMENT_v2i64
    0U,	// ARGUMENT_v2i64_S
    0U,	// ARGUMENT_v4f32
    0U,	// ARGUMENT_v4f32_S
    0U,	// ARGUMENT_v4i32
    0U,	// ARGUMENT_v4i32_S
    0U,	// ARGUMENT_v8i16
    0U,	// ARGUMENT_v8i16_S
    9439U,	// ATOMIC_FENCE
    9439U,	// ATOMIC_FENCE_S
    25843847U,	// ATOMIC_LOAD16_U_I32_A32
    1349767U,	// ATOMIC_LOAD16_U_I32_A32_S
    25843847U,	// ATOMIC_LOAD16_U_I32_A64
    1349767U,	// ATOMIC_LOAD16_U_I32_A64_S
    25843868U,	// ATOMIC_LOAD16_U_I64_A32
    1349788U,	// ATOMIC_LOAD16_U_I64_A32_S
    25843868U,	// ATOMIC_LOAD16_U_I64_A64
    1349788U,	// ATOMIC_LOAD16_U_I64_A64_S
    25843284U,	// ATOMIC_LOAD32_U_I64_A32
    1349204U,	// ATOMIC_LOAD32_U_I64_A32_S
    25843284U,	// ATOMIC_LOAD32_U_I64_A64
    1349204U,	// ATOMIC_LOAD32_U_I64_A64_S
    25844052U,	// ATOMIC_LOAD8_U_I32_A32
    1349972U,	// ATOMIC_LOAD8_U_I32_A32_S
    25844052U,	// ATOMIC_LOAD8_U_I32_A64
    1349972U,	// ATOMIC_LOAD8_U_I32_A64_S
    25844072U,	// ATOMIC_LOAD8_U_I64_A32
    1349992U,	// ATOMIC_LOAD8_U_I64_A32_S
    25844072U,	// ATOMIC_LOAD8_U_I64_A64
    1349992U,	// ATOMIC_LOAD8_U_I64_A64_S
    25838830U,	// ATOMIC_LOAD_I32_A32
    1344750U,	// ATOMIC_LOAD_I32_A32_S
    25838830U,	// ATOMIC_LOAD_I32_A64
    1344750U,	// ATOMIC_LOAD_I32_A64_S
    25838847U,	// ATOMIC_LOAD_I64_A32
    1344767U,	// ATOMIC_LOAD_I64_A32_S
    25838847U,	// ATOMIC_LOAD_I64_A64
    1344767U,	// ATOMIC_LOAD_I64_A64_S
    92953274U,	// ATOMIC_RMW16_U_ADD_I32_A32
    1350330U,	// ATOMIC_RMW16_U_ADD_I32_A32_S
    92953274U,	// ATOMIC_RMW16_U_ADD_I32_A64
    1350330U,	// ATOMIC_RMW16_U_ADD_I32_A64_S
    92953298U,	// ATOMIC_RMW16_U_ADD_I64_A32
    1350354U,	// ATOMIC_RMW16_U_ADD_I64_A32_S
    92953298U,	// ATOMIC_RMW16_U_ADD_I64_A64
    1350354U,	// ATOMIC_RMW16_U_ADD_I64_A64_S
    92953392U,	// ATOMIC_RMW16_U_AND_I32_A32
    1350448U,	// ATOMIC_RMW16_U_AND_I32_A32_S
    92953392U,	// ATOMIC_RMW16_U_AND_I32_A64
    1350448U,	// ATOMIC_RMW16_U_AND_I32_A64_S
    92953416U,	// ATOMIC_RMW16_U_AND_I64_A32
    1350472U,	// ATOMIC_RMW16_U_AND_I64_A32_S
    92953416U,	// ATOMIC_RMW16_U_AND_I64_A64
    1350472U,	// ATOMIC_RMW16_U_AND_I64_A64_S
    227171521U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32
    1350849U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32_S
    227171521U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64
    1350849U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64_S
    227171549U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32
    1350877U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32_S
    227171549U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64
    1350877U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64_S
    92954089U,	// ATOMIC_RMW16_U_OR_I32_A32
    1351145U,	// ATOMIC_RMW16_U_OR_I32_A32_S
    92954089U,	// ATOMIC_RMW16_U_OR_I32_A64
    1351145U,	// ATOMIC_RMW16_U_OR_I32_A64_S
    92954112U,	// ATOMIC_RMW16_U_OR_I64_A32
    1351168U,	// ATOMIC_RMW16_U_OR_I64_A32_S
    92954112U,	// ATOMIC_RMW16_U_OR_I64_A64
    1351168U,	// ATOMIC_RMW16_U_OR_I64_A64_S
    92953156U,	// ATOMIC_RMW16_U_SUB_I32_A32
    1350212U,	// ATOMIC_RMW16_U_SUB_I32_A32_S
    92953156U,	// ATOMIC_RMW16_U_SUB_I32_A64
    1350212U,	// ATOMIC_RMW16_U_SUB_I32_A64_S
    92953180U,	// ATOMIC_RMW16_U_SUB_I64_A32
    1350236U,	// ATOMIC_RMW16_U_SUB_I64_A32_S
    92953180U,	// ATOMIC_RMW16_U_SUB_I64_A64
    1350236U,	// ATOMIC_RMW16_U_SUB_I64_A64_S
    92953667U,	// ATOMIC_RMW16_U_XCHG_I32_A32
    1350723U,	// ATOMIC_RMW16_U_XCHG_I32_A32_S
    92953667U,	// ATOMIC_RMW16_U_XCHG_I32_A64
    1350723U,	// ATOMIC_RMW16_U_XCHG_I32_A64_S
    92953692U,	// ATOMIC_RMW16_U_XCHG_I64_A32
    1350748U,	// ATOMIC_RMW16_U_XCHG_I64_A32_S
    92953692U,	// ATOMIC_RMW16_U_XCHG_I64_A64
    1350748U,	// ATOMIC_RMW16_U_XCHG_I64_A64_S
    92954203U,	// ATOMIC_RMW16_U_XOR_I32_A32
    1351259U,	// ATOMIC_RMW16_U_XOR_I32_A32_S
    92954203U,	// ATOMIC_RMW16_U_XOR_I32_A64
    1351259U,	// ATOMIC_RMW16_U_XOR_I32_A64_S
    92954227U,	// ATOMIC_RMW16_U_XOR_I64_A32
    1351283U,	// ATOMIC_RMW16_U_XOR_I64_A32_S
    92954227U,	// ATOMIC_RMW16_U_XOR_I64_A64
    1351283U,	// ATOMIC_RMW16_U_XOR_I64_A64_S
    92953250U,	// ATOMIC_RMW32_U_ADD_I64_A32
    1350306U,	// ATOMIC_RMW32_U_ADD_I64_A32_S
    92953250U,	// ATOMIC_RMW32_U_ADD_I64_A64
    1350306U,	// ATOMIC_RMW32_U_ADD_I64_A64_S
    92953368U,	// ATOMIC_RMW32_U_AND_I64_A32
    1350424U,	// ATOMIC_RMW32_U_AND_I64_A32_S
    92953368U,	// ATOMIC_RMW32_U_AND_I64_A64
    1350424U,	// ATOMIC_RMW32_U_AND_I64_A64_S
    227171493U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32
    1350821U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32_S
    227171493U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64
    1350821U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64_S
    92954066U,	// ATOMIC_RMW32_U_OR_I64_A32
    1351122U,	// ATOMIC_RMW32_U_OR_I64_A32_S
    92954066U,	// ATOMIC_RMW32_U_OR_I64_A64
    1351122U,	// ATOMIC_RMW32_U_OR_I64_A64_S
    92953132U,	// ATOMIC_RMW32_U_SUB_I64_A32
    1350188U,	// ATOMIC_RMW32_U_SUB_I64_A32_S
    92953132U,	// ATOMIC_RMW32_U_SUB_I64_A64
    1350188U,	// ATOMIC_RMW32_U_SUB_I64_A64_S
    92953642U,	// ATOMIC_RMW32_U_XCHG_I64_A32
    1350698U,	// ATOMIC_RMW32_U_XCHG_I64_A32_S
    92953642U,	// ATOMIC_RMW32_U_XCHG_I64_A64
    1350698U,	// ATOMIC_RMW32_U_XCHG_I64_A64_S
    92954179U,	// ATOMIC_RMW32_U_XOR_I64_A32
    1351235U,	// ATOMIC_RMW32_U_XOR_I64_A32_S
    92954179U,	// ATOMIC_RMW32_U_XOR_I64_A64
    1351235U,	// ATOMIC_RMW32_U_XOR_I64_A64_S
    92953322U,	// ATOMIC_RMW8_U_ADD_I32_A32
    1350378U,	// ATOMIC_RMW8_U_ADD_I32_A32_S
    92953322U,	// ATOMIC_RMW8_U_ADD_I32_A64
    1350378U,	// ATOMIC_RMW8_U_ADD_I32_A64_S
    92953345U,	// ATOMIC_RMW8_U_ADD_I64_A32
    1350401U,	// ATOMIC_RMW8_U_ADD_I64_A32_S
    92953345U,	// ATOMIC_RMW8_U_ADD_I64_A64
    1350401U,	// ATOMIC_RMW8_U_ADD_I64_A64_S
    92953440U,	// ATOMIC_RMW8_U_AND_I32_A32
    1350496U,	// ATOMIC_RMW8_U_AND_I32_A32_S
    92953440U,	// ATOMIC_RMW8_U_AND_I32_A64
    1350496U,	// ATOMIC_RMW8_U_AND_I32_A64_S
    92953463U,	// ATOMIC_RMW8_U_AND_I64_A32
    1350519U,	// ATOMIC_RMW8_U_AND_I64_A32_S
    92953463U,	// ATOMIC_RMW8_U_AND_I64_A64
    1350519U,	// ATOMIC_RMW8_U_AND_I64_A64_S
    227171577U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32
    1350905U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32_S
    227171577U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64
    1350905U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64_S
    227171604U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32
    1350932U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32_S
    227171604U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64
    1350932U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64_S
    92954135U,	// ATOMIC_RMW8_U_OR_I32_A32
    1351191U,	// ATOMIC_RMW8_U_OR_I32_A32_S
    92954135U,	// ATOMIC_RMW8_U_OR_I32_A64
    1351191U,	// ATOMIC_RMW8_U_OR_I32_A64_S
    92954157U,	// ATOMIC_RMW8_U_OR_I64_A32
    1351213U,	// ATOMIC_RMW8_U_OR_I64_A32_S
    92954157U,	// ATOMIC_RMW8_U_OR_I64_A64
    1351213U,	// ATOMIC_RMW8_U_OR_I64_A64_S
    92953204U,	// ATOMIC_RMW8_U_SUB_I32_A32
    1350260U,	// ATOMIC_RMW8_U_SUB_I32_A32_S
    92953204U,	// ATOMIC_RMW8_U_SUB_I32_A64
    1350260U,	// ATOMIC_RMW8_U_SUB_I32_A64_S
    92953227U,	// ATOMIC_RMW8_U_SUB_I64_A32
    1350283U,	// ATOMIC_RMW8_U_SUB_I64_A32_S
    92953227U,	// ATOMIC_RMW8_U_SUB_I64_A64
    1350283U,	// ATOMIC_RMW8_U_SUB_I64_A64_S
    92953717U,	// ATOMIC_RMW8_U_XCHG_I32_A32
    1350773U,	// ATOMIC_RMW8_U_XCHG_I32_A32_S
    92953717U,	// ATOMIC_RMW8_U_XCHG_I32_A64
    1350773U,	// ATOMIC_RMW8_U_XCHG_I32_A64_S
    92953741U,	// ATOMIC_RMW8_U_XCHG_I64_A32
    1350797U,	// ATOMIC_RMW8_U_XCHG_I64_A32_S
    92953741U,	// ATOMIC_RMW8_U_XCHG_I64_A64
    1350797U,	// ATOMIC_RMW8_U_XCHG_I64_A64_S
    92954251U,	// ATOMIC_RMW8_U_XOR_I32_A32
    1351307U,	// ATOMIC_RMW8_U_XOR_I32_A32_S
    92954251U,	// ATOMIC_RMW8_U_XOR_I32_A64
    1351307U,	// ATOMIC_RMW8_U_XOR_I32_A64_S
    92954274U,	// ATOMIC_RMW8_U_XOR_I64_A32
    1351330U,	// ATOMIC_RMW8_U_XOR_I64_A32_S
    92954274U,	// ATOMIC_RMW8_U_XOR_I64_A64
    1351330U,	// ATOMIC_RMW8_U_XOR_I64_A64_S
    92947794U,	// ATOMIC_RMW_ADD_I32_A32
    1344850U,	// ATOMIC_RMW_ADD_I32_A32_S
    92947794U,	// ATOMIC_RMW_ADD_I32_A64
    1344850U,	// ATOMIC_RMW_ADD_I32_A64_S
    92947814U,	// ATOMIC_RMW_ADD_I64_A32
    1344870U,	// ATOMIC_RMW_ADD_I64_A32_S
    92947814U,	// ATOMIC_RMW_ADD_I64_A64
    1344870U,	// ATOMIC_RMW_ADD_I64_A64_S
    92947926U,	// ATOMIC_RMW_AND_I32_A32
    1344982U,	// ATOMIC_RMW_AND_I32_A32_S
    92947926U,	// ATOMIC_RMW_AND_I32_A64
    1344982U,	// ATOMIC_RMW_AND_I32_A64_S
    92947946U,	// ATOMIC_RMW_AND_I64_A32
    1345002U,	// ATOMIC_RMW_AND_I64_A32_S
    92947946U,	// ATOMIC_RMW_AND_I64_A64
    1345002U,	// ATOMIC_RMW_AND_I64_A64_S
    227166508U,	// ATOMIC_RMW_CMPXCHG_I32_A32
    1345836U,	// ATOMIC_RMW_CMPXCHG_I32_A32_S
    227166508U,	// ATOMIC_RMW_CMPXCHG_I32_A64
    1345836U,	// ATOMIC_RMW_CMPXCHG_I32_A64_S
    227166532U,	// ATOMIC_RMW_CMPXCHG_I64_A32
    1345860U,	// ATOMIC_RMW_CMPXCHG_I64_A32_S
    227166532U,	// ATOMIC_RMW_CMPXCHG_I64_A64
    1345860U,	// ATOMIC_RMW_CMPXCHG_I64_A64_S
    92949483U,	// ATOMIC_RMW_OR_I32_A32
    1346539U,	// ATOMIC_RMW_OR_I32_A32_S
    92949483U,	// ATOMIC_RMW_OR_I32_A64
    1346539U,	// ATOMIC_RMW_OR_I32_A64_S
    92949502U,	// ATOMIC_RMW_OR_I64_A32
    1346558U,	// ATOMIC_RMW_OR_I64_A32_S
    92949502U,	// ATOMIC_RMW_OR_I64_A64
    1346558U,	// ATOMIC_RMW_OR_I64_A64_S
    92947555U,	// ATOMIC_RMW_SUB_I32_A32
    1344611U,	// ATOMIC_RMW_SUB_I32_A32_S
    92947555U,	// ATOMIC_RMW_SUB_I32_A64
    1344611U,	// ATOMIC_RMW_SUB_I32_A64_S
    92947575U,	// ATOMIC_RMW_SUB_I64_A32
    1344631U,	// ATOMIC_RMW_SUB_I64_A32_S
    92947575U,	// ATOMIC_RMW_SUB_I64_A64
    1344631U,	// ATOMIC_RMW_SUB_I64_A64_S
    92948738U,	// ATOMIC_RMW_XCHG_I32_A32
    1345794U,	// ATOMIC_RMW_XCHG_I32_A32_S
    92948738U,	// ATOMIC_RMW_XCHG_I32_A64
    1345794U,	// ATOMIC_RMW_XCHG_I32_A64_S
    92948759U,	// ATOMIC_RMW_XCHG_I64_A32
    1345815U,	// ATOMIC_RMW_XCHG_I64_A32_S
    92948759U,	// ATOMIC_RMW_XCHG_I64_A64
    1345815U,	// ATOMIC_RMW_XCHG_I64_A64_S
    92949579U,	// ATOMIC_RMW_XOR_I32_A32
    1346635U,	// ATOMIC_RMW_XOR_I32_A32_S
    92949579U,	// ATOMIC_RMW_XOR_I32_A64
    1346635U,	// ATOMIC_RMW_XOR_I32_A64_S
    92949599U,	// ATOMIC_RMW_XOR_I64_A32
    1346655U,	// ATOMIC_RMW_XOR_I64_A32_S
    92949599U,	// ATOMIC_RMW_XOR_I64_A64
    1346655U,	// ATOMIC_RMW_XOR_I64_A64_S
    13534139U,	// ATOMIC_STORE16_I32_A32
    1344443U,	// ATOMIC_STORE16_I32_A32_S
    13534139U,	// ATOMIC_STORE16_I32_A64
    1344443U,	// ATOMIC_STORE16_I32_A64_S
    13534159U,	// ATOMIC_STORE16_I64_A32
    1344463U,	// ATOMIC_STORE16_I64_A32_S
    13534159U,	// ATOMIC_STORE16_I64_A64
    1344463U,	// ATOMIC_STORE16_I64_A64_S
    13533903U,	// ATOMIC_STORE32_I64_A32
    1344207U,	// ATOMIC_STORE32_I64_A32_S
    13533903U,	// ATOMIC_STORE32_I64_A64
    1344207U,	// ATOMIC_STORE32_I64_A64_S
    13534203U,	// ATOMIC_STORE8_I32_A32
    1344507U,	// ATOMIC_STORE8_I32_A32_S
    13534203U,	// ATOMIC_STORE8_I32_A64
    1344507U,	// ATOMIC_STORE8_I32_A64_S
    13534222U,	// ATOMIC_STORE8_I64_A32
    1344526U,	// ATOMIC_STORE8_I64_A32_S
    13534222U,	// ATOMIC_STORE8_I64_A64
    1344526U,	// ATOMIC_STORE8_I64_A64_S
    13535284U,	// ATOMIC_STORE_I32_A32
    1345588U,	// ATOMIC_STORE_I32_A32_S
    13535284U,	// ATOMIC_STORE_I32_A64
    1345588U,	// ATOMIC_STORE_I32_A64_S
    13535302U,	// ATOMIC_STORE_I64_A32
    1345606U,	// ATOMIC_STORE_I64_A32_S
    13535302U,	// ATOMIC_STORE_I64_A64
    1345606U,	// ATOMIC_STORE_I64_A64_S
    4349306U,	// AVGR_U_I16x8
    13377U,	// AVGR_U_I16x8_S
    4349292U,	// AVGR_U_I8x16
    13364U,	// AVGR_U_I8x16_S
    149897U,	// BITMASK_I16x8
    9819U,	// BITMASK_I16x8_S
    149867U,	// BITMASK_I32x4
    9791U,	// BITMASK_I32x4_S
    149852U,	// BITMASK_I64x2
    9777U,	// BITMASK_I64x2_S
    149882U,	// BITMASK_I8x16
    9805U,	// BITMASK_I8x16_S
    37901518U,	// BITSELECT
    12232U,	// BITSELECT_S
    49228U,	// BLOCK
    49228U,	// BLOCK_S
    16385U,	// BR
    147512U,	// BR_IF
    16440U,	// BR_IF_S
    16385U,	// BR_S
    16806U,	// BR_TABLE_I32
    65958U,	// BR_TABLE_I32_S
    16806U,	// BR_TABLE_I64
    65958U,	// BR_TABLE_I64_S
    0U,	// BR_UNLESS
    0U,	// BR_UNLESS_S
    9932U,	// CALL
    12247U,	// CALL_INDIRECT
    152805U,	// CALL_INDIRECT_S
    18935U,	// CALL_S
    9761U,	// CATCH
    9913U,	// CATCH_ALL
    9913U,	// CATCH_ALL_S
    16450U,	// CATCH_S
    149956U,	// CEIL_F32
    9873U,	// CEIL_F32_S
    149988U,	// CEIL_F32x4
    9902U,	// CEIL_F32x4_S
    149978U,	// CEIL_F64
    9893U,	// CEIL_F64_S
    149966U,	// CEIL_F64x2
    9882U,	// CEIL_F64x2_S
    148102U,	// CLZ_I32
    8700U,	// CLZ_I32_S
    148112U,	// CLZ_I64
    8709U,	// CLZ_I64_S
    153102U,	// CONST_F32
    22030U,	// CONST_F32_S
    153124U,	// CONST_F64
    22052U,	// CONST_F64_S
    153113U,	// CONST_I32
    22041U,	// CONST_I32_S
    153135U,	// CONST_I64
    22063U,	// CONST_I64_S
    105010746U,	// CONST_V128_F32x4
    37901882U,	// CONST_V128_F32x4_S
    4347450U,	// CONST_V128_F64x2
    153146U,	// CONST_V128_F64x2_S
    507663930U,	// CONST_V128_I16x8
    1044534842U,	// CONST_V128_I16x8_S
    105010746U,	// CONST_V128_I32x4
    37901882U,	// CONST_V128_I32x4_S
    4347450U,	// CONST_V128_I64x2
    153146U,	// CONST_V128_I64x2_S
    1581405754U,	// CONST_V128_I8x16
    3728889402U,	// CONST_V128_I8x16_S
    4344430U,	// COPYSIGN_F32
    10017U,	// COPYSIGN_F32_S
    4344444U,	// COPYSIGN_F64
    10030U,	// COPYSIGN_F64_S
    155705U,	// COPY_EXTERNREF
    13778U,	// COPY_EXTERNREF_S
    155705U,	// COPY_F32
    13778U,	// COPY_F32_S
    155705U,	// COPY_F64
    13778U,	// COPY_F64_S
    155705U,	// COPY_FUNCREF
    13778U,	// COPY_FUNCREF_S
    155705U,	// COPY_I32
    13778U,	// COPY_I32_S
    155705U,	// COPY_I64
    13778U,	// COPY_I64_S
    155705U,	// COPY_V128
    13778U,	// COPY_V128_S
    148142U,	// CTZ_I32
    8718U,	// CTZ_I32_S
    148152U,	// CTZ_I64
    8727U,	// CTZ_I64_S
    9513U,	// DEBUG_UNREACHABLE
    9513U,	// DEBUG_UNREACHABLE_S
    24658U,	// DELEGATE
    24658U,	// DELEGATE_S
    4342333U,	// DIV_F32
    8664U,	// DIV_F32_S
    4349877U,	// DIV_F32x4
    13690U,	// DIV_F32x4_S
    4342343U,	// DIV_F64
    8673U,	// DIV_F64_S
    4349866U,	// DIV_F64x2
    13680U,	// DIV_F64x2_S
    4346594U,	// DIV_S_I32
    11836U,	// DIV_S_I32_S
    4346605U,	// DIV_S_I64
    11846U,	// DIV_S_I64_S
    4349805U,	// DIV_U_I32
    13624U,	// DIV_U_I32_S
    4349816U,	// DIV_U_I64
    13634U,	// DIV_U_I64_S
    4345882U,	// DOT
    11231U,	// DOT_S
    19360U,	// DROP_EXTERNREF
    10318U,	// DROP_EXTERNREF_S
    19360U,	// DROP_F32
    10318U,	// DROP_F32_S
    19360U,	// DROP_F64
    10318U,	// DROP_F64_S
    19360U,	// DROP_FUNCREF
    10318U,	// DROP_FUNCREF_S
    19360U,	// DROP_I32
    10318U,	// DROP_I32_S
    19360U,	// DROP_I64
    10318U,	// DROP_I64_S
    19360U,	// DROP_V128
    10318U,	// DROP_V128_S
    9615U,	// ELSE
    9615U,	// ELSE_S
    9435U,	// END
    9767U,	// END_BLOCK
    9767U,	// END_BLOCK_S
    10121U,	// END_FUNCTION
    10121U,	// END_FUNCTION_S
    9694U,	// END_IF
    9694U,	// END_IF_S
    10309U,	// END_LOOP
    10309U,	// END_LOOP_S
    9435U,	// END_S
    13789U,	// END_TRY
    13789U,	// END_TRY_S
    148122U,	// EQZ_I32
    13797U,	// EQZ_I32_S
    148132U,	// EQZ_I64
    13805U,	// EQZ_I64_S
    4341936U,	// EQ_F32
    8358U,	// EQ_F32_S
    4344762U,	// EQ_F32x4
    10341U,	// EQ_F32x4_S
    4341956U,	// EQ_F64
    8376U,	// EQ_F64_S
    4344742U,	// EQ_F64x2
    10323U,	// EQ_F64x2_S
    4344792U,	// EQ_I16x8
    10368U,	// EQ_I16x8_S
    4341946U,	// EQ_I32
    8367U,	// EQ_I32_S
    4344772U,	// EQ_I32x4
    10350U,	// EQ_I32x4_S
    4341966U,	// EQ_I64
    8385U,	// EQ_I64_S
    4344752U,	// EQ_I64x2
    10332U,	// EQ_I64x2_S
    4344782U,	// EQ_I8x16
    10359U,	// EQ_I8x16_S
    4345662U,	// EXTMUL_HIGH_S_I16x8
    11045U,	// EXTMUL_HIGH_S_I16x8_S
    4345855U,	// EXTMUL_HIGH_S_I32x4
    11205U,	// EXTMUL_HIGH_S_I32x4_S
    4345342U,	// EXTMUL_HIGH_S_I64x2
    10782U,	// EXTMUL_HIGH_S_I64x2_S
    4348139U,	// EXTMUL_HIGH_U_I16x8
    12977U,	// EXTMUL_HIGH_U_I16x8_S
    4348342U,	// EXTMUL_HIGH_U_I32x4
    13109U,	// EXTMUL_HIGH_U_I32x4_S
    4347842U,	// EXTMUL_HIGH_U_I64x2
    12776U,	// EXTMUL_HIGH_U_I64x2_S
    4345715U,	// EXTMUL_LOW_S_I16x8
    11096U,	// EXTMUL_LOW_S_I16x8_S
    4345927U,	// EXTMUL_LOW_S_I32x4
    11274U,	// EXTMUL_LOW_S_I32x4_S
    4345418U,	// EXTMUL_LOW_S_I64x2
    10855U,	// EXTMUL_LOW_S_I64x2_S
    4348192U,	// EXTMUL_LOW_U_I16x8
    13028U,	// EXTMUL_LOW_U_I16x8_S
    4348395U,	// EXTMUL_LOW_U_I32x4
    13160U,	// EXTMUL_LOW_U_I32x4_S
    4347918U,	// EXTMUL_LOW_U_I64x2
    12849U,	// EXTMUL_LOW_U_I64x2_S
    4343764U,	// EXTRACT_LANE_F32x4
    18388U,	// EXTRACT_LANE_F32x4_S
    4343724U,	// EXTRACT_LANE_F64x2
    18348U,	// EXTRACT_LANE_F64x2_S
    4346187U,	// EXTRACT_LANE_I16x8_s
    20811U,	// EXTRACT_LANE_I16x8_s_S
    4348948U,	// EXTRACT_LANE_I16x8_u
    23572U,	// EXTRACT_LANE_I16x8_u_S
    4343784U,	// EXTRACT_LANE_I32x4
    18408U,	// EXTRACT_LANE_I32x4_S
    4343744U,	// EXTRACT_LANE_I64x2
    18368U,	// EXTRACT_LANE_I64x2_S
    4346165U,	// EXTRACT_LANE_I8x16_s
    20789U,	// EXTRACT_LANE_I8x16_s_S
    4348926U,	// EXTRACT_LANE_I8x16_u
    23550U,	// EXTRACT_LANE_I8x16_u_S
    150787U,	// F32_CONVERT_S_I32
    10560U,	// F32_CONVERT_S_I32_S
    150919U,	// F32_CONVERT_S_I64
    10668U,	// F32_CONVERT_S_I64_S
    153287U,	// F32_CONVERT_U_I32
    12554U,	// F32_CONVERT_U_I32_S
    153419U,	// F32_CONVERT_U_I64
    12662U,	// F32_CONVERT_U_I64_S
    148288U,	// F32_DEMOTE_F64
    8973U,	// F32_DEMOTE_F64_S
    148267U,	// F32_REINTERPRET_I32
    8953U,	// F32_REINTERPRET_I32_S
    150806U,	// F64_CONVERT_S_I32
    10578U,	// F64_CONVERT_S_I32_S
    150938U,	// F64_CONVERT_S_I64
    10686U,	// F64_CONVERT_S_I64_S
    153306U,	// F64_CONVERT_U_I32
    12572U,	// F64_CONVERT_U_I32_S
    153438U,	// F64_CONVERT_U_I64
    12680U,	// F64_CONVERT_U_I64_S
    148229U,	// F64_PROMOTE_F32
    8917U,	// F64_PROMOTE_F32_S
    148339U,	// F64_REINTERPRET_I64
    9021U,	// F64_REINTERPRET_I64_S
    0U,	// FALLTHROUGH_RETURN
    0U,	// FALLTHROUGH_RETURN_S
    150545U,	// FLOOR_F32
    10385U,	// FLOOR_F32_S
    150580U,	// FLOOR_F32x4
    10417U,	// FLOOR_F32x4_S
    150569U,	// FLOOR_F64
    10407U,	// FLOOR_F64_S
    150556U,	// FLOOR_F64x2
    10395U,	// FLOOR_F64x2_S
    0U,	// FP_TO_SINT_I32_F32
    0U,	// FP_TO_SINT_I32_F32_S
    0U,	// FP_TO_SINT_I32_F64
    0U,	// FP_TO_SINT_I32_F64_S
    0U,	// FP_TO_SINT_I64_F32
    0U,	// FP_TO_SINT_I64_F32_S
    0U,	// FP_TO_SINT_I64_F64
    0U,	// FP_TO_SINT_I64_F64_S
    0U,	// FP_TO_UINT_I32_F32
    0U,	// FP_TO_UINT_I32_F32_S
    0U,	// FP_TO_UINT_I32_F64
    0U,	// FP_TO_UINT_I32_F64_S
    0U,	// FP_TO_UINT_I64_F32
    0U,	// FP_TO_UINT_I64_F32_S
    0U,	// FP_TO_UINT_I64_F64
    0U,	// FP_TO_UINT_I64_F64_S
    4341856U,	// GE_F32
    8286U,	// GE_F32_S
    4343315U,	// GE_F32x4
    9486U,	// GE_F32x4_S
    4341866U,	// GE_F64
    8295U,	// GE_F64_S
    4343305U,	// GE_F64x2
    9477U,	// GE_F64x2_S
    4346085U,	// GE_S_I16x8
    11407U,	// GE_S_I16x8_S
    4346029U,	// GE_S_I32
    11356U,	// GE_S_I32_S
    4346061U,	// GE_S_I32x4
    11385U,	// GE_S_I32x4_S
    4346051U,	// GE_S_I64
    11376U,	// GE_S_I64_S
    4346039U,	// GE_S_I64x2
    11365U,	// GE_S_I64x2_S
    4346073U,	// GE_S_I8x16
    11396U,	// GE_S_I8x16_S
    4348858U,	// GE_U_I16x8
    13246U,	// GE_U_I16x8_S
    4348814U,	// GE_U_I32
    13206U,	// GE_U_I32_S
    4348834U,	// GE_U_I32x4
    13224U,	// GE_U_I32x4_S
    4348824U,	// GE_U_I64
    13215U,	// GE_U_I64_S
    4348846U,	// GE_U_I8x16
    13235U,	// GE_U_I8x16_S
    152831U,	// GLOBAL_GET_EXTERNREF
    21759U,	// GLOBAL_GET_EXTERNREF_S
    152831U,	// GLOBAL_GET_F32
    21759U,	// GLOBAL_GET_F32_S
    152831U,	// GLOBAL_GET_F64
    21759U,	// GLOBAL_GET_F64_S
    152831U,	// GLOBAL_GET_FUNCREF
    21759U,	// GLOBAL_GET_FUNCREF_S
    152831U,	// GLOBAL_GET_I32
    21759U,	// GLOBAL_GET_I32_S
    152831U,	// GLOBAL_GET_I64
    21759U,	// GLOBAL_GET_I64_S
    152831U,	// GLOBAL_GET_V128
    21759U,	// GLOBAL_GET_V128_S
    152865U,	// GLOBAL_SET_EXTERNREF
    21793U,	// GLOBAL_SET_EXTERNREF_S
    152865U,	// GLOBAL_SET_F32
    21793U,	// GLOBAL_SET_F32_S
    152865U,	// GLOBAL_SET_F64
    21793U,	// GLOBAL_SET_F64_S
    152865U,	// GLOBAL_SET_FUNCREF
    21793U,	// GLOBAL_SET_FUNCREF_S
    152865U,	// GLOBAL_SET_I32
    21793U,	// GLOBAL_SET_I32_S
    152865U,	// GLOBAL_SET_I64
    21793U,	// GLOBAL_SET_I64_S
    152865U,	// GLOBAL_SET_V128
    21793U,	// GLOBAL_SET_V128_S
    4341996U,	// GT_F32
    8412U,	// GT_F32_S
    4347202U,	// GT_F32x4
    12290U,	// GT_F32x4_S
    4342006U,	// GT_F64
    8421U,	// GT_F64_S
    4347192U,	// GT_F64x2
    12281U,	// GT_F64x2_S
    4346514U,	// GT_S_I16x8
    11763U,	// GT_S_I16x8_S
    4346458U,	// GT_S_I32
    11712U,	// GT_S_I32_S
    4346490U,	// GT_S_I32x4
    11741U,	// GT_S_I32x4_S
    4346480U,	// GT_S_I64
    11732U,	// GT_S_I64_S
    4346468U,	// GT_S_I64x2
    11721U,	// GT_S_I64x2_S
    4346502U,	// GT_S_I8x16
    11752U,	// GT_S_I8x16_S
    4349737U,	// GT_U_I16x8
    13562U,	// GT_U_I16x8_S
    4349693U,	// GT_U_I32
    13522U,	// GT_U_I32_S
    4349713U,	// GT_U_I32x4
    13540U,	// GT_U_I32x4_S
    4349703U,	// GT_U_I64
    13531U,	// GT_U_I64_S
    4349725U,	// GT_U_I8x16
    13551U,	// GT_U_I8x16_S
    151235U,	// I32_EXTEND16_S_I32
    10927U,	// I32_EXTEND16_S_I32_S
    151463U,	// I32_EXTEND8_S_I32
    11121U,	// I32_EXTEND8_S_I32_S
    148246U,	// I32_REINTERPRET_F32
    8933U,	// I32_REINTERPRET_F32_S
    150693U,	// I32_TRUNC_S_F32
    10471U,	// I32_TRUNC_S_F32_S
    150843U,	// I32_TRUNC_S_F64
    10596U,	// I32_TRUNC_S_F64_S
    150727U,	// I32_TRUNC_S_SAT_F32
    10503U,	// I32_TRUNC_S_SAT_F32_S
    150877U,	// I32_TRUNC_S_SAT_F64
    10628U,	// I32_TRUNC_S_SAT_F64_S
    153193U,	// I32_TRUNC_U_F32
    12465U,	// I32_TRUNC_U_F32_S
    153343U,	// I32_TRUNC_U_F64
    12590U,	// I32_TRUNC_U_F64_S
    153227U,	// I32_TRUNC_U_SAT_F32
    12497U,	// I32_TRUNC_U_SAT_F32_S
    153377U,	// I32_TRUNC_U_SAT_F64
    12622U,	// I32_TRUNC_U_SAT_F64_S
    148325U,	// I32_WRAP_I64
    9008U,	// I32_WRAP_I64_S
    151251U,	// I64_EXTEND16_S_I64
    10942U,	// I64_EXTEND16_S_I64_S
    150677U,	// I64_EXTEND32_S_I64
    10456U,	// I64_EXTEND32_S_I64_S
    151478U,	// I64_EXTEND8_S_I64
    11135U,	// I64_EXTEND8_S_I64_S
    150769U,	// I64_EXTEND_S_I32
    10543U,	// I64_EXTEND_S_I32_S
    153269U,	// I64_EXTEND_U_I32
    12537U,	// I64_EXTEND_U_I32_S
    148304U,	// I64_REINTERPRET_F64
    8988U,	// I64_REINTERPRET_F64_S
    150710U,	// I64_TRUNC_S_F32
    10487U,	// I64_TRUNC_S_F32_S
    150860U,	// I64_TRUNC_S_F64
    10612U,	// I64_TRUNC_S_F64_S
    150748U,	// I64_TRUNC_S_SAT_F32
    10523U,	// I64_TRUNC_S_SAT_F32_S
    150898U,	// I64_TRUNC_S_SAT_F64
    10648U,	// I64_TRUNC_S_SAT_F64_S
    153210U,	// I64_TRUNC_U_F32
    12481U,	// I64_TRUNC_U_F32_S
    153360U,	// I64_TRUNC_U_F64
    12606U,	// I64_TRUNC_U_F64_S
    153248U,	// I64_TRUNC_U_SAT_F32
    12517U,	// I64_TRUNC_U_SAT_F32_S
    153398U,	// I64_TRUNC_U_SAT_F64
    12642U,	// I64_TRUNC_U_SAT_F64_S
    180245U,	// IF
    49173U,	// IF_S
    37901492U,	// LANESELECT_I16x8
    12207U,	// LANESELECT_I16x8_S
    37901440U,	// LANESELECT_I32x4
    12157U,	// LANESELECT_I32x4_S
    37901414U,	// LANESELECT_I64x2
    12132U,	// LANESELECT_I64x2_S
    37901466U,	// LANESELECT_I8x16
    12182U,	// LANESELECT_I8x16_S
    4341876U,	// LE_F32
    8304U,	// LE_F32_S
    4343335U,	// LE_F32x4
    9504U,	// LE_F32x4_S
    4341886U,	// LE_F64
    8313U,	// LE_F64_S
    4343325U,	// LE_F64x2
    9495U,	// LE_F64x2_S
    4346153U,	// LE_S_I16x8
    11469U,	// LE_S_I16x8_S
    4346097U,	// LE_S_I32
    11418U,	// LE_S_I32_S
    4346129U,	// LE_S_I32x4
    11447U,	// LE_S_I32x4_S
    4346119U,	// LE_S_I64
    11438U,	// LE_S_I64_S
    4346107U,	// LE_S_I64x2
    11427U,	// LE_S_I64x2_S
    4346141U,	// LE_S_I8x16
    11458U,	// LE_S_I8x16_S
    4348914U,	// LE_U_I16x8
    13297U,	// LE_U_I16x8_S
    4348870U,	// LE_U_I32
    13257U,	// LE_U_I32_S
    4348890U,	// LE_U_I32x4
    13275U,	// LE_U_I32x4_S
    4348880U,	// LE_U_I64
    13266U,	// LE_U_I64_S
    4348902U,	// LE_U_I8x16
    13286U,	// LE_U_I8x16_S
    25842658U,	// LOAD16_SPLAT_A32
    1348578U,	// LOAD16_SPLAT_A32_S
    25842658U,	// LOAD16_SPLAT_A64
    1348578U,	// LOAD16_SPLAT_A64_S
    25841319U,	// LOAD16_S_I32_A32
    1347239U,	// LOAD16_S_I32_A32_S
    25841319U,	// LOAD16_S_I32_A64
    1347239U,	// LOAD16_S_I32_A64_S
    25841333U,	// LOAD16_S_I64_A32
    1347253U,	// LOAD16_S_I64_A32_S
    25841333U,	// LOAD16_S_I64_A64
    1347253U,	// LOAD16_S_I64_A64_S
    25843819U,	// LOAD16_U_I32_A32
    1349739U,	// LOAD16_U_I32_A32_S
    25843819U,	// LOAD16_U_I32_A64
    1349739U,	// LOAD16_U_I32_A64_S
    25843833U,	// LOAD16_U_I64_A32
    1349753U,	// LOAD16_U_I64_A32_S
    25843833U,	// LOAD16_U_I64_A64
    1349753U,	// LOAD16_U_I64_A64_S
    25842620U,	// LOAD32_SPLAT_A32
    1348540U,	// LOAD32_SPLAT_A32_S
    25842620U,	// LOAD32_SPLAT_A64
    1348540U,	// LOAD32_SPLAT_A64_S
    25840775U,	// LOAD32_S_I64_A32
    1346695U,	// LOAD32_S_I64_A32_S
    25840775U,	// LOAD32_S_I64_A64
    1346695U,	// LOAD32_S_I64_A64_S
    25843270U,	// LOAD32_U_I64_A32
    1349190U,	// LOAD32_U_I64_A32_S
    25843270U,	// LOAD32_U_I64_A64
    1349190U,	// LOAD32_U_I64_A64_S
    25842639U,	// LOAD64_SPLAT_A32
    1348559U,	// LOAD64_SPLAT_A32_S
    25842639U,	// LOAD64_SPLAT_A64
    1348559U,	// LOAD64_SPLAT_A64_S
    25842677U,	// LOAD8_SPLAT_A32
    1348597U,	// LOAD8_SPLAT_A32_S
    25842677U,	// LOAD8_SPLAT_A64
    1348597U,	// LOAD8_SPLAT_A64_S
    25841549U,	// LOAD8_S_I32_A32
    1347469U,	// LOAD8_S_I32_A32_S
    25841549U,	// LOAD8_S_I32_A64
    1347469U,	// LOAD8_S_I32_A64_S
    25841562U,	// LOAD8_S_I64_A32
    1347482U,	// LOAD8_S_I64_A32_S
    25841562U,	// LOAD8_S_I64_A64
    1347482U,	// LOAD8_S_I64_A64_S
    25844026U,	// LOAD8_U_I32_A32
    1349946U,	// LOAD8_U_I32_A32_S
    25844026U,	// LOAD8_U_I32_A64
    1349946U,	// LOAD8_U_I32_A64_S
    25844039U,	// LOAD8_U_I64_A32
    1349959U,	// LOAD8_U_I64_A32_S
    25844039U,	// LOAD8_U_I64_A64
    1349959U,	// LOAD8_U_I64_A64_S
    25841783U,	// LOAD_EXTEND_S_I16x8_A32
    1347703U,	// LOAD_EXTEND_S_I16x8_A32_S
    25841783U,	// LOAD_EXTEND_S_I16x8_A64
    1347703U,	// LOAD_EXTEND_S_I16x8_A64_S
    25841301U,	// LOAD_EXTEND_S_I32x4_A32
    1347221U,	// LOAD_EXTEND_S_I32x4_A32_S
    25841301U,	// LOAD_EXTEND_S_I32x4_A64
    1347221U,	// LOAD_EXTEND_S_I32x4_A64_S
    25840937U,	// LOAD_EXTEND_S_I64x2_A32
    1346857U,	// LOAD_EXTEND_S_I64x2_A32_S
    25840937U,	// LOAD_EXTEND_S_I64x2_A64
    1346857U,	// LOAD_EXTEND_S_I64x2_A64_S
    25844251U,	// LOAD_EXTEND_U_I16x8_A32
    1350171U,	// LOAD_EXTEND_U_I16x8_A32_S
    25844251U,	// LOAD_EXTEND_U_I16x8_A64
    1350171U,	// LOAD_EXTEND_U_I16x8_A64_S
    25843801U,	// LOAD_EXTEND_U_I32x4_A32
    1349721U,	// LOAD_EXTEND_U_I32x4_A32_S
    25843801U,	// LOAD_EXTEND_U_I32x4_A64
    1349721U,	// LOAD_EXTEND_U_I32x4_A64_S
    25843437U,	// LOAD_EXTEND_U_I64x2_A32
    1349357U,	// LOAD_EXTEND_U_I64x2_A32_S
    25843437U,	// LOAD_EXTEND_U_I64x2_A64
    1349357U,	// LOAD_EXTEND_U_I64x2_A64_S
    25838779U,	// LOAD_F32_A32
    1344699U,	// LOAD_F32_A32_S
    25838779U,	// LOAD_F32_A64
    1344699U,	// LOAD_F32_A64_S
    25838799U,	// LOAD_F64_A32
    1344719U,	// LOAD_F64_A32_S
    25838799U,	// LOAD_F64_A64
    1344719U,	// LOAD_F64_A64_S
    25838789U,	// LOAD_I32_A32
    1344709U,	// LOAD_I32_A32_S
    25838789U,	// LOAD_I32_A64
    1344709U,	// LOAD_I32_A64_S
    25838809U,	// LOAD_I64_A32
    1344729U,	// LOAD_I64_A32_S
    25838809U,	// LOAD_I64_A64
    1344729U,	// LOAD_I64_A64_S
    59393772U,	// LOAD_LANE_I16x8_A32
    1869548U,	// LOAD_LANE_I16x8_A32_S
    59393772U,	// LOAD_LANE_I16x8_A64
    1869548U,	// LOAD_LANE_I16x8_A64_S
    59393698U,	// LOAD_LANE_I32x4_A32
    1869474U,	// LOAD_LANE_I32x4_A32_S
    59393698U,	// LOAD_LANE_I32x4_A64
    1869474U,	// LOAD_LANE_I32x4_A64_S
    59393735U,	// LOAD_LANE_I64x2_A32
    1869511U,	// LOAD_LANE_I64x2_A32_S
    59393735U,	// LOAD_LANE_I64x2_A64
    1869511U,	// LOAD_LANE_I64x2_A64_S
    59393809U,	// LOAD_LANE_I8x16_A32
    1869585U,	// LOAD_LANE_I8x16_A32_S
    59393809U,	// LOAD_LANE_I8x16_A64
    1869585U,	// LOAD_LANE_I8x16_A64_S
    25838819U,	// LOAD_V128_A32
    1344739U,	// LOAD_V128_A32_S
    25838819U,	// LOAD_V128_A64
    1344739U,	// LOAD_V128_A64_S
    25840350U,	// LOAD_ZERO_I32x4_A32
    1346270U,	// LOAD_ZERO_I32x4_A32_S
    25840350U,	// LOAD_ZERO_I32x4_A64
    1346270U,	// LOAD_ZERO_I32x4_A64_S
    25840393U,	// LOAD_ZERO_I64x2_A32
    1346313U,	// LOAD_ZERO_I64x2_A32_S
    25840393U,	// LOAD_ZERO_I64x2_A64
    1346313U,	// LOAD_ZERO_I64x2_A64_S
    152843U,	// LOCAL_GET_EXTERNREF
    21771U,	// LOCAL_GET_EXTERNREF_S
    152843U,	// LOCAL_GET_F32
    21771U,	// LOCAL_GET_F32_S
    152843U,	// LOCAL_GET_F64
    21771U,	// LOCAL_GET_F64_S
    152843U,	// LOCAL_GET_FUNCREF
    21771U,	// LOCAL_GET_FUNCREF_S
    152843U,	// LOCAL_GET_I32
    21771U,	// LOCAL_GET_I32_S
    152843U,	// LOCAL_GET_I64
    21771U,	// LOCAL_GET_I64_S
    152843U,	// LOCAL_GET_V128
    21771U,	// LOCAL_GET_V128_S
    152877U,	// LOCAL_SET_EXTERNREF
    21805U,	// LOCAL_SET_EXTERNREF_S
    152877U,	// LOCAL_SET_F32
    21805U,	// LOCAL_SET_F32_S
    152877U,	// LOCAL_SET_F64
    21805U,	// LOCAL_SET_F64_S
    152877U,	// LOCAL_SET_FUNCREF
    21805U,	// LOCAL_SET_FUNCREF_S
    152877U,	// LOCAL_SET_I32
    21805U,	// LOCAL_SET_I32_S
    152877U,	// LOCAL_SET_I64
    21805U,	// LOCAL_SET_I64_S
    152877U,	// LOCAL_SET_V128
    21805U,	// LOCAL_SET_V128_S
    4343294U,	// LOCAL_TEE_EXTERNREF
    17918U,	// LOCAL_TEE_EXTERNREF_S
    4343294U,	// LOCAL_TEE_F32
    17918U,	// LOCAL_TEE_F32_S
    4343294U,	// LOCAL_TEE_F64
    17918U,	// LOCAL_TEE_F64_S
    4343294U,	// LOCAL_TEE_FUNCREF
    17918U,	// LOCAL_TEE_FUNCREF_S
    4343294U,	// LOCAL_TEE_I32
    17918U,	// LOCAL_TEE_I32_S
    4343294U,	// LOCAL_TEE_I64
    17918U,	// LOCAL_TEE_I64_S
    4343294U,	// LOCAL_TEE_V128
    17918U,	// LOCAL_TEE_V128_S
    49198U,	// LOOP
    49198U,	// LOOP_S
    4342016U,	// LT_F32
    8430U,	// LT_F32_S
    4347235U,	// LT_F32x4
    12308U,	// LT_F32x4_S
    4342026U,	// LT_F64
    8439U,	// LT_F64_S
    4347225U,	// LT_F64x2
    12299U,	// LT_F64x2_S
    4346582U,	// LT_S_I16x8
    11825U,	// LT_S_I16x8_S
    4346526U,	// LT_S_I32
    11774U,	// LT_S_I32_S
    4346558U,	// LT_S_I32x4
    11803U,	// LT_S_I32x4_S
    4346548U,	// LT_S_I64
    11794U,	// LT_S_I64_S
    4346536U,	// LT_S_I64x2
    11783U,	// LT_S_I64x2_S
    4346570U,	// LT_S_I8x16
    11814U,	// LT_S_I8x16_S
    4349793U,	// LT_U_I16x8
    13613U,	// LT_U_I16x8_S
    4349749U,	// LT_U_I32
    13573U,	// LT_U_I32_S
    4349769U,	// LT_U_I32x4
    13591U,	// LT_U_I32x4_S
    4349759U,	// LT_U_I64
    13582U,	// LT_U_I64_S
    4349781U,	// LT_U_I8x16
    13602U,	// LT_U_I8x16_S
    37897614U,	// MADD_F32x4
    9367U,	// MADD_F32x4_S
    37897594U,	// MADD_F64x2
    9348U,	// MADD_F64x2_S
    4342363U,	// MAX_F32
    8682U,	// MAX_F32_S
    4349924U,	// MAX_F32x4
    13710U,	// MAX_F32x4_S
    4342373U,	// MAX_F64
    8691U,	// MAX_F64_S
    4349913U,	// MAX_F64x2
    13700U,	// MAX_F64x2_S
    4346642U,	// MAX_S_I16x8
    11880U,	// MAX_S_I16x8_S
    4346616U,	// MAX_S_I32x4
    11856U,	// MAX_S_I32x4_S
    4346629U,	// MAX_S_I8x16
    11868U,	// MAX_S_I8x16_S
    4349853U,	// MAX_U_I16x8
    13668U,	// MAX_U_I16x8_S
    4349827U,	// MAX_U_I32x4
    13644U,	// MAX_U_I32x4_S
    4349840U,	// MAX_U_I8x16
    13656U,	// MAX_U_I8x16_S
    92947055U,	// MEMORY_ATOMIC_NOTIFY_A32
    1344111U,	// MEMORY_ATOMIC_NOTIFY_A32_S
    92947055U,	// MEMORY_ATOMIC_NOTIFY_A64
    1344111U,	// MEMORY_ATOMIC_NOTIFY_A64_S
    227164436U,	// MEMORY_ATOMIC_WAIT32_A32
    1343764U,	// MEMORY_ATOMIC_WAIT32_A32_S
    227164436U,	// MEMORY_ATOMIC_WAIT32_A64
    1343764U,	// MEMORY_ATOMIC_WAIT32_A64_S
    227164459U,	// MEMORY_ATOMIC_WAIT64_A32
    1343787U,	// MEMORY_ATOMIC_WAIT64_A32_S
    227164459U,	// MEMORY_ATOMIC_WAIT64_A64
    1343787U,	// MEMORY_ATOMIC_WAIT64_A64_S
    4342273U,	// MIN_F32
    8610U,	// MIN_F32_S
    4344469U,	// MIN_F32x4
    10053U,	// MIN_F32x4_S
    4342283U,	// MIN_F64
    8619U,	// MIN_F64_S
    4344458U,	// MIN_F64x2
    10043U,	// MIN_F64x2_S
    4346257U,	// MIN_S_I16x8
    11524U,	// MIN_S_I16x8_S
    4346231U,	// MIN_S_I32x4
    11500U,	// MIN_S_I32x4_S
    4346244U,	// MIN_S_I8x16
    11512U,	// MIN_S_I8x16_S
    4349279U,	// MIN_U_I16x8
    13352U,	// MIN_U_I16x8_S
    4349253U,	// MIN_U_I32x4
    13328U,	// MIN_U_I32x4_S
    4349266U,	// MIN_U_I8x16
    13340U,	// MIN_U_I8x16_S
    4342233U,	// MUL_F32
    8574U,	// MUL_F32_S
    4344397U,	// MUL_F32x4
    9987U,	// MUL_F32x4_S
    4342253U,	// MUL_F64
    8592U,	// MUL_F64_S
    4344375U,	// MUL_F64x2
    9967U,	// MUL_F64x2_S
    4344419U,	// MUL_I16x8
    10007U,	// MUL_I16x8_S
    4342243U,	// MUL_I32
    8583U,	// MUL_I32_S
    4344408U,	// MUL_I32x4
    9997U,	// MUL_I32x4_S
    4342263U,	// MUL_I64
    8601U,	// MUL_I64_S
    4344386U,	// MUL_I64x2
    9977U,	// MUL_I64x2_S
    4345471U,	// NARROW_S_I16x8
    10906U,	// NARROW_S_I16x8_S
    4345953U,	// NARROW_S_I8x16
    11299U,	// NARROW_S_I8x16_S
    4347971U,	// NARROW_U_I16x8
    12900U,	// NARROW_U_I16x8_S
    4348421U,	// NARROW_U_I8x16
    13185U,	// NARROW_U_I8x16_S
    153046U,	// NEAREST_F32
    12413U,	// NEAREST_F32_S
    153087U,	// NEAREST_F32x4
    12451U,	// NEAREST_F32x4_S
    153074U,	// NEAREST_F64
    12439U,	// NEAREST_F64_S
    153059U,	// NEAREST_F64x2
    12425U,	// NEAREST_F64x2_S
    147889U,	// NEG_F32
    8538U,	// NEG_F32_S
    149718U,	// NEG_F32x4
    9721U,	// NEG_F32x4_S
    147899U,	// NEG_F64
    8547U,	// NEG_F64_S
    149696U,	// NEG_F64x2
    9701U,	// NEG_F64x2_S
    149751U,	// NEG_I16x8
    9751U,	// NEG_I16x8_S
    149729U,	// NEG_I32x4
    9731U,	// NEG_I32x4_S
    149707U,	// NEG_I64x2
    9711U,	// NEG_I64x2_S
    149740U,	// NEG_I8x16
    9741U,	// NEG_I8x16_S
    4341896U,	// NE_F32
    8322U,	// NE_F32_S
    4343418U,	// NE_F32x4
    9579U,	// NE_F32x4_S
    4341916U,	// NE_F64
    8340U,	// NE_F64_S
    4343398U,	// NE_F64x2
    9561U,	// NE_F64x2_S
    4343448U,	// NE_I16x8
    9606U,	// NE_I16x8_S
    4341906U,	// NE_I32
    8331U,	// NE_I32_S
    4343428U,	// NE_I32x4
    9588U,	// NE_I32x4_S
    4341926U,	// NE_I64
    8349U,	// NE_I64_S
    4343408U,	// NE_I64x2
    9570U,	// NE_I64x2_S
    4343438U,	// NE_I8x16
    9597U,	// NE_I8x16_S
    37897655U,	// NMADD_F32x4
    9406U,	// NMADD_F32x4_S
    37897634U,	// NMADD_F64x2
    9386U,	// NMADD_F64x2_S
    10305U,	// NOP
    10305U,	// NOP_S
    152979U,	// NOT
    12352U,	// NOT_S
    4344802U,	// OR
    4341976U,	// OR_I32
    8394U,	// OR_I32_S
    4341986U,	// OR_I64
    8403U,	// OR_I64_S
    10377U,	// OR_S
    4349985U,	// PMAX_F32x4
    13767U,	// PMAX_F32x4_S
    4349973U,	// PMAX_F64x2
    13756U,	// PMAX_F64x2_S
    4344530U,	// PMIN_F32x4
    10110U,	// PMIN_F32x4_S
    4344518U,	// PMIN_F64x2
    10099U,	// PMIN_F64x2_S
    152941U,	// POPCNT_I32
    12317U,	// POPCNT_I32_S
    152953U,	// POPCNT_I64
    12328U,	// POPCNT_I64_S
    152965U,	// POPCNT_I8x16
    12339U,	// POPCNT_I8x16_S
    4346437U,	// Q15MULR_SAT_S_I16x8
    11692U,	// Q15MULR_SAT_S_I16x8_S
    35350U,	// REF_IS_NULL_EXTERNREF
    9937U,	// REF_IS_NULL_EXTERNREF_S
    35350U,	// REF_IS_NULL_FUNCREF
    9937U,	// REF_IS_NULL_FUNCREF_S
    26518U,	// REF_NULL_EXTERNREF
    10134U,	// REF_NULL_EXTERNREF_S
    25614U,	// REF_NULL_FUNCREF
    9230U,	// REF_NULL_FUNCREF_S
    4345571U,	// RELAXED_DOT
    37900424U,	// RELAXED_DOT_ADD
    11320U,	// RELAXED_DOT_ADD_S
    37896931U,	// RELAXED_DOT_BFLOAT
    8884U,	// RELAXED_DOT_BFLOAT_S
    10957U,	// RELAXED_DOT_S
    4346344U,	// RELAXED_Q15MULR_S_I16x8
    11604U,	// RELAXED_Q15MULR_S_I16x8_S
    4343375U,	// RELAXED_SWIZZLE
    9539U,	// RELAXED_SWIZZLE_S
    4346209U,	// REM_S_I32
    11480U,	// REM_S_I32_S
    4346220U,	// REM_S_I64
    11490U,	// REM_S_I64_S
    4349231U,	// REM_U_I32
    13308U,	// REM_U_I32_S
    4349242U,	// REM_U_I64
    13318U,	// REM_U_I64_S
    37898076U,	// REPLACE_LANE_F32x4
    18268U,	// REPLACE_LANE_F32x4_S
    37898036U,	// REPLACE_LANE_F64x2
    18228U,	// REPLACE_LANE_F64x2_S
    37898136U,	// REPLACE_LANE_I16x8
    18328U,	// REPLACE_LANE_I16x8_S
    37898096U,	// REPLACE_LANE_I32x4
    18288U,	// REPLACE_LANE_I32x4_S
    37898056U,	// REPLACE_LANE_I64x2
    18248U,	// REPLACE_LANE_I64x2_S
    37898116U,	// REPLACE_LANE_I8x16
    18308U,	// REPLACE_LANE_I8x16_S
    16977U,	// RETHROW
    16977U,	// RETHROW_S
    10150U,	// RETURN
    10150U,	// RETURN_S
    16413U,	// RET_CALL
    5342U,	// RET_CALL_INDIRECT
    152798U,	// RET_CALL_INDIRECT_S
    18928U,	// RET_CALL_S
    4344355U,	// ROTL_I32
    9949U,	// ROTL_I32_S
    4344365U,	// ROTL_I64
    9958U,	// ROTL_I64_S
    4344947U,	// ROTR_I32
    10438U,	// ROTR_I32_S
    4344957U,	// ROTR_I64
    10447U,	// ROTR_I64_S
    37901396U,	// SELECT_EXTERNREF
    12115U,	// SELECT_EXTERNREF_S
    37901319U,	// SELECT_F32
    12044U,	// SELECT_F32_S
    37901343U,	// SELECT_F64
    12066U,	// SELECT_F64_S
    37901380U,	// SELECT_FUNCREF
    12100U,	// SELECT_FUNCREF_S
    37901331U,	// SELECT_I32
    12055U,	// SELECT_I32_S
    37901355U,	// SELECT_I64
    12077U,	// SELECT_I64_S
    37901367U,	// SELECT_V128
    12088U,	// SELECT_V128_S
    4344249U,	// SHL_I16x8
    9863U,	// SHL_I16x8_S
    4342213U,	// SHL_I32
    8556U,	// SHL_I32_S
    4344227U,	// SHL_I32x4
    9843U,	// SHL_I32x4_S
    4342223U,	// SHL_I64
    8565U,	// SHL_I64_S
    4344216U,	// SHL_I64x2
    9833U,	// SHL_I64x2_S
    4344238U,	// SHL_I8x16
    9853U,	// SHL_I8x16_S
    4346331U,	// SHR_S_I16x8
    11592U,	// SHR_S_I16x8_S
    4346270U,	// SHR_S_I32
    11536U,	// SHR_S_I32_S
    4346305U,	// SHR_S_I32x4
    11568U,	// SHR_S_I32x4_S
    4346294U,	// SHR_S_I64
    11558U,	// SHR_S_I64_S
    4346281U,	// SHR_S_I64x2
    11546U,	// SHR_S_I64x2_S
    4346318U,	// SHR_S_I8x16
    11580U,	// SHR_S_I8x16_S
    4349381U,	// SHR_U_I16x8
    13446U,	// SHR_U_I16x8_S
    4349320U,	// SHR_U_I32
    13390U,	// SHR_U_I32_S
    4349355U,	// SHR_U_I32x4
    13422U,	// SHR_U_I32x4_S
    4349344U,	// SHR_U_I64
    13412U,	// SHR_U_I64_S
    4349331U,	// SHR_U_I64x2
    13400U,	// SHR_U_I64x2_S
    4349368U,	// SHR_U_I8x16
    13434U,	// SHR_U_I8x16_S
    1581401649U,	// SHUFFLE
    3728885297U,	// SHUFFLE_S
    4349954U,	// SIMD_RELAXED_FMAX_F32x4
    13738U,	// SIMD_RELAXED_FMAX_F32x4_S
    4349935U,	// SIMD_RELAXED_FMAX_F64x2
    13720U,	// SIMD_RELAXED_FMAX_F64x2_S
    4344499U,	// SIMD_RELAXED_FMIN_F32x4
    10081U,	// SIMD_RELAXED_FMIN_F32x4_S
    4344480U,	// SIMD_RELAXED_FMIN_F64x2
    10063U,	// SIMD_RELAXED_FMIN_F64x2_S
    152456U,	// SPLAT_F32x4
    11996U,	// SPLAT_F32x4_S
    152430U,	// SPLAT_F64x2
    11972U,	// SPLAT_F64x2_S
    152495U,	// SPLAT_I16x8
    12032U,	// SPLAT_I16x8_S
    152469U,	// SPLAT_I32x4
    12008U,	// SPLAT_I32x4_S
    152443U,	// SPLAT_I64x2
    11984U,	// SPLAT_I64x2_S
    152482U,	// SPLAT_I8x16
    12020U,	// SPLAT_I8x16_S
    153002U,	// SQRT_F32
    12373U,	// SQRT_F32_S
    153034U,	// SQRT_F32x4
    12402U,	// SQRT_F32x4_S
    153024U,	// SQRT_F64
    12393U,	// SQRT_F64_S
    153012U,	// SQRT_F64x2
    12382U,	// SQRT_F64x2_S
    13534113U,	// STORE16_I32_A32
    1344417U,	// STORE16_I32_A32_S
    13534113U,	// STORE16_I32_A64
    1344417U,	// STORE16_I32_A64_S
    13534126U,	// STORE16_I64_A32
    1344430U,	// STORE16_I64_A32_S
    13534126U,	// STORE16_I64_A64
    1344430U,	// STORE16_I64_A64_S
    13533890U,	// STORE32_I64_A32
    1344194U,	// STORE32_I64_A32_S
    13533890U,	// STORE32_I64_A64
    1344194U,	// STORE32_I64_A64_S
    13534179U,	// STORE8_I32_A32
    1344483U,	// STORE8_I32_A32_S
    13534179U,	// STORE8_I32_A64
    1344483U,	// STORE8_I32_A64_S
    13534191U,	// STORE8_I64_A32
    1344495U,	// STORE8_I64_A32_S
    13534191U,	// STORE8_I64_A64
    1344495U,	// STORE8_I64_A64_S
    13535228U,	// STORE_F32_A32
    1345532U,	// STORE_F32_A32_S
    13535228U,	// STORE_F32_A64
    1345532U,	// STORE_F32_A64_S
    13535250U,	// STORE_F64_A32
    1345554U,	// STORE_F64_A32_S
    13535250U,	// STORE_F64_A64
    1345554U,	// STORE_F64_A64_S
    13535239U,	// STORE_I32_A32
    1345543U,	// STORE_I32_A32_S
    13535239U,	// STORE_I32_A64
    1345543U,	// STORE_I32_A64_S
    13535261U,	// STORE_I64_A32
    1345565U,	// STORE_I64_A32_S
    13535261U,	// STORE_I64_A64
    1345565U,	// STORE_I64_A64_S
    2524926U,	// STORE_LANE_I16x8_A32
    1869566U,	// STORE_LANE_I16x8_A32_S
    83710U,	// STORE_LANE_I16x8_A64
    1869566U,	// STORE_LANE_I16x8_A64_S
    2524852U,	// STORE_LANE_I32x4_A32
    1869492U,	// STORE_LANE_I32x4_A32_S
    83636U,	// STORE_LANE_I32x4_A64
    1869492U,	// STORE_LANE_I32x4_A64_S
    2524889U,	// STORE_LANE_I64x2_A32
    1869529U,	// STORE_LANE_I64x2_A32_S
    83673U,	// STORE_LANE_I64x2_A64
    1869529U,	// STORE_LANE_I64x2_A64_S
    2524962U,	// STORE_LANE_I8x16_A32
    1869602U,	// STORE_LANE_I8x16_A32_S
    83746U,	// STORE_LANE_I8x16_A64
    1869602U,	// STORE_LANE_I8x16_A64_S
    13535272U,	// STORE_V128_A32
    1345576U,	// STORE_V128_A32_S
    13535272U,	// STORE_V128_A64
    1345576U,	// STORE_V128_A64_S
    4342082U,	// SUB_F32
    8448U,	// SUB_F32_S
    4342839U,	// SUB_F32x4
    9190U,	// SUB_F32x4_S
    4342102U,	// SUB_F64
    8466U,	// SUB_F64_S
    4342817U,	// SUB_F64x2
    9170U,	// SUB_F64x2_S
    4342872U,	// SUB_I16x8
    9220U,	// SUB_I16x8_S
    4342092U,	// SUB_I32
    8457U,	// SUB_I32_S
    4342850U,	// SUB_I32x4
    9200U,	// SUB_I32x4_S
    4342112U,	// SUB_I64
    8475U,	// SUB_I64_S
    4342828U,	// SUB_I64x2
    9180U,	// SUB_I64x2_S
    4342861U,	// SUB_I8x16
    9210U,	// SUB_I8x16_S
    4346386U,	// SUB_SAT_S_I16x8
    11644U,	// SUB_SAT_S_I16x8_S
    4346369U,	// SUB_SAT_S_I8x16
    11628U,	// SUB_SAT_S_I8x16_S
    4349642U,	// SUB_SAT_U_I16x8
    13474U,	// SUB_SAT_U_I16x8_S
    4349625U,	// SUB_SAT_U_I8x16
    13458U,	// SUB_SAT_U_I8x16_S
    4343360U,	// SWIZZLE
    9525U,	// SWIZZLE_S
    105013293U,	// TABLE_COPY
    155693U,	// TABLE_COPY_S
    37898749U,	// TABLE_FILL_EXTERNREF
    18941U,	// TABLE_FILL_EXTERNREF_S
    37898749U,	// TABLE_FILL_FUNCREF
    18941U,	// TABLE_FILL_FUNCREF_S
    4347124U,	// TABLE_GET_EXTERNREF
    21748U,	// TABLE_GET_EXTERNREF_S
    4347124U,	// TABLE_GET_FUNCREF
    21748U,	// TABLE_GET_FUNCREF_S
    37904320U,	// TABLE_GROW_EXTERNREF
    24512U,	// TABLE_GROW_EXTERNREF_S
    37904320U,	// TABLE_GROW_FUNCREF
    24512U,	// TABLE_GROW_FUNCREF_S
    4347158U,	// TABLE_SET_EXTERNREF
    21782U,	// TABLE_SET_EXTERNREF_S
    4347158U,	// TABLE_SET_FUNCREF
    21782U,	// TABLE_SET_FUNCREF_S
    149671U,	// TABLE_SIZE
    18599U,	// TABLE_SIZE_S
    4343294U,	// TEE_EXTERNREF
    9467U,	// TEE_EXTERNREF_S
    4343294U,	// TEE_F32
    9467U,	// TEE_F32_S
    4343294U,	// TEE_F64
    9467U,	// TEE_F64_S
    4343294U,	// TEE_FUNCREF
    9467U,	// TEE_FUNCREF_S
    4343294U,	// TEE_I32
    9467U,	// TEE_I32_S
    4343294U,	// TEE_I64
    9467U,	// TEE_I64_S
    4343294U,	// TEE_V128
    9467U,	// TEE_V128_S
    16470U,	// THROW
    16470U,	// THROW_S
    148619U,	// TRUNC_F32
    9244U,	// TRUNC_F32_S
    148654U,	// TRUNC_F32x4
    9276U,	// TRUNC_F32x4_S
    148643U,	// TRUNC_F64
    9266U,	// TRUNC_F64_S
    148630U,	// TRUNC_F64x2
    9254U,	// TRUNC_F64x2_S
    49163U,	// TRY
    49163U,	// TRY_S
    9513U,	// UNREACHABLE
    9513U,	// UNREACHABLE_S
    4344897U,	// XOR
    4342293U,	// XOR_I32
    8628U,	// XOR_I32_S
    4342303U,	// XOR_I64
    8637U,	// XOR_I64_S
    10429U,	// XOR_S
    4349900U,	// anonymous_4396MEMORY_GROW_A32
    24524U,	// anonymous_4396MEMORY_GROW_A32_S
    149683U,	// anonymous_4396MEMORY_SIZE_A32
    18611U,	// anonymous_4396MEMORY_SIZE_A32_S
    4349900U,	// anonymous_4397MEMORY_GROW_A64
    24524U,	// anonymous_4397MEMORY_GROW_A64_S
    149683U,	// anonymous_4397MEMORY_SIZE_A64
    18611U,	// anonymous_4397MEMORY_SIZE_A64_S
    19355U,	// anonymous_6249DATA_DROP
    19355U,	// anonymous_6249DATA_DROP_S
    105013317U,	// anonymous_6249MEMORY_COPY_A32
    155717U,	// anonymous_6249MEMORY_COPY_A32_S
    37898761U,	// anonymous_6249MEMORY_FILL_A32
    18953U,	// anonymous_6249MEMORY_FILL_A32_S
    105010508U,	// anonymous_6249MEMORY_INIT_A32
    152908U,	// anonymous_6249MEMORY_INIT_A32_S
    19355U,	// anonymous_6250DATA_DROP
    19355U,	// anonymous_6250DATA_DROP_S
    105013317U,	// anonymous_6250MEMORY_COPY_A64
    155717U,	// anonymous_6250MEMORY_COPY_A64_S
    37898761U,	// anonymous_6250MEMORY_FILL_A64
    18953U,	// anonymous_6250MEMORY_FILL_A64_S
    105010508U,	// anonymous_6250MEMORY_INIT_A64
    152908U,	// anonymous_6250MEMORY_INIT_A64_S
    151140U,	// convert_low_s_F64x2
    10880U,	// convert_low_s_F64x2_S
    153640U,	// convert_low_u_F64x2
    12874U,	// convert_low_u_F64x2_S
    150256U,	// demote_zero_F32x4
    10157U,	// demote_zero_F32x4_S
    151331U,	// extend_high_s_I16x8
    11019U,	// extend_high_s_I16x8_S
    151524U,	// extend_high_s_I32x4
    11179U,	// extend_high_s_I32x4_S
    151011U,	// extend_high_s_I64x2
    10756U,	// extend_high_s_I64x2_S
    153808U,	// extend_high_u_I16x8
    12951U,	// extend_high_u_I16x8_S
    154011U,	// extend_high_u_I32x4
    13083U,	// extend_high_u_I32x4_S
    153511U,	// extend_high_u_I64x2
    12750U,	// extend_high_u_I64x2_S
    151385U,	// extend_low_s_I16x8
    11071U,	// extend_low_s_I16x8_S
    151597U,	// extend_low_s_I32x4
    11249U,	// extend_low_s_I32x4_S
    151088U,	// extend_low_s_I64x2
    10830U,	// extend_low_s_I64x2_S
    153862U,	// extend_low_u_I16x8
    13003U,	// extend_low_u_I16x8_S
    154065U,	// extend_low_u_I32x4
    13135U,	// extend_low_u_I32x4_S
    153588U,	// extend_low_u_I64x2
    12824U,	// extend_low_u_I64x2_S
    150986U,	// fp_to_sint_I32x4
    10732U,	// fp_to_sint_I32x4_S
    153486U,	// fp_to_uint_I32x4
    12726U,	// fp_to_uint_I32x4_S
    151300U,	// int_wasm_extadd_pairwise_signed_I16x8
    10989U,	// int_wasm_extadd_pairwise_signed_I16x8_S
    151493U,	// int_wasm_extadd_pairwise_signed_I32x4
    11149U,	// int_wasm_extadd_pairwise_signed_I32x4_S
    153777U,	// int_wasm_extadd_pairwise_unsigned_I16x8
    12921U,	// int_wasm_extadd_pairwise_unsigned_I16x8_S
    153980U,	// int_wasm_extadd_pairwise_unsigned_I32x4
    13053U,	// int_wasm_extadd_pairwise_unsigned_I32x4_S
    150957U,	// int_wasm_relaxed_trunc_signed_I32x4
    10704U,	// int_wasm_relaxed_trunc_signed_I32x4_S
    150299U,	// int_wasm_relaxed_trunc_signed_zero_I32x4
    10181U,	// int_wasm_relaxed_trunc_signed_zero_I32x4_S
    153457U,	// int_wasm_relaxed_trunc_unsigned_I32x4
    12698U,	// int_wasm_relaxed_trunc_unsigned_I32x4_S
    150363U,	// int_wasm_relaxed_trunc_unsigned_zero_I32x4
    10243U,	// int_wasm_relaxed_trunc_unsigned_zero_I32x4_S
    148360U,	// promote_low_F64x2
    9041U,	// promote_low_F64x2_S
    151065U,	// sint_to_fp_F32x4
    10808U,	// sint_to_fp_F32x4_S
    150333U,	// trunc_sat_zero_s_I32x4
    10214U,	// trunc_sat_zero_s_I32x4_S
    150397U,	// trunc_sat_zero_u_I32x4
    10276U,	// trunc_sat_zero_u_I32x4_S
    153565U,	// uint_to_fp_F32x4
    12802U,	// uint_to_fp_F32x4_S
  };

  static const uint8_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_VALUE_LIST
    0U,	// DBG_INSTR_REF
    0U,	// DBG_PHI
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    0U,	// CALL_PARAMS
    0U,	// CALL_PARAMS_S
    0U,	// CALL_RESULTS
    0U,	// CALL_RESULTS_S
    0U,	// CATCHRET
    0U,	// CATCHRET_S
    0U,	// CLEANUPRET
    0U,	// CLEANUPRET_S
    0U,	// COMPILER_FENCE
    0U,	// COMPILER_FENCE_S
    0U,	// RET_CALL_RESULTS
    0U,	// RET_CALL_RESULTS_S
    0U,	// ABS_F32
    0U,	// ABS_F32_S
    0U,	// ABS_F32x4
    0U,	// ABS_F32x4_S
    0U,	// ABS_F64
    0U,	// ABS_F64_S
    0U,	// ABS_F64x2
    0U,	// ABS_F64x2_S
    0U,	// ABS_I16x8
    0U,	// ABS_I16x8_S
    0U,	// ABS_I32x4
    0U,	// ABS_I32x4_S
    0U,	// ABS_I64x2
    0U,	// ABS_I64x2_S
    0U,	// ABS_I8x16
    0U,	// ABS_I8x16_S
    0U,	// ADD_F32
    0U,	// ADD_F32_S
    0U,	// ADD_F32x4
    0U,	// ADD_F32x4_S
    0U,	// ADD_F64
    0U,	// ADD_F64_S
    0U,	// ADD_F64x2
    0U,	// ADD_F64x2_S
    0U,	// ADD_I16x8
    0U,	// ADD_I16x8_S
    0U,	// ADD_I32
    0U,	// ADD_I32_S
    0U,	// ADD_I32x4
    0U,	// ADD_I32x4_S
    0U,	// ADD_I64
    0U,	// ADD_I64_S
    0U,	// ADD_I64x2
    0U,	// ADD_I64x2_S
    0U,	// ADD_I8x16
    0U,	// ADD_I8x16_S
    0U,	// ADD_SAT_S_I16x8
    0U,	// ADD_SAT_S_I16x8_S
    0U,	// ADD_SAT_S_I8x16
    0U,	// ADD_SAT_S_I8x16_S
    0U,	// ADD_SAT_U_I16x8
    0U,	// ADD_SAT_U_I16x8_S
    0U,	// ADD_SAT_U_I8x16
    0U,	// ADD_SAT_U_I8x16_S
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKDOWN_S
    0U,	// ADJCALLSTACKUP
    0U,	// ADJCALLSTACKUP_S
    0U,	// ALLTRUE_I16x8
    0U,	// ALLTRUE_I16x8_S
    0U,	// ALLTRUE_I32x4
    0U,	// ALLTRUE_I32x4_S
    0U,	// ALLTRUE_I64x2
    0U,	// ALLTRUE_I64x2_S
    0U,	// ALLTRUE_I8x16
    0U,	// ALLTRUE_I8x16_S
    0U,	// AND
    0U,	// ANDNOT
    0U,	// ANDNOT_S
    0U,	// AND_I32
    0U,	// AND_I32_S
    0U,	// AND_I64
    0U,	// AND_I64_S
    0U,	// AND_S
    0U,	// ANYTRUE
    0U,	// ANYTRUE_S
    0U,	// ARGUMENT_externref
    0U,	// ARGUMENT_externref_S
    0U,	// ARGUMENT_f32
    0U,	// ARGUMENT_f32_S
    0U,	// ARGUMENT_f64
    0U,	// ARGUMENT_f64_S
    0U,	// ARGUMENT_funcref
    0U,	// ARGUMENT_funcref_S
    0U,	// ARGUMENT_i32
    0U,	// ARGUMENT_i32_S
    0U,	// ARGUMENT_i64
    0U,	// ARGUMENT_i64_S
    0U,	// ARGUMENT_v16i8
    0U,	// ARGUMENT_v16i8_S
    0U,	// ARGUMENT_v2f64
    0U,	// ARGUMENT_v2f64_S
    0U,	// ARGUMENT_v2i64
    0U,	// ARGUMENT_v2i64_S
    0U,	// ARGUMENT_v4f32
    0U,	// ARGUMENT_v4f32_S
    0U,	// ARGUMENT_v4i32
    0U,	// ARGUMENT_v4i32_S
    0U,	// ARGUMENT_v8i16
    0U,	// ARGUMENT_v8i16_S
    0U,	// ATOMIC_FENCE
    0U,	// ATOMIC_FENCE_S
    0U,	// ATOMIC_LOAD16_U_I32_A32
    0U,	// ATOMIC_LOAD16_U_I32_A32_S
    0U,	// ATOMIC_LOAD16_U_I32_A64
    0U,	// ATOMIC_LOAD16_U_I32_A64_S
    0U,	// ATOMIC_LOAD16_U_I64_A32
    0U,	// ATOMIC_LOAD16_U_I64_A32_S
    0U,	// ATOMIC_LOAD16_U_I64_A64
    0U,	// ATOMIC_LOAD16_U_I64_A64_S
    0U,	// ATOMIC_LOAD32_U_I64_A32
    0U,	// ATOMIC_LOAD32_U_I64_A32_S
    0U,	// ATOMIC_LOAD32_U_I64_A64
    0U,	// ATOMIC_LOAD32_U_I64_A64_S
    0U,	// ATOMIC_LOAD8_U_I32_A32
    0U,	// ATOMIC_LOAD8_U_I32_A32_S
    0U,	// ATOMIC_LOAD8_U_I32_A64
    0U,	// ATOMIC_LOAD8_U_I32_A64_S
    0U,	// ATOMIC_LOAD8_U_I64_A32
    0U,	// ATOMIC_LOAD8_U_I64_A32_S
    0U,	// ATOMIC_LOAD8_U_I64_A64
    0U,	// ATOMIC_LOAD8_U_I64_A64_S
    0U,	// ATOMIC_LOAD_I32_A32
    0U,	// ATOMIC_LOAD_I32_A32_S
    0U,	// ATOMIC_LOAD_I32_A64
    0U,	// ATOMIC_LOAD_I32_A64_S
    0U,	// ATOMIC_LOAD_I64_A32
    0U,	// ATOMIC_LOAD_I64_A32_S
    0U,	// ATOMIC_LOAD_I64_A64
    0U,	// ATOMIC_LOAD_I64_A64_S
    0U,	// ATOMIC_RMW16_U_ADD_I32_A32
    0U,	// ATOMIC_RMW16_U_ADD_I32_A32_S
    0U,	// ATOMIC_RMW16_U_ADD_I32_A64
    0U,	// ATOMIC_RMW16_U_ADD_I32_A64_S
    0U,	// ATOMIC_RMW16_U_ADD_I64_A32
    0U,	// ATOMIC_RMW16_U_ADD_I64_A32_S
    0U,	// ATOMIC_RMW16_U_ADD_I64_A64
    0U,	// ATOMIC_RMW16_U_ADD_I64_A64_S
    0U,	// ATOMIC_RMW16_U_AND_I32_A32
    0U,	// ATOMIC_RMW16_U_AND_I32_A32_S
    0U,	// ATOMIC_RMW16_U_AND_I32_A64
    0U,	// ATOMIC_RMW16_U_AND_I32_A64_S
    0U,	// ATOMIC_RMW16_U_AND_I64_A32
    0U,	// ATOMIC_RMW16_U_AND_I64_A32_S
    0U,	// ATOMIC_RMW16_U_AND_I64_A64
    0U,	// ATOMIC_RMW16_U_AND_I64_A64_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW16_U_OR_I32_A32
    0U,	// ATOMIC_RMW16_U_OR_I32_A32_S
    0U,	// ATOMIC_RMW16_U_OR_I32_A64
    0U,	// ATOMIC_RMW16_U_OR_I32_A64_S
    0U,	// ATOMIC_RMW16_U_OR_I64_A32
    0U,	// ATOMIC_RMW16_U_OR_I64_A32_S
    0U,	// ATOMIC_RMW16_U_OR_I64_A64
    0U,	// ATOMIC_RMW16_U_OR_I64_A64_S
    0U,	// ATOMIC_RMW16_U_SUB_I32_A32
    0U,	// ATOMIC_RMW16_U_SUB_I32_A32_S
    0U,	// ATOMIC_RMW16_U_SUB_I32_A64
    0U,	// ATOMIC_RMW16_U_SUB_I32_A64_S
    0U,	// ATOMIC_RMW16_U_SUB_I64_A32
    0U,	// ATOMIC_RMW16_U_SUB_I64_A32_S
    0U,	// ATOMIC_RMW16_U_SUB_I64_A64
    0U,	// ATOMIC_RMW16_U_SUB_I64_A64_S
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A32
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A32_S
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A64
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A64_S
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A32
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A64
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW16_U_XOR_I32_A32
    0U,	// ATOMIC_RMW16_U_XOR_I32_A32_S
    0U,	// ATOMIC_RMW16_U_XOR_I32_A64
    0U,	// ATOMIC_RMW16_U_XOR_I32_A64_S
    0U,	// ATOMIC_RMW16_U_XOR_I64_A32
    0U,	// ATOMIC_RMW16_U_XOR_I64_A32_S
    0U,	// ATOMIC_RMW16_U_XOR_I64_A64
    0U,	// ATOMIC_RMW16_U_XOR_I64_A64_S
    0U,	// ATOMIC_RMW32_U_ADD_I64_A32
    0U,	// ATOMIC_RMW32_U_ADD_I64_A32_S
    0U,	// ATOMIC_RMW32_U_ADD_I64_A64
    0U,	// ATOMIC_RMW32_U_ADD_I64_A64_S
    0U,	// ATOMIC_RMW32_U_AND_I64_A32
    0U,	// ATOMIC_RMW32_U_AND_I64_A32_S
    0U,	// ATOMIC_RMW32_U_AND_I64_A64
    0U,	// ATOMIC_RMW32_U_AND_I64_A64_S
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW32_U_OR_I64_A32
    0U,	// ATOMIC_RMW32_U_OR_I64_A32_S
    0U,	// ATOMIC_RMW32_U_OR_I64_A64
    0U,	// ATOMIC_RMW32_U_OR_I64_A64_S
    0U,	// ATOMIC_RMW32_U_SUB_I64_A32
    0U,	// ATOMIC_RMW32_U_SUB_I64_A32_S
    0U,	// ATOMIC_RMW32_U_SUB_I64_A64
    0U,	// ATOMIC_RMW32_U_SUB_I64_A64_S
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A32
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A64
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW32_U_XOR_I64_A32
    0U,	// ATOMIC_RMW32_U_XOR_I64_A32_S
    0U,	// ATOMIC_RMW32_U_XOR_I64_A64
    0U,	// ATOMIC_RMW32_U_XOR_I64_A64_S
    0U,	// ATOMIC_RMW8_U_ADD_I32_A32
    0U,	// ATOMIC_RMW8_U_ADD_I32_A32_S
    0U,	// ATOMIC_RMW8_U_ADD_I32_A64
    0U,	// ATOMIC_RMW8_U_ADD_I32_A64_S
    0U,	// ATOMIC_RMW8_U_ADD_I64_A32
    0U,	// ATOMIC_RMW8_U_ADD_I64_A32_S
    0U,	// ATOMIC_RMW8_U_ADD_I64_A64
    0U,	// ATOMIC_RMW8_U_ADD_I64_A64_S
    0U,	// ATOMIC_RMW8_U_AND_I32_A32
    0U,	// ATOMIC_RMW8_U_AND_I32_A32_S
    0U,	// ATOMIC_RMW8_U_AND_I32_A64
    0U,	// ATOMIC_RMW8_U_AND_I32_A64_S
    0U,	// ATOMIC_RMW8_U_AND_I64_A32
    0U,	// ATOMIC_RMW8_U_AND_I64_A32_S
    0U,	// ATOMIC_RMW8_U_AND_I64_A64
    0U,	// ATOMIC_RMW8_U_AND_I64_A64_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW8_U_OR_I32_A32
    0U,	// ATOMIC_RMW8_U_OR_I32_A32_S
    0U,	// ATOMIC_RMW8_U_OR_I32_A64
    0U,	// ATOMIC_RMW8_U_OR_I32_A64_S
    0U,	// ATOMIC_RMW8_U_OR_I64_A32
    0U,	// ATOMIC_RMW8_U_OR_I64_A32_S
    0U,	// ATOMIC_RMW8_U_OR_I64_A64
    0U,	// ATOMIC_RMW8_U_OR_I64_A64_S
    0U,	// ATOMIC_RMW8_U_SUB_I32_A32
    0U,	// ATOMIC_RMW8_U_SUB_I32_A32_S
    0U,	// ATOMIC_RMW8_U_SUB_I32_A64
    0U,	// ATOMIC_RMW8_U_SUB_I32_A64_S
    0U,	// ATOMIC_RMW8_U_SUB_I64_A32
    0U,	// ATOMIC_RMW8_U_SUB_I64_A32_S
    0U,	// ATOMIC_RMW8_U_SUB_I64_A64
    0U,	// ATOMIC_RMW8_U_SUB_I64_A64_S
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A32
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A32_S
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A64
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A64_S
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A32
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A64
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW8_U_XOR_I32_A32
    0U,	// ATOMIC_RMW8_U_XOR_I32_A32_S
    0U,	// ATOMIC_RMW8_U_XOR_I32_A64
    0U,	// ATOMIC_RMW8_U_XOR_I32_A64_S
    0U,	// ATOMIC_RMW8_U_XOR_I64_A32
    0U,	// ATOMIC_RMW8_U_XOR_I64_A32_S
    0U,	// ATOMIC_RMW8_U_XOR_I64_A64
    0U,	// ATOMIC_RMW8_U_XOR_I64_A64_S
    0U,	// ATOMIC_RMW_ADD_I32_A32
    0U,	// ATOMIC_RMW_ADD_I32_A32_S
    0U,	// ATOMIC_RMW_ADD_I32_A64
    0U,	// ATOMIC_RMW_ADD_I32_A64_S
    0U,	// ATOMIC_RMW_ADD_I64_A32
    0U,	// ATOMIC_RMW_ADD_I64_A32_S
    0U,	// ATOMIC_RMW_ADD_I64_A64
    0U,	// ATOMIC_RMW_ADD_I64_A64_S
    0U,	// ATOMIC_RMW_AND_I32_A32
    0U,	// ATOMIC_RMW_AND_I32_A32_S
    0U,	// ATOMIC_RMW_AND_I32_A64
    0U,	// ATOMIC_RMW_AND_I32_A64_S
    0U,	// ATOMIC_RMW_AND_I64_A32
    0U,	// ATOMIC_RMW_AND_I64_A32_S
    0U,	// ATOMIC_RMW_AND_I64_A64
    0U,	// ATOMIC_RMW_AND_I64_A64_S
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A32
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A32_S
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A64
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A64_S
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW_OR_I32_A32
    0U,	// ATOMIC_RMW_OR_I32_A32_S
    0U,	// ATOMIC_RMW_OR_I32_A64
    0U,	// ATOMIC_RMW_OR_I32_A64_S
    0U,	// ATOMIC_RMW_OR_I64_A32
    0U,	// ATOMIC_RMW_OR_I64_A32_S
    0U,	// ATOMIC_RMW_OR_I64_A64
    0U,	// ATOMIC_RMW_OR_I64_A64_S
    0U,	// ATOMIC_RMW_SUB_I32_A32
    0U,	// ATOMIC_RMW_SUB_I32_A32_S
    0U,	// ATOMIC_RMW_SUB_I32_A64
    0U,	// ATOMIC_RMW_SUB_I32_A64_S
    0U,	// ATOMIC_RMW_SUB_I64_A32
    0U,	// ATOMIC_RMW_SUB_I64_A32_S
    0U,	// ATOMIC_RMW_SUB_I64_A64
    0U,	// ATOMIC_RMW_SUB_I64_A64_S
    0U,	// ATOMIC_RMW_XCHG_I32_A32
    0U,	// ATOMIC_RMW_XCHG_I32_A32_S
    0U,	// ATOMIC_RMW_XCHG_I32_A64
    0U,	// ATOMIC_RMW_XCHG_I32_A64_S
    0U,	// ATOMIC_RMW_XCHG_I64_A32
    0U,	// ATOMIC_RMW_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW_XCHG_I64_A64
    0U,	// ATOMIC_RMW_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW_XOR_I32_A32
    0U,	// ATOMIC_RMW_XOR_I32_A32_S
    0U,	// ATOMIC_RMW_XOR_I32_A64
    0U,	// ATOMIC_RMW_XOR_I32_A64_S
    0U,	// ATOMIC_RMW_XOR_I64_A32
    0U,	// ATOMIC_RMW_XOR_I64_A32_S
    0U,	// ATOMIC_RMW_XOR_I64_A64
    0U,	// ATOMIC_RMW_XOR_I64_A64_S
    0U,	// ATOMIC_STORE16_I32_A32
    0U,	// ATOMIC_STORE16_I32_A32_S
    0U,	// ATOMIC_STORE16_I32_A64
    0U,	// ATOMIC_STORE16_I32_A64_S
    0U,	// ATOMIC_STORE16_I64_A32
    0U,	// ATOMIC_STORE16_I64_A32_S
    0U,	// ATOMIC_STORE16_I64_A64
    0U,	// ATOMIC_STORE16_I64_A64_S
    0U,	// ATOMIC_STORE32_I64_A32
    0U,	// ATOMIC_STORE32_I64_A32_S
    0U,	// ATOMIC_STORE32_I64_A64
    0U,	// ATOMIC_STORE32_I64_A64_S
    0U,	// ATOMIC_STORE8_I32_A32
    0U,	// ATOMIC_STORE8_I32_A32_S
    0U,	// ATOMIC_STORE8_I32_A64
    0U,	// ATOMIC_STORE8_I32_A64_S
    0U,	// ATOMIC_STORE8_I64_A32
    0U,	// ATOMIC_STORE8_I64_A32_S
    0U,	// ATOMIC_STORE8_I64_A64
    0U,	// ATOMIC_STORE8_I64_A64_S
    0U,	// ATOMIC_STORE_I32_A32
    0U,	// ATOMIC_STORE_I32_A32_S
    0U,	// ATOMIC_STORE_I32_A64
    0U,	// ATOMIC_STORE_I32_A64_S
    0U,	// ATOMIC_STORE_I64_A32
    0U,	// ATOMIC_STORE_I64_A32_S
    0U,	// ATOMIC_STORE_I64_A64
    0U,	// ATOMIC_STORE_I64_A64_S
    0U,	// AVGR_U_I16x8
    0U,	// AVGR_U_I16x8_S
    0U,	// AVGR_U_I8x16
    0U,	// AVGR_U_I8x16_S
    0U,	// BITMASK_I16x8
    0U,	// BITMASK_I16x8_S
    0U,	// BITMASK_I32x4
    0U,	// BITMASK_I32x4_S
    0U,	// BITMASK_I64x2
    0U,	// BITMASK_I64x2_S
    0U,	// BITMASK_I8x16
    0U,	// BITMASK_I8x16_S
    0U,	// BITSELECT
    0U,	// BITSELECT_S
    0U,	// BLOCK
    0U,	// BLOCK_S
    0U,	// BR
    0U,	// BR_IF
    0U,	// BR_IF_S
    0U,	// BR_S
    0U,	// BR_TABLE_I32
    0U,	// BR_TABLE_I32_S
    0U,	// BR_TABLE_I64
    0U,	// BR_TABLE_I64_S
    0U,	// BR_UNLESS
    0U,	// BR_UNLESS_S
    0U,	// CALL
    0U,	// CALL_INDIRECT
    0U,	// CALL_INDIRECT_S
    0U,	// CALL_S
    0U,	// CATCH
    0U,	// CATCH_ALL
    0U,	// CATCH_ALL_S
    0U,	// CATCH_S
    0U,	// CEIL_F32
    0U,	// CEIL_F32_S
    0U,	// CEIL_F32x4
    0U,	// CEIL_F32x4_S
    0U,	// CEIL_F64
    0U,	// CEIL_F64_S
    0U,	// CEIL_F64x2
    0U,	// CEIL_F64x2_S
    0U,	// CLZ_I32
    0U,	// CLZ_I32_S
    0U,	// CLZ_I64
    0U,	// CLZ_I64_S
    0U,	// CONST_F32
    0U,	// CONST_F32_S
    0U,	// CONST_F64
    0U,	// CONST_F64_S
    0U,	// CONST_I32
    0U,	// CONST_I32_S
    0U,	// CONST_I64
    0U,	// CONST_I64_S
    0U,	// CONST_V128_F32x4
    0U,	// CONST_V128_F32x4_S
    0U,	// CONST_V128_F64x2
    0U,	// CONST_V128_F64x2_S
    0U,	// CONST_V128_I16x8
    0U,	// CONST_V128_I16x8_S
    0U,	// CONST_V128_I32x4
    0U,	// CONST_V128_I32x4_S
    0U,	// CONST_V128_I64x2
    0U,	// CONST_V128_I64x2_S
    0U,	// CONST_V128_I8x16
    0U,	// CONST_V128_I8x16_S
    0U,	// COPYSIGN_F32
    0U,	// COPYSIGN_F32_S
    0U,	// COPYSIGN_F64
    0U,	// COPYSIGN_F64_S
    0U,	// COPY_EXTERNREF
    0U,	// COPY_EXTERNREF_S
    0U,	// COPY_F32
    0U,	// COPY_F32_S
    0U,	// COPY_F64
    0U,	// COPY_F64_S
    0U,	// COPY_FUNCREF
    0U,	// COPY_FUNCREF_S
    0U,	// COPY_I32
    0U,	// COPY_I32_S
    0U,	// COPY_I64
    0U,	// COPY_I64_S
    0U,	// COPY_V128
    0U,	// COPY_V128_S
    0U,	// CTZ_I32
    0U,	// CTZ_I32_S
    0U,	// CTZ_I64
    0U,	// CTZ_I64_S
    0U,	// DEBUG_UNREACHABLE
    0U,	// DEBUG_UNREACHABLE_S
    0U,	// DELEGATE
    0U,	// DELEGATE_S
    0U,	// DIV_F32
    0U,	// DIV_F32_S
    0U,	// DIV_F32x4
    0U,	// DIV_F32x4_S
    0U,	// DIV_F64
    0U,	// DIV_F64_S
    0U,	// DIV_F64x2
    0U,	// DIV_F64x2_S
    0U,	// DIV_S_I32
    0U,	// DIV_S_I32_S
    0U,	// DIV_S_I64
    0U,	// DIV_S_I64_S
    0U,	// DIV_U_I32
    0U,	// DIV_U_I32_S
    0U,	// DIV_U_I64
    0U,	// DIV_U_I64_S
    0U,	// DOT
    0U,	// DOT_S
    0U,	// DROP_EXTERNREF
    0U,	// DROP_EXTERNREF_S
    0U,	// DROP_F32
    0U,	// DROP_F32_S
    0U,	// DROP_F64
    0U,	// DROP_F64_S
    0U,	// DROP_FUNCREF
    0U,	// DROP_FUNCREF_S
    0U,	// DROP_I32
    0U,	// DROP_I32_S
    0U,	// DROP_I64
    0U,	// DROP_I64_S
    0U,	// DROP_V128
    0U,	// DROP_V128_S
    0U,	// ELSE
    0U,	// ELSE_S
    0U,	// END
    0U,	// END_BLOCK
    0U,	// END_BLOCK_S
    0U,	// END_FUNCTION
    0U,	// END_FUNCTION_S
    0U,	// END_IF
    0U,	// END_IF_S
    0U,	// END_LOOP
    0U,	// END_LOOP_S
    0U,	// END_S
    0U,	// END_TRY
    0U,	// END_TRY_S
    0U,	// EQZ_I32
    0U,	// EQZ_I32_S
    0U,	// EQZ_I64
    0U,	// EQZ_I64_S
    0U,	// EQ_F32
    0U,	// EQ_F32_S
    0U,	// EQ_F32x4
    0U,	// EQ_F32x4_S
    0U,	// EQ_F64
    0U,	// EQ_F64_S
    0U,	// EQ_F64x2
    0U,	// EQ_F64x2_S
    0U,	// EQ_I16x8
    0U,	// EQ_I16x8_S
    0U,	// EQ_I32
    0U,	// EQ_I32_S
    0U,	// EQ_I32x4
    0U,	// EQ_I32x4_S
    0U,	// EQ_I64
    0U,	// EQ_I64_S
    0U,	// EQ_I64x2
    0U,	// EQ_I64x2_S
    0U,	// EQ_I8x16
    0U,	// EQ_I8x16_S
    0U,	// EXTMUL_HIGH_S_I16x8
    0U,	// EXTMUL_HIGH_S_I16x8_S
    0U,	// EXTMUL_HIGH_S_I32x4
    0U,	// EXTMUL_HIGH_S_I32x4_S
    0U,	// EXTMUL_HIGH_S_I64x2
    0U,	// EXTMUL_HIGH_S_I64x2_S
    0U,	// EXTMUL_HIGH_U_I16x8
    0U,	// EXTMUL_HIGH_U_I16x8_S
    0U,	// EXTMUL_HIGH_U_I32x4
    0U,	// EXTMUL_HIGH_U_I32x4_S
    0U,	// EXTMUL_HIGH_U_I64x2
    0U,	// EXTMUL_HIGH_U_I64x2_S
    0U,	// EXTMUL_LOW_S_I16x8
    0U,	// EXTMUL_LOW_S_I16x8_S
    0U,	// EXTMUL_LOW_S_I32x4
    0U,	// EXTMUL_LOW_S_I32x4_S
    0U,	// EXTMUL_LOW_S_I64x2
    0U,	// EXTMUL_LOW_S_I64x2_S
    0U,	// EXTMUL_LOW_U_I16x8
    0U,	// EXTMUL_LOW_U_I16x8_S
    0U,	// EXTMUL_LOW_U_I32x4
    0U,	// EXTMUL_LOW_U_I32x4_S
    0U,	// EXTMUL_LOW_U_I64x2
    0U,	// EXTMUL_LOW_U_I64x2_S
    0U,	// EXTRACT_LANE_F32x4
    0U,	// EXTRACT_LANE_F32x4_S
    0U,	// EXTRACT_LANE_F64x2
    0U,	// EXTRACT_LANE_F64x2_S
    0U,	// EXTRACT_LANE_I16x8_s
    0U,	// EXTRACT_LANE_I16x8_s_S
    0U,	// EXTRACT_LANE_I16x8_u
    0U,	// EXTRACT_LANE_I16x8_u_S
    0U,	// EXTRACT_LANE_I32x4
    0U,	// EXTRACT_LANE_I32x4_S
    0U,	// EXTRACT_LANE_I64x2
    0U,	// EXTRACT_LANE_I64x2_S
    0U,	// EXTRACT_LANE_I8x16_s
    0U,	// EXTRACT_LANE_I8x16_s_S
    0U,	// EXTRACT_LANE_I8x16_u
    0U,	// EXTRACT_LANE_I8x16_u_S
    0U,	// F32_CONVERT_S_I32
    0U,	// F32_CONVERT_S_I32_S
    0U,	// F32_CONVERT_S_I64
    0U,	// F32_CONVERT_S_I64_S
    0U,	// F32_CONVERT_U_I32
    0U,	// F32_CONVERT_U_I32_S
    0U,	// F32_CONVERT_U_I64
    0U,	// F32_CONVERT_U_I64_S
    0U,	// F32_DEMOTE_F64
    0U,	// F32_DEMOTE_F64_S
    0U,	// F32_REINTERPRET_I32
    0U,	// F32_REINTERPRET_I32_S
    0U,	// F64_CONVERT_S_I32
    0U,	// F64_CONVERT_S_I32_S
    0U,	// F64_CONVERT_S_I64
    0U,	// F64_CONVERT_S_I64_S
    0U,	// F64_CONVERT_U_I32
    0U,	// F64_CONVERT_U_I32_S
    0U,	// F64_CONVERT_U_I64
    0U,	// F64_CONVERT_U_I64_S
    0U,	// F64_PROMOTE_F32
    0U,	// F64_PROMOTE_F32_S
    0U,	// F64_REINTERPRET_I64
    0U,	// F64_REINTERPRET_I64_S
    0U,	// FALLTHROUGH_RETURN
    0U,	// FALLTHROUGH_RETURN_S
    0U,	// FLOOR_F32
    0U,	// FLOOR_F32_S
    0U,	// FLOOR_F32x4
    0U,	// FLOOR_F32x4_S
    0U,	// FLOOR_F64
    0U,	// FLOOR_F64_S
    0U,	// FLOOR_F64x2
    0U,	// FLOOR_F64x2_S
    0U,	// FP_TO_SINT_I32_F32
    0U,	// FP_TO_SINT_I32_F32_S
    0U,	// FP_TO_SINT_I32_F64
    0U,	// FP_TO_SINT_I32_F64_S
    0U,	// FP_TO_SINT_I64_F32
    0U,	// FP_TO_SINT_I64_F32_S
    0U,	// FP_TO_SINT_I64_F64
    0U,	// FP_TO_SINT_I64_F64_S
    0U,	// FP_TO_UINT_I32_F32
    0U,	// FP_TO_UINT_I32_F32_S
    0U,	// FP_TO_UINT_I32_F64
    0U,	// FP_TO_UINT_I32_F64_S
    0U,	// FP_TO_UINT_I64_F32
    0U,	// FP_TO_UINT_I64_F32_S
    0U,	// FP_TO_UINT_I64_F64
    0U,	// FP_TO_UINT_I64_F64_S
    0U,	// GE_F32
    0U,	// GE_F32_S
    0U,	// GE_F32x4
    0U,	// GE_F32x4_S
    0U,	// GE_F64
    0U,	// GE_F64_S
    0U,	// GE_F64x2
    0U,	// GE_F64x2_S
    0U,	// GE_S_I16x8
    0U,	// GE_S_I16x8_S
    0U,	// GE_S_I32
    0U,	// GE_S_I32_S
    0U,	// GE_S_I32x4
    0U,	// GE_S_I32x4_S
    0U,	// GE_S_I64
    0U,	// GE_S_I64_S
    0U,	// GE_S_I64x2
    0U,	// GE_S_I64x2_S
    0U,	// GE_S_I8x16
    0U,	// GE_S_I8x16_S
    0U,	// GE_U_I16x8
    0U,	// GE_U_I16x8_S
    0U,	// GE_U_I32
    0U,	// GE_U_I32_S
    0U,	// GE_U_I32x4
    0U,	// GE_U_I32x4_S
    0U,	// GE_U_I64
    0U,	// GE_U_I64_S
    0U,	// GE_U_I8x16
    0U,	// GE_U_I8x16_S
    0U,	// GLOBAL_GET_EXTERNREF
    0U,	// GLOBAL_GET_EXTERNREF_S
    0U,	// GLOBAL_GET_F32
    0U,	// GLOBAL_GET_F32_S
    0U,	// GLOBAL_GET_F64
    0U,	// GLOBAL_GET_F64_S
    0U,	// GLOBAL_GET_FUNCREF
    0U,	// GLOBAL_GET_FUNCREF_S
    0U,	// GLOBAL_GET_I32
    0U,	// GLOBAL_GET_I32_S
    0U,	// GLOBAL_GET_I64
    0U,	// GLOBAL_GET_I64_S
    0U,	// GLOBAL_GET_V128
    0U,	// GLOBAL_GET_V128_S
    0U,	// GLOBAL_SET_EXTERNREF
    0U,	// GLOBAL_SET_EXTERNREF_S
    0U,	// GLOBAL_SET_F32
    0U,	// GLOBAL_SET_F32_S
    0U,	// GLOBAL_SET_F64
    0U,	// GLOBAL_SET_F64_S
    0U,	// GLOBAL_SET_FUNCREF
    0U,	// GLOBAL_SET_FUNCREF_S
    0U,	// GLOBAL_SET_I32
    0U,	// GLOBAL_SET_I32_S
    0U,	// GLOBAL_SET_I64
    0U,	// GLOBAL_SET_I64_S
    0U,	// GLOBAL_SET_V128
    0U,	// GLOBAL_SET_V128_S
    0U,	// GT_F32
    0U,	// GT_F32_S
    0U,	// GT_F32x4
    0U,	// GT_F32x4_S
    0U,	// GT_F64
    0U,	// GT_F64_S
    0U,	// GT_F64x2
    0U,	// GT_F64x2_S
    0U,	// GT_S_I16x8
    0U,	// GT_S_I16x8_S
    0U,	// GT_S_I32
    0U,	// GT_S_I32_S
    0U,	// GT_S_I32x4
    0U,	// GT_S_I32x4_S
    0U,	// GT_S_I64
    0U,	// GT_S_I64_S
    0U,	// GT_S_I64x2
    0U,	// GT_S_I64x2_S
    0U,	// GT_S_I8x16
    0U,	// GT_S_I8x16_S
    0U,	// GT_U_I16x8
    0U,	// GT_U_I16x8_S
    0U,	// GT_U_I32
    0U,	// GT_U_I32_S
    0U,	// GT_U_I32x4
    0U,	// GT_U_I32x4_S
    0U,	// GT_U_I64
    0U,	// GT_U_I64_S
    0U,	// GT_U_I8x16
    0U,	// GT_U_I8x16_S
    0U,	// I32_EXTEND16_S_I32
    0U,	// I32_EXTEND16_S_I32_S
    0U,	// I32_EXTEND8_S_I32
    0U,	// I32_EXTEND8_S_I32_S
    0U,	// I32_REINTERPRET_F32
    0U,	// I32_REINTERPRET_F32_S
    0U,	// I32_TRUNC_S_F32
    0U,	// I32_TRUNC_S_F32_S
    0U,	// I32_TRUNC_S_F64
    0U,	// I32_TRUNC_S_F64_S
    0U,	// I32_TRUNC_S_SAT_F32
    0U,	// I32_TRUNC_S_SAT_F32_S
    0U,	// I32_TRUNC_S_SAT_F64
    0U,	// I32_TRUNC_S_SAT_F64_S
    0U,	// I32_TRUNC_U_F32
    0U,	// I32_TRUNC_U_F32_S
    0U,	// I32_TRUNC_U_F64
    0U,	// I32_TRUNC_U_F64_S
    0U,	// I32_TRUNC_U_SAT_F32
    0U,	// I32_TRUNC_U_SAT_F32_S
    0U,	// I32_TRUNC_U_SAT_F64
    0U,	// I32_TRUNC_U_SAT_F64_S
    0U,	// I32_WRAP_I64
    0U,	// I32_WRAP_I64_S
    0U,	// I64_EXTEND16_S_I64
    0U,	// I64_EXTEND16_S_I64_S
    0U,	// I64_EXTEND32_S_I64
    0U,	// I64_EXTEND32_S_I64_S
    0U,	// I64_EXTEND8_S_I64
    0U,	// I64_EXTEND8_S_I64_S
    0U,	// I64_EXTEND_S_I32
    0U,	// I64_EXTEND_S_I32_S
    0U,	// I64_EXTEND_U_I32
    0U,	// I64_EXTEND_U_I32_S
    0U,	// I64_REINTERPRET_F64
    0U,	// I64_REINTERPRET_F64_S
    0U,	// I64_TRUNC_S_F32
    0U,	// I64_TRUNC_S_F32_S
    0U,	// I64_TRUNC_S_F64
    0U,	// I64_TRUNC_S_F64_S
    0U,	// I64_TRUNC_S_SAT_F32
    0U,	// I64_TRUNC_S_SAT_F32_S
    0U,	// I64_TRUNC_S_SAT_F64
    0U,	// I64_TRUNC_S_SAT_F64_S
    0U,	// I64_TRUNC_U_F32
    0U,	// I64_TRUNC_U_F32_S
    0U,	// I64_TRUNC_U_F64
    0U,	// I64_TRUNC_U_F64_S
    0U,	// I64_TRUNC_U_SAT_F32
    0U,	// I64_TRUNC_U_SAT_F32_S
    0U,	// I64_TRUNC_U_SAT_F64
    0U,	// I64_TRUNC_U_SAT_F64_S
    0U,	// IF
    0U,	// IF_S
    0U,	// LANESELECT_I16x8
    0U,	// LANESELECT_I16x8_S
    0U,	// LANESELECT_I32x4
    0U,	// LANESELECT_I32x4_S
    0U,	// LANESELECT_I64x2
    0U,	// LANESELECT_I64x2_S
    0U,	// LANESELECT_I8x16
    0U,	// LANESELECT_I8x16_S
    0U,	// LE_F32
    0U,	// LE_F32_S
    0U,	// LE_F32x4
    0U,	// LE_F32x4_S
    0U,	// LE_F64
    0U,	// LE_F64_S
    0U,	// LE_F64x2
    0U,	// LE_F64x2_S
    0U,	// LE_S_I16x8
    0U,	// LE_S_I16x8_S
    0U,	// LE_S_I32
    0U,	// LE_S_I32_S
    0U,	// LE_S_I32x4
    0U,	// LE_S_I32x4_S
    0U,	// LE_S_I64
    0U,	// LE_S_I64_S
    0U,	// LE_S_I64x2
    0U,	// LE_S_I64x2_S
    0U,	// LE_S_I8x16
    0U,	// LE_S_I8x16_S
    0U,	// LE_U_I16x8
    0U,	// LE_U_I16x8_S
    0U,	// LE_U_I32
    0U,	// LE_U_I32_S
    0U,	// LE_U_I32x4
    0U,	// LE_U_I32x4_S
    0U,	// LE_U_I64
    0U,	// LE_U_I64_S
    0U,	// LE_U_I8x16
    0U,	// LE_U_I8x16_S
    0U,	// LOAD16_SPLAT_A32
    0U,	// LOAD16_SPLAT_A32_S
    0U,	// LOAD16_SPLAT_A64
    0U,	// LOAD16_SPLAT_A64_S
    0U,	// LOAD16_S_I32_A32
    0U,	// LOAD16_S_I32_A32_S
    0U,	// LOAD16_S_I32_A64
    0U,	// LOAD16_S_I32_A64_S
    0U,	// LOAD16_S_I64_A32
    0U,	// LOAD16_S_I64_A32_S
    0U,	// LOAD16_S_I64_A64
    0U,	// LOAD16_S_I64_A64_S
    0U,	// LOAD16_U_I32_A32
    0U,	// LOAD16_U_I32_A32_S
    0U,	// LOAD16_U_I32_A64
    0U,	// LOAD16_U_I32_A64_S
    0U,	// LOAD16_U_I64_A32
    0U,	// LOAD16_U_I64_A32_S
    0U,	// LOAD16_U_I64_A64
    0U,	// LOAD16_U_I64_A64_S
    0U,	// LOAD32_SPLAT_A32
    0U,	// LOAD32_SPLAT_A32_S
    0U,	// LOAD32_SPLAT_A64
    0U,	// LOAD32_SPLAT_A64_S
    0U,	// LOAD32_S_I64_A32
    0U,	// LOAD32_S_I64_A32_S
    0U,	// LOAD32_S_I64_A64
    0U,	// LOAD32_S_I64_A64_S
    0U,	// LOAD32_U_I64_A32
    0U,	// LOAD32_U_I64_A32_S
    0U,	// LOAD32_U_I64_A64
    0U,	// LOAD32_U_I64_A64_S
    0U,	// LOAD64_SPLAT_A32
    0U,	// LOAD64_SPLAT_A32_S
    0U,	// LOAD64_SPLAT_A64
    0U,	// LOAD64_SPLAT_A64_S
    0U,	// LOAD8_SPLAT_A32
    0U,	// LOAD8_SPLAT_A32_S
    0U,	// LOAD8_SPLAT_A64
    0U,	// LOAD8_SPLAT_A64_S
    0U,	// LOAD8_S_I32_A32
    0U,	// LOAD8_S_I32_A32_S
    0U,	// LOAD8_S_I32_A64
    0U,	// LOAD8_S_I32_A64_S
    0U,	// LOAD8_S_I64_A32
    0U,	// LOAD8_S_I64_A32_S
    0U,	// LOAD8_S_I64_A64
    0U,	// LOAD8_S_I64_A64_S
    0U,	// LOAD8_U_I32_A32
    0U,	// LOAD8_U_I32_A32_S
    0U,	// LOAD8_U_I32_A64
    0U,	// LOAD8_U_I32_A64_S
    0U,	// LOAD8_U_I64_A32
    0U,	// LOAD8_U_I64_A32_S
    0U,	// LOAD8_U_I64_A64
    0U,	// LOAD8_U_I64_A64_S
    0U,	// LOAD_EXTEND_S_I16x8_A32
    0U,	// LOAD_EXTEND_S_I16x8_A32_S
    0U,	// LOAD_EXTEND_S_I16x8_A64
    0U,	// LOAD_EXTEND_S_I16x8_A64_S
    0U,	// LOAD_EXTEND_S_I32x4_A32
    0U,	// LOAD_EXTEND_S_I32x4_A32_S
    0U,	// LOAD_EXTEND_S_I32x4_A64
    0U,	// LOAD_EXTEND_S_I32x4_A64_S
    0U,	// LOAD_EXTEND_S_I64x2_A32
    0U,	// LOAD_EXTEND_S_I64x2_A32_S
    0U,	// LOAD_EXTEND_S_I64x2_A64
    0U,	// LOAD_EXTEND_S_I64x2_A64_S
    0U,	// LOAD_EXTEND_U_I16x8_A32
    0U,	// LOAD_EXTEND_U_I16x8_A32_S
    0U,	// LOAD_EXTEND_U_I16x8_A64
    0U,	// LOAD_EXTEND_U_I16x8_A64_S
    0U,	// LOAD_EXTEND_U_I32x4_A32
    0U,	// LOAD_EXTEND_U_I32x4_A32_S
    0U,	// LOAD_EXTEND_U_I32x4_A64
    0U,	// LOAD_EXTEND_U_I32x4_A64_S
    0U,	// LOAD_EXTEND_U_I64x2_A32
    0U,	// LOAD_EXTEND_U_I64x2_A32_S
    0U,	// LOAD_EXTEND_U_I64x2_A64
    0U,	// LOAD_EXTEND_U_I64x2_A64_S
    0U,	// LOAD_F32_A32
    0U,	// LOAD_F32_A32_S
    0U,	// LOAD_F32_A64
    0U,	// LOAD_F32_A64_S
    0U,	// LOAD_F64_A32
    0U,	// LOAD_F64_A32_S
    0U,	// LOAD_F64_A64
    0U,	// LOAD_F64_A64_S
    0U,	// LOAD_I32_A32
    0U,	// LOAD_I32_A32_S
    0U,	// LOAD_I32_A64
    0U,	// LOAD_I32_A64_S
    0U,	// LOAD_I64_A32
    0U,	// LOAD_I64_A32_S
    0U,	// LOAD_I64_A64
    0U,	// LOAD_I64_A64_S
    0U,	// LOAD_LANE_I16x8_A32
    0U,	// LOAD_LANE_I16x8_A32_S
    0U,	// LOAD_LANE_I16x8_A64
    0U,	// LOAD_LANE_I16x8_A64_S
    0U,	// LOAD_LANE_I32x4_A32
    0U,	// LOAD_LANE_I32x4_A32_S
    0U,	// LOAD_LANE_I32x4_A64
    0U,	// LOAD_LANE_I32x4_A64_S
    0U,	// LOAD_LANE_I64x2_A32
    0U,	// LOAD_LANE_I64x2_A32_S
    0U,	// LOAD_LANE_I64x2_A64
    0U,	// LOAD_LANE_I64x2_A64_S
    0U,	// LOAD_LANE_I8x16_A32
    0U,	// LOAD_LANE_I8x16_A32_S
    0U,	// LOAD_LANE_I8x16_A64
    0U,	// LOAD_LANE_I8x16_A64_S
    0U,	// LOAD_V128_A32
    0U,	// LOAD_V128_A32_S
    0U,	// LOAD_V128_A64
    0U,	// LOAD_V128_A64_S
    0U,	// LOAD_ZERO_I32x4_A32
    0U,	// LOAD_ZERO_I32x4_A32_S
    0U,	// LOAD_ZERO_I32x4_A64
    0U,	// LOAD_ZERO_I32x4_A64_S
    0U,	// LOAD_ZERO_I64x2_A32
    0U,	// LOAD_ZERO_I64x2_A32_S
    0U,	// LOAD_ZERO_I64x2_A64
    0U,	// LOAD_ZERO_I64x2_A64_S
    0U,	// LOCAL_GET_EXTERNREF
    0U,	// LOCAL_GET_EXTERNREF_S
    0U,	// LOCAL_GET_F32
    0U,	// LOCAL_GET_F32_S
    0U,	// LOCAL_GET_F64
    0U,	// LOCAL_GET_F64_S
    0U,	// LOCAL_GET_FUNCREF
    0U,	// LOCAL_GET_FUNCREF_S
    0U,	// LOCAL_GET_I32
    0U,	// LOCAL_GET_I32_S
    0U,	// LOCAL_GET_I64
    0U,	// LOCAL_GET_I64_S
    0U,	// LOCAL_GET_V128
    0U,	// LOCAL_GET_V128_S
    0U,	// LOCAL_SET_EXTERNREF
    0U,	// LOCAL_SET_EXTERNREF_S
    0U,	// LOCAL_SET_F32
    0U,	// LOCAL_SET_F32_S
    0U,	// LOCAL_SET_F64
    0U,	// LOCAL_SET_F64_S
    0U,	// LOCAL_SET_FUNCREF
    0U,	// LOCAL_SET_FUNCREF_S
    0U,	// LOCAL_SET_I32
    0U,	// LOCAL_SET_I32_S
    0U,	// LOCAL_SET_I64
    0U,	// LOCAL_SET_I64_S
    0U,	// LOCAL_SET_V128
    0U,	// LOCAL_SET_V128_S
    0U,	// LOCAL_TEE_EXTERNREF
    0U,	// LOCAL_TEE_EXTERNREF_S
    0U,	// LOCAL_TEE_F32
    0U,	// LOCAL_TEE_F32_S
    0U,	// LOCAL_TEE_F64
    0U,	// LOCAL_TEE_F64_S
    0U,	// LOCAL_TEE_FUNCREF
    0U,	// LOCAL_TEE_FUNCREF_S
    0U,	// LOCAL_TEE_I32
    0U,	// LOCAL_TEE_I32_S
    0U,	// LOCAL_TEE_I64
    0U,	// LOCAL_TEE_I64_S
    0U,	// LOCAL_TEE_V128
    0U,	// LOCAL_TEE_V128_S
    0U,	// LOOP
    0U,	// LOOP_S
    0U,	// LT_F32
    0U,	// LT_F32_S
    0U,	// LT_F32x4
    0U,	// LT_F32x4_S
    0U,	// LT_F64
    0U,	// LT_F64_S
    0U,	// LT_F64x2
    0U,	// LT_F64x2_S
    0U,	// LT_S_I16x8
    0U,	// LT_S_I16x8_S
    0U,	// LT_S_I32
    0U,	// LT_S_I32_S
    0U,	// LT_S_I32x4
    0U,	// LT_S_I32x4_S
    0U,	// LT_S_I64
    0U,	// LT_S_I64_S
    0U,	// LT_S_I64x2
    0U,	// LT_S_I64x2_S
    0U,	// LT_S_I8x16
    0U,	// LT_S_I8x16_S
    0U,	// LT_U_I16x8
    0U,	// LT_U_I16x8_S
    0U,	// LT_U_I32
    0U,	// LT_U_I32_S
    0U,	// LT_U_I32x4
    0U,	// LT_U_I32x4_S
    0U,	// LT_U_I64
    0U,	// LT_U_I64_S
    0U,	// LT_U_I8x16
    0U,	// LT_U_I8x16_S
    0U,	// MADD_F32x4
    0U,	// MADD_F32x4_S
    0U,	// MADD_F64x2
    0U,	// MADD_F64x2_S
    0U,	// MAX_F32
    0U,	// MAX_F32_S
    0U,	// MAX_F32x4
    0U,	// MAX_F32x4_S
    0U,	// MAX_F64
    0U,	// MAX_F64_S
    0U,	// MAX_F64x2
    0U,	// MAX_F64x2_S
    0U,	// MAX_S_I16x8
    0U,	// MAX_S_I16x8_S
    0U,	// MAX_S_I32x4
    0U,	// MAX_S_I32x4_S
    0U,	// MAX_S_I8x16
    0U,	// MAX_S_I8x16_S
    0U,	// MAX_U_I16x8
    0U,	// MAX_U_I16x8_S
    0U,	// MAX_U_I32x4
    0U,	// MAX_U_I32x4_S
    0U,	// MAX_U_I8x16
    0U,	// MAX_U_I8x16_S
    0U,	// MEMORY_ATOMIC_NOTIFY_A32
    0U,	// MEMORY_ATOMIC_NOTIFY_A32_S
    0U,	// MEMORY_ATOMIC_NOTIFY_A64
    0U,	// MEMORY_ATOMIC_NOTIFY_A64_S
    0U,	// MEMORY_ATOMIC_WAIT32_A32
    0U,	// MEMORY_ATOMIC_WAIT32_A32_S
    0U,	// MEMORY_ATOMIC_WAIT32_A64
    0U,	// MEMORY_ATOMIC_WAIT32_A64_S
    0U,	// MEMORY_ATOMIC_WAIT64_A32
    0U,	// MEMORY_ATOMIC_WAIT64_A32_S
    0U,	// MEMORY_ATOMIC_WAIT64_A64
    0U,	// MEMORY_ATOMIC_WAIT64_A64_S
    0U,	// MIN_F32
    0U,	// MIN_F32_S
    0U,	// MIN_F32x4
    0U,	// MIN_F32x4_S
    0U,	// MIN_F64
    0U,	// MIN_F64_S
    0U,	// MIN_F64x2
    0U,	// MIN_F64x2_S
    0U,	// MIN_S_I16x8
    0U,	// MIN_S_I16x8_S
    0U,	// MIN_S_I32x4
    0U,	// MIN_S_I32x4_S
    0U,	// MIN_S_I8x16
    0U,	// MIN_S_I8x16_S
    0U,	// MIN_U_I16x8
    0U,	// MIN_U_I16x8_S
    0U,	// MIN_U_I32x4
    0U,	// MIN_U_I32x4_S
    0U,	// MIN_U_I8x16
    0U,	// MIN_U_I8x16_S
    0U,	// MUL_F32
    0U,	// MUL_F32_S
    0U,	// MUL_F32x4
    0U,	// MUL_F32x4_S
    0U,	// MUL_F64
    0U,	// MUL_F64_S
    0U,	// MUL_F64x2
    0U,	// MUL_F64x2_S
    0U,	// MUL_I16x8
    0U,	// MUL_I16x8_S
    0U,	// MUL_I32
    0U,	// MUL_I32_S
    0U,	// MUL_I32x4
    0U,	// MUL_I32x4_S
    0U,	// MUL_I64
    0U,	// MUL_I64_S
    0U,	// MUL_I64x2
    0U,	// MUL_I64x2_S
    0U,	// NARROW_S_I16x8
    0U,	// NARROW_S_I16x8_S
    0U,	// NARROW_S_I8x16
    0U,	// NARROW_S_I8x16_S
    0U,	// NARROW_U_I16x8
    0U,	// NARROW_U_I16x8_S
    0U,	// NARROW_U_I8x16
    0U,	// NARROW_U_I8x16_S
    0U,	// NEAREST_F32
    0U,	// NEAREST_F32_S
    0U,	// NEAREST_F32x4
    0U,	// NEAREST_F32x4_S
    0U,	// NEAREST_F64
    0U,	// NEAREST_F64_S
    0U,	// NEAREST_F64x2
    0U,	// NEAREST_F64x2_S
    0U,	// NEG_F32
    0U,	// NEG_F32_S
    0U,	// NEG_F32x4
    0U,	// NEG_F32x4_S
    0U,	// NEG_F64
    0U,	// NEG_F64_S
    0U,	// NEG_F64x2
    0U,	// NEG_F64x2_S
    0U,	// NEG_I16x8
    0U,	// NEG_I16x8_S
    0U,	// NEG_I32x4
    0U,	// NEG_I32x4_S
    0U,	// NEG_I64x2
    0U,	// NEG_I64x2_S
    0U,	// NEG_I8x16
    0U,	// NEG_I8x16_S
    0U,	// NE_F32
    0U,	// NE_F32_S
    0U,	// NE_F32x4
    0U,	// NE_F32x4_S
    0U,	// NE_F64
    0U,	// NE_F64_S
    0U,	// NE_F64x2
    0U,	// NE_F64x2_S
    0U,	// NE_I16x8
    0U,	// NE_I16x8_S
    0U,	// NE_I32
    0U,	// NE_I32_S
    0U,	// NE_I32x4
    0U,	// NE_I32x4_S
    0U,	// NE_I64
    0U,	// NE_I64_S
    0U,	// NE_I64x2
    0U,	// NE_I64x2_S
    0U,	// NE_I8x16
    0U,	// NE_I8x16_S
    0U,	// NMADD_F32x4
    0U,	// NMADD_F32x4_S
    0U,	// NMADD_F64x2
    0U,	// NMADD_F64x2_S
    0U,	// NOP
    0U,	// NOP_S
    0U,	// NOT
    0U,	// NOT_S
    0U,	// OR
    0U,	// OR_I32
    0U,	// OR_I32_S
    0U,	// OR_I64
    0U,	// OR_I64_S
    0U,	// OR_S
    0U,	// PMAX_F32x4
    0U,	// PMAX_F32x4_S
    0U,	// PMAX_F64x2
    0U,	// PMAX_F64x2_S
    0U,	// PMIN_F32x4
    0U,	// PMIN_F32x4_S
    0U,	// PMIN_F64x2
    0U,	// PMIN_F64x2_S
    0U,	// POPCNT_I32
    0U,	// POPCNT_I32_S
    0U,	// POPCNT_I64
    0U,	// POPCNT_I64_S
    0U,	// POPCNT_I8x16
    0U,	// POPCNT_I8x16_S
    0U,	// Q15MULR_SAT_S_I16x8
    0U,	// Q15MULR_SAT_S_I16x8_S
    0U,	// REF_IS_NULL_EXTERNREF
    0U,	// REF_IS_NULL_EXTERNREF_S
    0U,	// REF_IS_NULL_FUNCREF
    0U,	// REF_IS_NULL_FUNCREF_S
    0U,	// REF_NULL_EXTERNREF
    0U,	// REF_NULL_EXTERNREF_S
    0U,	// REF_NULL_FUNCREF
    0U,	// REF_NULL_FUNCREF_S
    0U,	// RELAXED_DOT
    0U,	// RELAXED_DOT_ADD
    0U,	// RELAXED_DOT_ADD_S
    0U,	// RELAXED_DOT_BFLOAT
    0U,	// RELAXED_DOT_BFLOAT_S
    0U,	// RELAXED_DOT_S
    0U,	// RELAXED_Q15MULR_S_I16x8
    0U,	// RELAXED_Q15MULR_S_I16x8_S
    0U,	// RELAXED_SWIZZLE
    0U,	// RELAXED_SWIZZLE_S
    0U,	// REM_S_I32
    0U,	// REM_S_I32_S
    0U,	// REM_S_I64
    0U,	// REM_S_I64_S
    0U,	// REM_U_I32
    0U,	// REM_U_I32_S
    0U,	// REM_U_I64
    0U,	// REM_U_I64_S
    0U,	// REPLACE_LANE_F32x4
    0U,	// REPLACE_LANE_F32x4_S
    0U,	// REPLACE_LANE_F64x2
    0U,	// REPLACE_LANE_F64x2_S
    0U,	// REPLACE_LANE_I16x8
    0U,	// REPLACE_LANE_I16x8_S
    0U,	// REPLACE_LANE_I32x4
    0U,	// REPLACE_LANE_I32x4_S
    0U,	// REPLACE_LANE_I64x2
    0U,	// REPLACE_LANE_I64x2_S
    0U,	// REPLACE_LANE_I8x16
    0U,	// REPLACE_LANE_I8x16_S
    0U,	// RETHROW
    0U,	// RETHROW_S
    0U,	// RETURN
    0U,	// RETURN_S
    0U,	// RET_CALL
    0U,	// RET_CALL_INDIRECT
    0U,	// RET_CALL_INDIRECT_S
    0U,	// RET_CALL_S
    0U,	// ROTL_I32
    0U,	// ROTL_I32_S
    0U,	// ROTL_I64
    0U,	// ROTL_I64_S
    0U,	// ROTR_I32
    0U,	// ROTR_I32_S
    0U,	// ROTR_I64
    0U,	// ROTR_I64_S
    0U,	// SELECT_EXTERNREF
    0U,	// SELECT_EXTERNREF_S
    0U,	// SELECT_F32
    0U,	// SELECT_F32_S
    0U,	// SELECT_F64
    0U,	// SELECT_F64_S
    0U,	// SELECT_FUNCREF
    0U,	// SELECT_FUNCREF_S
    0U,	// SELECT_I32
    0U,	// SELECT_I32_S
    0U,	// SELECT_I64
    0U,	// SELECT_I64_S
    0U,	// SELECT_V128
    0U,	// SELECT_V128_S
    0U,	// SHL_I16x8
    0U,	// SHL_I16x8_S
    0U,	// SHL_I32
    0U,	// SHL_I32_S
    0U,	// SHL_I32x4
    0U,	// SHL_I32x4_S
    0U,	// SHL_I64
    0U,	// SHL_I64_S
    0U,	// SHL_I64x2
    0U,	// SHL_I64x2_S
    0U,	// SHL_I8x16
    0U,	// SHL_I8x16_S
    0U,	// SHR_S_I16x8
    0U,	// SHR_S_I16x8_S
    0U,	// SHR_S_I32
    0U,	// SHR_S_I32_S
    0U,	// SHR_S_I32x4
    0U,	// SHR_S_I32x4_S
    0U,	// SHR_S_I64
    0U,	// SHR_S_I64_S
    0U,	// SHR_S_I64x2
    0U,	// SHR_S_I64x2_S
    0U,	// SHR_S_I8x16
    0U,	// SHR_S_I8x16_S
    0U,	// SHR_U_I16x8
    0U,	// SHR_U_I16x8_S
    0U,	// SHR_U_I32
    0U,	// SHR_U_I32_S
    0U,	// SHR_U_I32x4
    0U,	// SHR_U_I32x4_S
    0U,	// SHR_U_I64
    0U,	// SHR_U_I64_S
    0U,	// SHR_U_I64x2
    0U,	// SHR_U_I64x2_S
    0U,	// SHR_U_I8x16
    0U,	// SHR_U_I8x16_S
    1U,	// SHUFFLE
    0U,	// SHUFFLE_S
    0U,	// SIMD_RELAXED_FMAX_F32x4
    0U,	// SIMD_RELAXED_FMAX_F32x4_S
    0U,	// SIMD_RELAXED_FMAX_F64x2
    0U,	// SIMD_RELAXED_FMAX_F64x2_S
    0U,	// SIMD_RELAXED_FMIN_F32x4
    0U,	// SIMD_RELAXED_FMIN_F32x4_S
    0U,	// SIMD_RELAXED_FMIN_F64x2
    0U,	// SIMD_RELAXED_FMIN_F64x2_S
    0U,	// SPLAT_F32x4
    0U,	// SPLAT_F32x4_S
    0U,	// SPLAT_F64x2
    0U,	// SPLAT_F64x2_S
    0U,	// SPLAT_I16x8
    0U,	// SPLAT_I16x8_S
    0U,	// SPLAT_I32x4
    0U,	// SPLAT_I32x4_S
    0U,	// SPLAT_I64x2
    0U,	// SPLAT_I64x2_S
    0U,	// SPLAT_I8x16
    0U,	// SPLAT_I8x16_S
    0U,	// SQRT_F32
    0U,	// SQRT_F32_S
    0U,	// SQRT_F32x4
    0U,	// SQRT_F32x4_S
    0U,	// SQRT_F64
    0U,	// SQRT_F64_S
    0U,	// SQRT_F64x2
    0U,	// SQRT_F64x2_S
    0U,	// STORE16_I32_A32
    0U,	// STORE16_I32_A32_S
    0U,	// STORE16_I32_A64
    0U,	// STORE16_I32_A64_S
    0U,	// STORE16_I64_A32
    0U,	// STORE16_I64_A32_S
    0U,	// STORE16_I64_A64
    0U,	// STORE16_I64_A64_S
    0U,	// STORE32_I64_A32
    0U,	// STORE32_I64_A32_S
    0U,	// STORE32_I64_A64
    0U,	// STORE32_I64_A64_S
    0U,	// STORE8_I32_A32
    0U,	// STORE8_I32_A32_S
    0U,	// STORE8_I32_A64
    0U,	// STORE8_I32_A64_S
    0U,	// STORE8_I64_A32
    0U,	// STORE8_I64_A32_S
    0U,	// STORE8_I64_A64
    0U,	// STORE8_I64_A64_S
    0U,	// STORE_F32_A32
    0U,	// STORE_F32_A32_S
    0U,	// STORE_F32_A64
    0U,	// STORE_F32_A64_S
    0U,	// STORE_F64_A32
    0U,	// STORE_F64_A32_S
    0U,	// STORE_F64_A64
    0U,	// STORE_F64_A64_S
    0U,	// STORE_I32_A32
    0U,	// STORE_I32_A32_S
    0U,	// STORE_I32_A64
    0U,	// STORE_I32_A64_S
    0U,	// STORE_I64_A32
    0U,	// STORE_I64_A32_S
    0U,	// STORE_I64_A64
    0U,	// STORE_I64_A64_S
    0U,	// STORE_LANE_I16x8_A32
    0U,	// STORE_LANE_I16x8_A32_S
    0U,	// STORE_LANE_I16x8_A64
    0U,	// STORE_LANE_I16x8_A64_S
    0U,	// STORE_LANE_I32x4_A32
    0U,	// STORE_LANE_I32x4_A32_S
    0U,	// STORE_LANE_I32x4_A64
    0U,	// STORE_LANE_I32x4_A64_S
    0U,	// STORE_LANE_I64x2_A32
    0U,	// STORE_LANE_I64x2_A32_S
    0U,	// STORE_LANE_I64x2_A64
    0U,	// STORE_LANE_I64x2_A64_S
    0U,	// STORE_LANE_I8x16_A32
    0U,	// STORE_LANE_I8x16_A32_S
    0U,	// STORE_LANE_I8x16_A64
    0U,	// STORE_LANE_I8x16_A64_S
    0U,	// STORE_V128_A32
    0U,	// STORE_V128_A32_S
    0U,	// STORE_V128_A64
    0U,	// STORE_V128_A64_S
    0U,	// SUB_F32
    0U,	// SUB_F32_S
    0U,	// SUB_F32x4
    0U,	// SUB_F32x4_S
    0U,	// SUB_F64
    0U,	// SUB_F64_S
    0U,	// SUB_F64x2
    0U,	// SUB_F64x2_S
    0U,	// SUB_I16x8
    0U,	// SUB_I16x8_S
    0U,	// SUB_I32
    0U,	// SUB_I32_S
    0U,	// SUB_I32x4
    0U,	// SUB_I32x4_S
    0U,	// SUB_I64
    0U,	// SUB_I64_S
    0U,	// SUB_I64x2
    0U,	// SUB_I64x2_S
    0U,	// SUB_I8x16
    0U,	// SUB_I8x16_S
    0U,	// SUB_SAT_S_I16x8
    0U,	// SUB_SAT_S_I16x8_S
    0U,	// SUB_SAT_S_I8x16
    0U,	// SUB_SAT_S_I8x16_S
    0U,	// SUB_SAT_U_I16x8
    0U,	// SUB_SAT_U_I16x8_S
    0U,	// SUB_SAT_U_I8x16
    0U,	// SUB_SAT_U_I8x16_S
    0U,	// SWIZZLE
    0U,	// SWIZZLE_S
    0U,	// TABLE_COPY
    0U,	// TABLE_COPY_S
    0U,	// TABLE_FILL_EXTERNREF
    0U,	// TABLE_FILL_EXTERNREF_S
    0U,	// TABLE_FILL_FUNCREF
    0U,	// TABLE_FILL_FUNCREF_S
    0U,	// TABLE_GET_EXTERNREF
    0U,	// TABLE_GET_EXTERNREF_S
    0U,	// TABLE_GET_FUNCREF
    0U,	// TABLE_GET_FUNCREF_S
    0U,	// TABLE_GROW_EXTERNREF
    0U,	// TABLE_GROW_EXTERNREF_S
    0U,	// TABLE_GROW_FUNCREF
    0U,	// TABLE_GROW_FUNCREF_S
    0U,	// TABLE_SET_EXTERNREF
    0U,	// TABLE_SET_EXTERNREF_S
    0U,	// TABLE_SET_FUNCREF
    0U,	// TABLE_SET_FUNCREF_S
    0U,	// TABLE_SIZE
    0U,	// TABLE_SIZE_S
    0U,	// TEE_EXTERNREF
    0U,	// TEE_EXTERNREF_S
    0U,	// TEE_F32
    0U,	// TEE_F32_S
    0U,	// TEE_F64
    0U,	// TEE_F64_S
    0U,	// TEE_FUNCREF
    0U,	// TEE_FUNCREF_S
    0U,	// TEE_I32
    0U,	// TEE_I32_S
    0U,	// TEE_I64
    0U,	// TEE_I64_S
    0U,	// TEE_V128
    0U,	// TEE_V128_S
    0U,	// THROW
    0U,	// THROW_S
    0U,	// TRUNC_F32
    0U,	// TRUNC_F32_S
    0U,	// TRUNC_F32x4
    0U,	// TRUNC_F32x4_S
    0U,	// TRUNC_F64
    0U,	// TRUNC_F64_S
    0U,	// TRUNC_F64x2
    0U,	// TRUNC_F64x2_S
    0U,	// TRY
    0U,	// TRY_S
    0U,	// UNREACHABLE
    0U,	// UNREACHABLE_S
    0U,	// XOR
    0U,	// XOR_I32
    0U,	// XOR_I32_S
    0U,	// XOR_I64
    0U,	// XOR_I64_S
    0U,	// XOR_S
    0U,	// anonymous_4396MEMORY_GROW_A32
    0U,	// anonymous_4396MEMORY_GROW_A32_S
    0U,	// anonymous_4396MEMORY_SIZE_A32
    0U,	// anonymous_4396MEMORY_SIZE_A32_S
    0U,	// anonymous_4397MEMORY_GROW_A64
    0U,	// anonymous_4397MEMORY_GROW_A64_S
    0U,	// anonymous_4397MEMORY_SIZE_A64
    0U,	// anonymous_4397MEMORY_SIZE_A64_S
    0U,	// anonymous_6249DATA_DROP
    0U,	// anonymous_6249DATA_DROP_S
    0U,	// anonymous_6249MEMORY_COPY_A32
    0U,	// anonymous_6249MEMORY_COPY_A32_S
    0U,	// anonymous_6249MEMORY_FILL_A32
    0U,	// anonymous_6249MEMORY_FILL_A32_S
    0U,	// anonymous_6249MEMORY_INIT_A32
    0U,	// anonymous_6249MEMORY_INIT_A32_S
    0U,	// anonymous_6250DATA_DROP
    0U,	// anonymous_6250DATA_DROP_S
    0U,	// anonymous_6250MEMORY_COPY_A64
    0U,	// anonymous_6250MEMORY_COPY_A64_S
    0U,	// anonymous_6250MEMORY_FILL_A64
    0U,	// anonymous_6250MEMORY_FILL_A64_S
    0U,	// anonymous_6250MEMORY_INIT_A64
    0U,	// anonymous_6250MEMORY_INIT_A64_S
    0U,	// convert_low_s_F64x2
    0U,	// convert_low_s_F64x2_S
    0U,	// convert_low_u_F64x2
    0U,	// convert_low_u_F64x2_S
    0U,	// demote_zero_F32x4
    0U,	// demote_zero_F32x4_S
    0U,	// extend_high_s_I16x8
    0U,	// extend_high_s_I16x8_S
    0U,	// extend_high_s_I32x4
    0U,	// extend_high_s_I32x4_S
    0U,	// extend_high_s_I64x2
    0U,	// extend_high_s_I64x2_S
    0U,	// extend_high_u_I16x8
    0U,	// extend_high_u_I16x8_S
    0U,	// extend_high_u_I32x4
    0U,	// extend_high_u_I32x4_S
    0U,	// extend_high_u_I64x2
    0U,	// extend_high_u_I64x2_S
    0U,	// extend_low_s_I16x8
    0U,	// extend_low_s_I16x8_S
    0U,	// extend_low_s_I32x4
    0U,	// extend_low_s_I32x4_S
    0U,	// extend_low_s_I64x2
    0U,	// extend_low_s_I64x2_S
    0U,	// extend_low_u_I16x8
    0U,	// extend_low_u_I16x8_S
    0U,	// extend_low_u_I32x4
    0U,	// extend_low_u_I32x4_S
    0U,	// extend_low_u_I64x2
    0U,	// extend_low_u_I64x2_S
    0U,	// fp_to_sint_I32x4
    0U,	// fp_to_sint_I32x4_S
    0U,	// fp_to_uint_I32x4
    0U,	// fp_to_uint_I32x4_S
    0U,	// int_wasm_extadd_pairwise_signed_I16x8
    0U,	// int_wasm_extadd_pairwise_signed_I16x8_S
    0U,	// int_wasm_extadd_pairwise_signed_I32x4
    0U,	// int_wasm_extadd_pairwise_signed_I32x4_S
    0U,	// int_wasm_extadd_pairwise_unsigned_I16x8
    0U,	// int_wasm_extadd_pairwise_unsigned_I16x8_S
    0U,	// int_wasm_extadd_pairwise_unsigned_I32x4
    0U,	// int_wasm_extadd_pairwise_unsigned_I32x4_S
    0U,	// int_wasm_relaxed_trunc_signed_I32x4
    0U,	// int_wasm_relaxed_trunc_signed_I32x4_S
    0U,	// int_wasm_relaxed_trunc_signed_zero_I32x4
    0U,	// int_wasm_relaxed_trunc_signed_zero_I32x4_S
    0U,	// int_wasm_relaxed_trunc_unsigned_I32x4
    0U,	// int_wasm_relaxed_trunc_unsigned_I32x4_S
    0U,	// int_wasm_relaxed_trunc_unsigned_zero_I32x4
    0U,	// int_wasm_relaxed_trunc_unsigned_zero_I32x4_S
    0U,	// promote_low_F64x2
    0U,	// promote_low_F64x2_S
    0U,	// sint_to_fp_F32x4
    0U,	// sint_to_fp_F32x4_S
    0U,	// trunc_sat_zero_s_I32x4
    0U,	// trunc_sat_zero_s_I32x4_S
    0U,	// trunc_sat_zero_u_I32x4
    0U,	// trunc_sat_zero_u_I32x4_S
    0U,	// uint_to_fp_F32x4
    0U,	// uint_to_fp_F32x4_S
  };

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  return {AsmStrs+(Bits & 16383)-1, Bits};

}
/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
LLVM_NO_PROFILE_INSTRUMENT_FUNCTION
void WebAssemblyInstPrinter::printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O) {
  O << "\t";

  auto MnemonicInfo = getMnemonic(MI);

  O << MnemonicInfo.first;

  uint64_t Bits = MnemonicInfo.second;
  assert(Bits != 0 && "Cannot print this instruction.");

  // Fragment 0 encoded into 3 bits for 6 unique commands.
  switch ((Bits >> 14) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_VALUE_LIST, DBG_INSTR_REF, DBG_PHI, DBG_LABEL, BUNDLE, ...
    return;
    break;
  case 1:
    // CALL_PARAMS, CALL_PARAMS_S, ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, AB...
    printOperand(MI, 0, O);
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32_S, ATOMIC_LOAD16_U_I32_A64_S, ATOMIC_LOAD16_U_...
    printOperand(MI, 1, O);
    break;
  case 3:
    // BLOCK, BLOCK_S, IF, IF_S, LOOP, LOOP_S, TRY, TRY_S
    printWebAssemblySignatureOperand(MI, 0, O);
    break;
  case 4:
    // BR_TABLE_I32_S, BR_TABLE_I64_S
    printBrList(MI, 0, O);
    return;
    break;
  case 5:
    // STORE_LANE_I16x8_A64, STORE_LANE_I32x4_A64, STORE_LANE_I64x2_A64, STOR...
    printOperand(MI, 2, O);
    O << '(';
    printOperand(MI, 4, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 5, O);
    O << ", ";
    printOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 1 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 17) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // CALL_PARAMS, CALL_PARAMS_S, BLOCK, BLOCK_S, BR, BR_IF_S, BR_S, BR_TABL...
    return;
    break;
  case 1:
    // ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, ABS_I16x8, ABS_I32x4, ABS_I64x...
    O << ", ";
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32_S, ATOMIC_LOAD16_U_I32_A64_S, ATOMIC_LOAD16_U_...
    printWebAssemblyP2AlignOperand(MI, 0, O);
    break;
  case 3:
    // ATOMIC_STORE16_I32_A32, ATOMIC_STORE16_I32_A64, ATOMIC_STORE16_I64_A32...
    O << '(';
    break;
  }


  // Fragment 2 encoded into 3 bits for 5 unique commands.
  switch ((Bits >> 19) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, ABS_I16x8, ABS_I32x4, ABS_I64x...
    printOperand(MI, 1, O);
    break;
  case 1:
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    printOperand(MI, 2, O);
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32_S, ATOMIC_LOAD16_U_I32_A64_S, ATOMIC_LOAD16_U_...
    return;
    break;
  case 3:
    // LOAD_LANE_I16x8_A32_S, LOAD_LANE_I16x8_A64_S, LOAD_LANE_I32x4_A32_S, L...
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 4:
    // STORE_LANE_I16x8_A32, STORE_LANE_I32x4_A32, STORE_LANE_I64x2_A32, STOR...
    printOperand(MI, 3, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 0, O);
    O << ", ";
    printOperand(MI, 4, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 3 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 22) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, ABS_I16x8, ABS_I32x4, ABS_I64x...
    return;
    break;
  case 1:
    // ADD_F32, ADD_F32x4, ADD_F64, ADD_F64x2, ADD_I16x8, ADD_I32, ADD_I32x4,...
    O << ", ";
    printOperand(MI, 2, O);
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    O << '(';
    break;
  case 3:
    // ATOMIC_STORE16_I32_A32, ATOMIC_STORE16_I32_A64, ATOMIC_STORE16_I64_A32...
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 0, O);
    O << ", ";
    printOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 4 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 24) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADD_F32, ADD_F32x4, ADD_F64, ADD_F64x2, ADD_I16x8, ADD_I32, ADD_I32x4,...
    return;
    break;
  case 1:
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    printOperand(MI, 3, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 1, O);
    break;
  case 2:
    // BITSELECT, CONST_V128_F32x4, CONST_V128_F32x4_S, CONST_V128_I16x8, CON...
    O << ", ";
    printOperand(MI, 3, O);
    break;
  case 3:
    // LOAD_LANE_I16x8_A32, LOAD_LANE_I16x8_A64, LOAD_LANE_I32x4_A32, LOAD_LA...
    printOperand(MI, 4, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 5, O);
    O << ", ";
    printOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 5 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 26) & 1) {
    // ATOMIC_RMW16_U_ADD_I32_A32, ATOMIC_RMW16_U_ADD_I32_A64, ATOMIC_RMW16_U...
    O << ", ";
    printOperand(MI, 4, O);
  } else {
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    return;
  }


  // Fragment 6 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 27) & 1) {
    // ATOMIC_RMW16_U_CMPXCHG_I32_A32, ATOMIC_RMW16_U_CMPXCHG_I32_A64, ATOMIC...
    O << ", ";
    printOperand(MI, 5, O);
  } else {
    // ATOMIC_RMW16_U_ADD_I32_A32, ATOMIC_RMW16_U_ADD_I32_A64, ATOMIC_RMW16_U...
    return;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 28) & 1) {
    // CONST_V128_I16x8, CONST_V128_I16x8_S, CONST_V128_I8x16, CONST_V128_I8x...
    O << ", ";
    printOperand(MI, 6, O);
    O << ", ";
    printOperand(MI, 7, O);
  } else {
    // ATOMIC_RMW16_U_CMPXCHG_I32_A32, ATOMIC_RMW16_U_CMPXCHG_I32_A64, ATOMIC...
    return;
  }


  // Fragment 8 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 29) & 1) {
    // CONST_V128_I16x8_S
    return;
  } else {
    // CONST_V128_I16x8, CONST_V128_I8x16, CONST_V128_I8x16_S, SHUFFLE, SHUFF...
    O << ", ";
    printOperand(MI, 8, O);
  }


  // Fragment 9 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 30) & 1) {
    // CONST_V128_I8x16, CONST_V128_I8x16_S, SHUFFLE, SHUFFLE_S
    O << ", ";
    printOperand(MI, 9, O);
    O << ", ";
    printOperand(MI, 10, O);
    O << ", ";
    printOperand(MI, 11, O);
    O << ", ";
    printOperand(MI, 12, O);
    O << ", ";
    printOperand(MI, 13, O);
    O << ", ";
    printOperand(MI, 14, O);
    O << ", ";
    printOperand(MI, 15, O);
  } else {
    // CONST_V128_I16x8
    return;
  }


  // Fragment 10 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 31) & 1) {
    // CONST_V128_I8x16_S, SHUFFLE_S
    return;
  } else {
    // CONST_V128_I8x16, SHUFFLE
    O << ", ";
    printOperand(MI, 16, O);
  }


  // Fragment 11 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 32) & 1) {
    // SHUFFLE
    O << ", ";
    printOperand(MI, 17, O);
    O << ", ";
    printOperand(MI, 18, O);
    return;
  } else {
    // CONST_V128_I8x16
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *WebAssemblyInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 14 && "Invalid register number!");


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ "%f32.0\0"
  /* 7 */ "%i32.0\0"
  /* 14 */ "%f64.0\0"
  /* 21 */ "%i64.0\0"
  /* 28 */ "%funcref.0\0"
  /* 39 */ "%externref.0\0"
  /* 52 */ "%FP32\0"
  /* 58 */ "%SP32\0"
  /* 64 */ "%FP64\0"
  /* 70 */ "%SP64\0"
  /* 76 */ "%v128\0"
  /* 82 */ "STACK\0"
  /* 88 */ "ARGUMENTS\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint8_t RegAsmOffset[] = {
    88, 82, 39, 52, 64, 28, 58, 70, 0, 14, 7, 21, 76, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool WebAssemblyInstPrinter::printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &OS) {
  return false;
}

#endif // PRINT_ALIAS_INSTR
