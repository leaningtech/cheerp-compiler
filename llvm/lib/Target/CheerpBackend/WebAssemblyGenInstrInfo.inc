/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace WebAssembly {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    INLINEASM_BR	= 2,
    CFI_INSTRUCTION	= 3,
    EH_LABEL	= 4,
    GC_LABEL	= 5,
    ANNOTATION_LABEL	= 6,
    KILL	= 7,
    EXTRACT_SUBREG	= 8,
    INSERT_SUBREG	= 9,
    IMPLICIT_DEF	= 10,
    SUBREG_TO_REG	= 11,
    COPY_TO_REGCLASS	= 12,
    DBG_VALUE	= 13,
    DBG_VALUE_LIST	= 14,
    DBG_INSTR_REF	= 15,
    DBG_PHI	= 16,
    DBG_LABEL	= 17,
    REG_SEQUENCE	= 18,
    COPY	= 19,
    BUNDLE	= 20,
    LIFETIME_START	= 21,
    LIFETIME_END	= 22,
    PSEUDO_PROBE	= 23,
    ARITH_FENCE	= 24,
    STACKMAP	= 25,
    FENTRY_CALL	= 26,
    PATCHPOINT	= 27,
    LOAD_STACK_GUARD	= 28,
    PREALLOCATED_SETUP	= 29,
    PREALLOCATED_ARG	= 30,
    STATEPOINT	= 31,
    LOCAL_ESCAPE	= 32,
    FAULTING_OP	= 33,
    PATCHABLE_OP	= 34,
    PATCHABLE_FUNCTION_ENTER	= 35,
    PATCHABLE_RET	= 36,
    PATCHABLE_FUNCTION_EXIT	= 37,
    PATCHABLE_TAIL_CALL	= 38,
    PATCHABLE_EVENT_CALL	= 39,
    PATCHABLE_TYPED_EVENT_CALL	= 40,
    ICALL_BRANCH_FUNNEL	= 41,
    G_ASSERT_SEXT	= 42,
    G_ASSERT_ZEXT	= 43,
    G_ASSERT_ALIGN	= 44,
    G_ADD	= 45,
    G_SUB	= 46,
    G_MUL	= 47,
    G_SDIV	= 48,
    G_UDIV	= 49,
    G_SREM	= 50,
    G_UREM	= 51,
    G_SDIVREM	= 52,
    G_UDIVREM	= 53,
    G_AND	= 54,
    G_OR	= 55,
    G_XOR	= 56,
    G_IMPLICIT_DEF	= 57,
    G_PHI	= 58,
    G_FRAME_INDEX	= 59,
    G_GLOBAL_VALUE	= 60,
    G_EXTRACT	= 61,
    G_UNMERGE_VALUES	= 62,
    G_INSERT	= 63,
    G_MERGE_VALUES	= 64,
    G_BUILD_VECTOR	= 65,
    G_BUILD_VECTOR_TRUNC	= 66,
    G_CONCAT_VECTORS	= 67,
    G_PTRTOINT	= 68,
    G_INTTOPTR	= 69,
    G_BITCAST	= 70,
    G_FREEZE	= 71,
    G_INTRINSIC_FPTRUNC_ROUND	= 72,
    G_INTRINSIC_TRUNC	= 73,
    G_INTRINSIC_ROUND	= 74,
    G_INTRINSIC_LRINT	= 75,
    G_INTRINSIC_ROUNDEVEN	= 76,
    G_READCYCLECOUNTER	= 77,
    G_LOAD	= 78,
    G_SEXTLOAD	= 79,
    G_ZEXTLOAD	= 80,
    G_INDEXED_LOAD	= 81,
    G_INDEXED_SEXTLOAD	= 82,
    G_INDEXED_ZEXTLOAD	= 83,
    G_STORE	= 84,
    G_INDEXED_STORE	= 85,
    G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 86,
    G_ATOMIC_CMPXCHG	= 87,
    G_ATOMICRMW_XCHG	= 88,
    G_ATOMICRMW_ADD	= 89,
    G_ATOMICRMW_SUB	= 90,
    G_ATOMICRMW_AND	= 91,
    G_ATOMICRMW_NAND	= 92,
    G_ATOMICRMW_OR	= 93,
    G_ATOMICRMW_XOR	= 94,
    G_ATOMICRMW_MAX	= 95,
    G_ATOMICRMW_MIN	= 96,
    G_ATOMICRMW_UMAX	= 97,
    G_ATOMICRMW_UMIN	= 98,
    G_ATOMICRMW_FADD	= 99,
    G_ATOMICRMW_FSUB	= 100,
    G_ATOMICRMW_FMAX	= 101,
    G_ATOMICRMW_FMIN	= 102,
    G_FENCE	= 103,
    G_BRCOND	= 104,
    G_BRINDIRECT	= 105,
    G_INTRINSIC	= 106,
    G_INTRINSIC_W_SIDE_EFFECTS	= 107,
    G_ANYEXT	= 108,
    G_TRUNC	= 109,
    G_CONSTANT	= 110,
    G_FCONSTANT	= 111,
    G_VASTART	= 112,
    G_VAARG	= 113,
    G_SEXT	= 114,
    G_SEXT_INREG	= 115,
    G_ZEXT	= 116,
    G_SHL	= 117,
    G_LSHR	= 118,
    G_ASHR	= 119,
    G_FSHL	= 120,
    G_FSHR	= 121,
    G_ROTR	= 122,
    G_ROTL	= 123,
    G_ICMP	= 124,
    G_FCMP	= 125,
    G_SELECT	= 126,
    G_UADDO	= 127,
    G_UADDE	= 128,
    G_USUBO	= 129,
    G_USUBE	= 130,
    G_SADDO	= 131,
    G_SADDE	= 132,
    G_SSUBO	= 133,
    G_SSUBE	= 134,
    G_UMULO	= 135,
    G_SMULO	= 136,
    G_UMULH	= 137,
    G_SMULH	= 138,
    G_UADDSAT	= 139,
    G_SADDSAT	= 140,
    G_USUBSAT	= 141,
    G_SSUBSAT	= 142,
    G_USHLSAT	= 143,
    G_SSHLSAT	= 144,
    G_SMULFIX	= 145,
    G_UMULFIX	= 146,
    G_SMULFIXSAT	= 147,
    G_UMULFIXSAT	= 148,
    G_SDIVFIX	= 149,
    G_UDIVFIX	= 150,
    G_SDIVFIXSAT	= 151,
    G_UDIVFIXSAT	= 152,
    G_FADD	= 153,
    G_FSUB	= 154,
    G_FMUL	= 155,
    G_FMA	= 156,
    G_FMAD	= 157,
    G_FDIV	= 158,
    G_FREM	= 159,
    G_FPOW	= 160,
    G_FPOWI	= 161,
    G_FEXP	= 162,
    G_FEXP2	= 163,
    G_FLOG	= 164,
    G_FLOG2	= 165,
    G_FLOG10	= 166,
    G_FNEG	= 167,
    G_FPEXT	= 168,
    G_FPTRUNC	= 169,
    G_FPTOSI	= 170,
    G_FPTOUI	= 171,
    G_SITOFP	= 172,
    G_UITOFP	= 173,
    G_FABS	= 174,
    G_FCOPYSIGN	= 175,
    G_IS_FPCLASS	= 176,
    G_FCANONICALIZE	= 177,
    G_FMINNUM	= 178,
    G_FMAXNUM	= 179,
    G_FMINNUM_IEEE	= 180,
    G_FMAXNUM_IEEE	= 181,
    G_FMINIMUM	= 182,
    G_FMAXIMUM	= 183,
    G_PTR_ADD	= 184,
    G_PTRMASK	= 185,
    G_SMIN	= 186,
    G_SMAX	= 187,
    G_UMIN	= 188,
    G_UMAX	= 189,
    G_ABS	= 190,
    G_LROUND	= 191,
    G_LLROUND	= 192,
    G_BR	= 193,
    G_BRJT	= 194,
    G_INSERT_VECTOR_ELT	= 195,
    G_EXTRACT_VECTOR_ELT	= 196,
    G_SHUFFLE_VECTOR	= 197,
    G_CTTZ	= 198,
    G_CTTZ_ZERO_UNDEF	= 199,
    G_CTLZ	= 200,
    G_CTLZ_ZERO_UNDEF	= 201,
    G_CTPOP	= 202,
    G_BSWAP	= 203,
    G_BITREVERSE	= 204,
    G_FCEIL	= 205,
    G_FCOS	= 206,
    G_FSIN	= 207,
    G_FSQRT	= 208,
    G_FFLOOR	= 209,
    G_FRINT	= 210,
    G_FNEARBYINT	= 211,
    G_ADDRSPACE_CAST	= 212,
    G_BLOCK_ADDR	= 213,
    G_JUMP_TABLE	= 214,
    G_DYN_STACKALLOC	= 215,
    G_STRICT_FADD	= 216,
    G_STRICT_FSUB	= 217,
    G_STRICT_FMUL	= 218,
    G_STRICT_FDIV	= 219,
    G_STRICT_FREM	= 220,
    G_STRICT_FMA	= 221,
    G_STRICT_FSQRT	= 222,
    G_READ_REGISTER	= 223,
    G_WRITE_REGISTER	= 224,
    G_MEMCPY	= 225,
    G_MEMCPY_INLINE	= 226,
    G_MEMMOVE	= 227,
    G_MEMSET	= 228,
    G_BZERO	= 229,
    G_VECREDUCE_SEQ_FADD	= 230,
    G_VECREDUCE_SEQ_FMUL	= 231,
    G_VECREDUCE_FADD	= 232,
    G_VECREDUCE_FMUL	= 233,
    G_VECREDUCE_FMAX	= 234,
    G_VECREDUCE_FMIN	= 235,
    G_VECREDUCE_ADD	= 236,
    G_VECREDUCE_MUL	= 237,
    G_VECREDUCE_AND	= 238,
    G_VECREDUCE_OR	= 239,
    G_VECREDUCE_XOR	= 240,
    G_VECREDUCE_SMAX	= 241,
    G_VECREDUCE_SMIN	= 242,
    G_VECREDUCE_UMAX	= 243,
    G_VECREDUCE_UMIN	= 244,
    G_SBFX	= 245,
    G_UBFX	= 246,
    CALL_PARAMS	= 247,
    CALL_PARAMS_S	= 248,
    CALL_RESULTS	= 249,
    CALL_RESULTS_S	= 250,
    CATCHRET	= 251,
    CATCHRET_S	= 252,
    CLEANUPRET	= 253,
    CLEANUPRET_S	= 254,
    COMPILER_FENCE	= 255,
    COMPILER_FENCE_S	= 256,
    RET_CALL_RESULTS	= 257,
    RET_CALL_RESULTS_S	= 258,
    ABS_F32	= 259,
    ABS_F32_S	= 260,
    ABS_F32x4	= 261,
    ABS_F32x4_S	= 262,
    ABS_F64	= 263,
    ABS_F64_S	= 264,
    ABS_F64x2	= 265,
    ABS_F64x2_S	= 266,
    ABS_I16x8	= 267,
    ABS_I16x8_S	= 268,
    ABS_I32x4	= 269,
    ABS_I32x4_S	= 270,
    ABS_I64x2	= 271,
    ABS_I64x2_S	= 272,
    ABS_I8x16	= 273,
    ABS_I8x16_S	= 274,
    ADD_F32	= 275,
    ADD_F32_S	= 276,
    ADD_F32x4	= 277,
    ADD_F32x4_S	= 278,
    ADD_F64	= 279,
    ADD_F64_S	= 280,
    ADD_F64x2	= 281,
    ADD_F64x2_S	= 282,
    ADD_I16x8	= 283,
    ADD_I16x8_S	= 284,
    ADD_I32	= 285,
    ADD_I32_S	= 286,
    ADD_I32x4	= 287,
    ADD_I32x4_S	= 288,
    ADD_I64	= 289,
    ADD_I64_S	= 290,
    ADD_I64x2	= 291,
    ADD_I64x2_S	= 292,
    ADD_I8x16	= 293,
    ADD_I8x16_S	= 294,
    ADD_SAT_S_I16x8	= 295,
    ADD_SAT_S_I16x8_S	= 296,
    ADD_SAT_S_I8x16	= 297,
    ADD_SAT_S_I8x16_S	= 298,
    ADD_SAT_U_I16x8	= 299,
    ADD_SAT_U_I16x8_S	= 300,
    ADD_SAT_U_I8x16	= 301,
    ADD_SAT_U_I8x16_S	= 302,
    ADJCALLSTACKDOWN	= 303,
    ADJCALLSTACKDOWN_S	= 304,
    ADJCALLSTACKUP	= 305,
    ADJCALLSTACKUP_S	= 306,
    ALLTRUE_I16x8	= 307,
    ALLTRUE_I16x8_S	= 308,
    ALLTRUE_I32x4	= 309,
    ALLTRUE_I32x4_S	= 310,
    ALLTRUE_I64x2	= 311,
    ALLTRUE_I64x2_S	= 312,
    ALLTRUE_I8x16	= 313,
    ALLTRUE_I8x16_S	= 314,
    AND	= 315,
    ANDNOT	= 316,
    ANDNOT_S	= 317,
    AND_I32	= 318,
    AND_I32_S	= 319,
    AND_I64	= 320,
    AND_I64_S	= 321,
    AND_S	= 322,
    ANYTRUE	= 323,
    ANYTRUE_S	= 324,
    ARGUMENT_externref	= 325,
    ARGUMENT_externref_S	= 326,
    ARGUMENT_f32	= 327,
    ARGUMENT_f32_S	= 328,
    ARGUMENT_f64	= 329,
    ARGUMENT_f64_S	= 330,
    ARGUMENT_funcref	= 331,
    ARGUMENT_funcref_S	= 332,
    ARGUMENT_i32	= 333,
    ARGUMENT_i32_S	= 334,
    ARGUMENT_i64	= 335,
    ARGUMENT_i64_S	= 336,
    ARGUMENT_v16i8	= 337,
    ARGUMENT_v16i8_S	= 338,
    ARGUMENT_v2f64	= 339,
    ARGUMENT_v2f64_S	= 340,
    ARGUMENT_v2i64	= 341,
    ARGUMENT_v2i64_S	= 342,
    ARGUMENT_v4f32	= 343,
    ARGUMENT_v4f32_S	= 344,
    ARGUMENT_v4i32	= 345,
    ARGUMENT_v4i32_S	= 346,
    ARGUMENT_v8i16	= 347,
    ARGUMENT_v8i16_S	= 348,
    ATOMIC_FENCE	= 349,
    ATOMIC_FENCE_S	= 350,
    ATOMIC_LOAD16_U_I32_A32	= 351,
    ATOMIC_LOAD16_U_I32_A32_S	= 352,
    ATOMIC_LOAD16_U_I32_A64	= 353,
    ATOMIC_LOAD16_U_I32_A64_S	= 354,
    ATOMIC_LOAD16_U_I64_A32	= 355,
    ATOMIC_LOAD16_U_I64_A32_S	= 356,
    ATOMIC_LOAD16_U_I64_A64	= 357,
    ATOMIC_LOAD16_U_I64_A64_S	= 358,
    ATOMIC_LOAD32_U_I64_A32	= 359,
    ATOMIC_LOAD32_U_I64_A32_S	= 360,
    ATOMIC_LOAD32_U_I64_A64	= 361,
    ATOMIC_LOAD32_U_I64_A64_S	= 362,
    ATOMIC_LOAD8_U_I32_A32	= 363,
    ATOMIC_LOAD8_U_I32_A32_S	= 364,
    ATOMIC_LOAD8_U_I32_A64	= 365,
    ATOMIC_LOAD8_U_I32_A64_S	= 366,
    ATOMIC_LOAD8_U_I64_A32	= 367,
    ATOMIC_LOAD8_U_I64_A32_S	= 368,
    ATOMIC_LOAD8_U_I64_A64	= 369,
    ATOMIC_LOAD8_U_I64_A64_S	= 370,
    ATOMIC_LOAD_I32_A32	= 371,
    ATOMIC_LOAD_I32_A32_S	= 372,
    ATOMIC_LOAD_I32_A64	= 373,
    ATOMIC_LOAD_I32_A64_S	= 374,
    ATOMIC_LOAD_I64_A32	= 375,
    ATOMIC_LOAD_I64_A32_S	= 376,
    ATOMIC_LOAD_I64_A64	= 377,
    ATOMIC_LOAD_I64_A64_S	= 378,
    ATOMIC_RMW16_U_ADD_I32_A32	= 379,
    ATOMIC_RMW16_U_ADD_I32_A32_S	= 380,
    ATOMIC_RMW16_U_ADD_I32_A64	= 381,
    ATOMIC_RMW16_U_ADD_I32_A64_S	= 382,
    ATOMIC_RMW16_U_ADD_I64_A32	= 383,
    ATOMIC_RMW16_U_ADD_I64_A32_S	= 384,
    ATOMIC_RMW16_U_ADD_I64_A64	= 385,
    ATOMIC_RMW16_U_ADD_I64_A64_S	= 386,
    ATOMIC_RMW16_U_AND_I32_A32	= 387,
    ATOMIC_RMW16_U_AND_I32_A32_S	= 388,
    ATOMIC_RMW16_U_AND_I32_A64	= 389,
    ATOMIC_RMW16_U_AND_I32_A64_S	= 390,
    ATOMIC_RMW16_U_AND_I64_A32	= 391,
    ATOMIC_RMW16_U_AND_I64_A32_S	= 392,
    ATOMIC_RMW16_U_AND_I64_A64	= 393,
    ATOMIC_RMW16_U_AND_I64_A64_S	= 394,
    ATOMIC_RMW16_U_CMPXCHG_I32_A32	= 395,
    ATOMIC_RMW16_U_CMPXCHG_I32_A32_S	= 396,
    ATOMIC_RMW16_U_CMPXCHG_I32_A64	= 397,
    ATOMIC_RMW16_U_CMPXCHG_I32_A64_S	= 398,
    ATOMIC_RMW16_U_CMPXCHG_I64_A32	= 399,
    ATOMIC_RMW16_U_CMPXCHG_I64_A32_S	= 400,
    ATOMIC_RMW16_U_CMPXCHG_I64_A64	= 401,
    ATOMIC_RMW16_U_CMPXCHG_I64_A64_S	= 402,
    ATOMIC_RMW16_U_OR_I32_A32	= 403,
    ATOMIC_RMW16_U_OR_I32_A32_S	= 404,
    ATOMIC_RMW16_U_OR_I32_A64	= 405,
    ATOMIC_RMW16_U_OR_I32_A64_S	= 406,
    ATOMIC_RMW16_U_OR_I64_A32	= 407,
    ATOMIC_RMW16_U_OR_I64_A32_S	= 408,
    ATOMIC_RMW16_U_OR_I64_A64	= 409,
    ATOMIC_RMW16_U_OR_I64_A64_S	= 410,
    ATOMIC_RMW16_U_SUB_I32_A32	= 411,
    ATOMIC_RMW16_U_SUB_I32_A32_S	= 412,
    ATOMIC_RMW16_U_SUB_I32_A64	= 413,
    ATOMIC_RMW16_U_SUB_I32_A64_S	= 414,
    ATOMIC_RMW16_U_SUB_I64_A32	= 415,
    ATOMIC_RMW16_U_SUB_I64_A32_S	= 416,
    ATOMIC_RMW16_U_SUB_I64_A64	= 417,
    ATOMIC_RMW16_U_SUB_I64_A64_S	= 418,
    ATOMIC_RMW16_U_XCHG_I32_A32	= 419,
    ATOMIC_RMW16_U_XCHG_I32_A32_S	= 420,
    ATOMIC_RMW16_U_XCHG_I32_A64	= 421,
    ATOMIC_RMW16_U_XCHG_I32_A64_S	= 422,
    ATOMIC_RMW16_U_XCHG_I64_A32	= 423,
    ATOMIC_RMW16_U_XCHG_I64_A32_S	= 424,
    ATOMIC_RMW16_U_XCHG_I64_A64	= 425,
    ATOMIC_RMW16_U_XCHG_I64_A64_S	= 426,
    ATOMIC_RMW16_U_XOR_I32_A32	= 427,
    ATOMIC_RMW16_U_XOR_I32_A32_S	= 428,
    ATOMIC_RMW16_U_XOR_I32_A64	= 429,
    ATOMIC_RMW16_U_XOR_I32_A64_S	= 430,
    ATOMIC_RMW16_U_XOR_I64_A32	= 431,
    ATOMIC_RMW16_U_XOR_I64_A32_S	= 432,
    ATOMIC_RMW16_U_XOR_I64_A64	= 433,
    ATOMIC_RMW16_U_XOR_I64_A64_S	= 434,
    ATOMIC_RMW32_U_ADD_I64_A32	= 435,
    ATOMIC_RMW32_U_ADD_I64_A32_S	= 436,
    ATOMIC_RMW32_U_ADD_I64_A64	= 437,
    ATOMIC_RMW32_U_ADD_I64_A64_S	= 438,
    ATOMIC_RMW32_U_AND_I64_A32	= 439,
    ATOMIC_RMW32_U_AND_I64_A32_S	= 440,
    ATOMIC_RMW32_U_AND_I64_A64	= 441,
    ATOMIC_RMW32_U_AND_I64_A64_S	= 442,
    ATOMIC_RMW32_U_CMPXCHG_I64_A32	= 443,
    ATOMIC_RMW32_U_CMPXCHG_I64_A32_S	= 444,
    ATOMIC_RMW32_U_CMPXCHG_I64_A64	= 445,
    ATOMIC_RMW32_U_CMPXCHG_I64_A64_S	= 446,
    ATOMIC_RMW32_U_OR_I64_A32	= 447,
    ATOMIC_RMW32_U_OR_I64_A32_S	= 448,
    ATOMIC_RMW32_U_OR_I64_A64	= 449,
    ATOMIC_RMW32_U_OR_I64_A64_S	= 450,
    ATOMIC_RMW32_U_SUB_I64_A32	= 451,
    ATOMIC_RMW32_U_SUB_I64_A32_S	= 452,
    ATOMIC_RMW32_U_SUB_I64_A64	= 453,
    ATOMIC_RMW32_U_SUB_I64_A64_S	= 454,
    ATOMIC_RMW32_U_XCHG_I64_A32	= 455,
    ATOMIC_RMW32_U_XCHG_I64_A32_S	= 456,
    ATOMIC_RMW32_U_XCHG_I64_A64	= 457,
    ATOMIC_RMW32_U_XCHG_I64_A64_S	= 458,
    ATOMIC_RMW32_U_XOR_I64_A32	= 459,
    ATOMIC_RMW32_U_XOR_I64_A32_S	= 460,
    ATOMIC_RMW32_U_XOR_I64_A64	= 461,
    ATOMIC_RMW32_U_XOR_I64_A64_S	= 462,
    ATOMIC_RMW8_U_ADD_I32_A32	= 463,
    ATOMIC_RMW8_U_ADD_I32_A32_S	= 464,
    ATOMIC_RMW8_U_ADD_I32_A64	= 465,
    ATOMIC_RMW8_U_ADD_I32_A64_S	= 466,
    ATOMIC_RMW8_U_ADD_I64_A32	= 467,
    ATOMIC_RMW8_U_ADD_I64_A32_S	= 468,
    ATOMIC_RMW8_U_ADD_I64_A64	= 469,
    ATOMIC_RMW8_U_ADD_I64_A64_S	= 470,
    ATOMIC_RMW8_U_AND_I32_A32	= 471,
    ATOMIC_RMW8_U_AND_I32_A32_S	= 472,
    ATOMIC_RMW8_U_AND_I32_A64	= 473,
    ATOMIC_RMW8_U_AND_I32_A64_S	= 474,
    ATOMIC_RMW8_U_AND_I64_A32	= 475,
    ATOMIC_RMW8_U_AND_I64_A32_S	= 476,
    ATOMIC_RMW8_U_AND_I64_A64	= 477,
    ATOMIC_RMW8_U_AND_I64_A64_S	= 478,
    ATOMIC_RMW8_U_CMPXCHG_I32_A32	= 479,
    ATOMIC_RMW8_U_CMPXCHG_I32_A32_S	= 480,
    ATOMIC_RMW8_U_CMPXCHG_I32_A64	= 481,
    ATOMIC_RMW8_U_CMPXCHG_I32_A64_S	= 482,
    ATOMIC_RMW8_U_CMPXCHG_I64_A32	= 483,
    ATOMIC_RMW8_U_CMPXCHG_I64_A32_S	= 484,
    ATOMIC_RMW8_U_CMPXCHG_I64_A64	= 485,
    ATOMIC_RMW8_U_CMPXCHG_I64_A64_S	= 486,
    ATOMIC_RMW8_U_OR_I32_A32	= 487,
    ATOMIC_RMW8_U_OR_I32_A32_S	= 488,
    ATOMIC_RMW8_U_OR_I32_A64	= 489,
    ATOMIC_RMW8_U_OR_I32_A64_S	= 490,
    ATOMIC_RMW8_U_OR_I64_A32	= 491,
    ATOMIC_RMW8_U_OR_I64_A32_S	= 492,
    ATOMIC_RMW8_U_OR_I64_A64	= 493,
    ATOMIC_RMW8_U_OR_I64_A64_S	= 494,
    ATOMIC_RMW8_U_SUB_I32_A32	= 495,
    ATOMIC_RMW8_U_SUB_I32_A32_S	= 496,
    ATOMIC_RMW8_U_SUB_I32_A64	= 497,
    ATOMIC_RMW8_U_SUB_I32_A64_S	= 498,
    ATOMIC_RMW8_U_SUB_I64_A32	= 499,
    ATOMIC_RMW8_U_SUB_I64_A32_S	= 500,
    ATOMIC_RMW8_U_SUB_I64_A64	= 501,
    ATOMIC_RMW8_U_SUB_I64_A64_S	= 502,
    ATOMIC_RMW8_U_XCHG_I32_A32	= 503,
    ATOMIC_RMW8_U_XCHG_I32_A32_S	= 504,
    ATOMIC_RMW8_U_XCHG_I32_A64	= 505,
    ATOMIC_RMW8_U_XCHG_I32_A64_S	= 506,
    ATOMIC_RMW8_U_XCHG_I64_A32	= 507,
    ATOMIC_RMW8_U_XCHG_I64_A32_S	= 508,
    ATOMIC_RMW8_U_XCHG_I64_A64	= 509,
    ATOMIC_RMW8_U_XCHG_I64_A64_S	= 510,
    ATOMIC_RMW8_U_XOR_I32_A32	= 511,
    ATOMIC_RMW8_U_XOR_I32_A32_S	= 512,
    ATOMIC_RMW8_U_XOR_I32_A64	= 513,
    ATOMIC_RMW8_U_XOR_I32_A64_S	= 514,
    ATOMIC_RMW8_U_XOR_I64_A32	= 515,
    ATOMIC_RMW8_U_XOR_I64_A32_S	= 516,
    ATOMIC_RMW8_U_XOR_I64_A64	= 517,
    ATOMIC_RMW8_U_XOR_I64_A64_S	= 518,
    ATOMIC_RMW_ADD_I32_A32	= 519,
    ATOMIC_RMW_ADD_I32_A32_S	= 520,
    ATOMIC_RMW_ADD_I32_A64	= 521,
    ATOMIC_RMW_ADD_I32_A64_S	= 522,
    ATOMIC_RMW_ADD_I64_A32	= 523,
    ATOMIC_RMW_ADD_I64_A32_S	= 524,
    ATOMIC_RMW_ADD_I64_A64	= 525,
    ATOMIC_RMW_ADD_I64_A64_S	= 526,
    ATOMIC_RMW_AND_I32_A32	= 527,
    ATOMIC_RMW_AND_I32_A32_S	= 528,
    ATOMIC_RMW_AND_I32_A64	= 529,
    ATOMIC_RMW_AND_I32_A64_S	= 530,
    ATOMIC_RMW_AND_I64_A32	= 531,
    ATOMIC_RMW_AND_I64_A32_S	= 532,
    ATOMIC_RMW_AND_I64_A64	= 533,
    ATOMIC_RMW_AND_I64_A64_S	= 534,
    ATOMIC_RMW_CMPXCHG_I32_A32	= 535,
    ATOMIC_RMW_CMPXCHG_I32_A32_S	= 536,
    ATOMIC_RMW_CMPXCHG_I32_A64	= 537,
    ATOMIC_RMW_CMPXCHG_I32_A64_S	= 538,
    ATOMIC_RMW_CMPXCHG_I64_A32	= 539,
    ATOMIC_RMW_CMPXCHG_I64_A32_S	= 540,
    ATOMIC_RMW_CMPXCHG_I64_A64	= 541,
    ATOMIC_RMW_CMPXCHG_I64_A64_S	= 542,
    ATOMIC_RMW_OR_I32_A32	= 543,
    ATOMIC_RMW_OR_I32_A32_S	= 544,
    ATOMIC_RMW_OR_I32_A64	= 545,
    ATOMIC_RMW_OR_I32_A64_S	= 546,
    ATOMIC_RMW_OR_I64_A32	= 547,
    ATOMIC_RMW_OR_I64_A32_S	= 548,
    ATOMIC_RMW_OR_I64_A64	= 549,
    ATOMIC_RMW_OR_I64_A64_S	= 550,
    ATOMIC_RMW_SUB_I32_A32	= 551,
    ATOMIC_RMW_SUB_I32_A32_S	= 552,
    ATOMIC_RMW_SUB_I32_A64	= 553,
    ATOMIC_RMW_SUB_I32_A64_S	= 554,
    ATOMIC_RMW_SUB_I64_A32	= 555,
    ATOMIC_RMW_SUB_I64_A32_S	= 556,
    ATOMIC_RMW_SUB_I64_A64	= 557,
    ATOMIC_RMW_SUB_I64_A64_S	= 558,
    ATOMIC_RMW_XCHG_I32_A32	= 559,
    ATOMIC_RMW_XCHG_I32_A32_S	= 560,
    ATOMIC_RMW_XCHG_I32_A64	= 561,
    ATOMIC_RMW_XCHG_I32_A64_S	= 562,
    ATOMIC_RMW_XCHG_I64_A32	= 563,
    ATOMIC_RMW_XCHG_I64_A32_S	= 564,
    ATOMIC_RMW_XCHG_I64_A64	= 565,
    ATOMIC_RMW_XCHG_I64_A64_S	= 566,
    ATOMIC_RMW_XOR_I32_A32	= 567,
    ATOMIC_RMW_XOR_I32_A32_S	= 568,
    ATOMIC_RMW_XOR_I32_A64	= 569,
    ATOMIC_RMW_XOR_I32_A64_S	= 570,
    ATOMIC_RMW_XOR_I64_A32	= 571,
    ATOMIC_RMW_XOR_I64_A32_S	= 572,
    ATOMIC_RMW_XOR_I64_A64	= 573,
    ATOMIC_RMW_XOR_I64_A64_S	= 574,
    ATOMIC_STORE16_I32_A32	= 575,
    ATOMIC_STORE16_I32_A32_S	= 576,
    ATOMIC_STORE16_I32_A64	= 577,
    ATOMIC_STORE16_I32_A64_S	= 578,
    ATOMIC_STORE16_I64_A32	= 579,
    ATOMIC_STORE16_I64_A32_S	= 580,
    ATOMIC_STORE16_I64_A64	= 581,
    ATOMIC_STORE16_I64_A64_S	= 582,
    ATOMIC_STORE32_I64_A32	= 583,
    ATOMIC_STORE32_I64_A32_S	= 584,
    ATOMIC_STORE32_I64_A64	= 585,
    ATOMIC_STORE32_I64_A64_S	= 586,
    ATOMIC_STORE8_I32_A32	= 587,
    ATOMIC_STORE8_I32_A32_S	= 588,
    ATOMIC_STORE8_I32_A64	= 589,
    ATOMIC_STORE8_I32_A64_S	= 590,
    ATOMIC_STORE8_I64_A32	= 591,
    ATOMIC_STORE8_I64_A32_S	= 592,
    ATOMIC_STORE8_I64_A64	= 593,
    ATOMIC_STORE8_I64_A64_S	= 594,
    ATOMIC_STORE_I32_A32	= 595,
    ATOMIC_STORE_I32_A32_S	= 596,
    ATOMIC_STORE_I32_A64	= 597,
    ATOMIC_STORE_I32_A64_S	= 598,
    ATOMIC_STORE_I64_A32	= 599,
    ATOMIC_STORE_I64_A32_S	= 600,
    ATOMIC_STORE_I64_A64	= 601,
    ATOMIC_STORE_I64_A64_S	= 602,
    AVGR_U_I16x8	= 603,
    AVGR_U_I16x8_S	= 604,
    AVGR_U_I8x16	= 605,
    AVGR_U_I8x16_S	= 606,
    BITMASK_I16x8	= 607,
    BITMASK_I16x8_S	= 608,
    BITMASK_I32x4	= 609,
    BITMASK_I32x4_S	= 610,
    BITMASK_I64x2	= 611,
    BITMASK_I64x2_S	= 612,
    BITMASK_I8x16	= 613,
    BITMASK_I8x16_S	= 614,
    BITSELECT	= 615,
    BITSELECT_S	= 616,
    BLOCK	= 617,
    BLOCK_S	= 618,
    BR	= 619,
    BR_IF	= 620,
    BR_IF_S	= 621,
    BR_S	= 622,
    BR_TABLE_I32	= 623,
    BR_TABLE_I32_S	= 624,
    BR_TABLE_I64	= 625,
    BR_TABLE_I64_S	= 626,
    BR_UNLESS	= 627,
    BR_UNLESS_S	= 628,
    CALL	= 629,
    CALL_INDIRECT	= 630,
    CALL_INDIRECT_S	= 631,
    CALL_S	= 632,
    CATCH	= 633,
    CATCH_ALL	= 634,
    CATCH_ALL_S	= 635,
    CATCH_S	= 636,
    CEIL_F32	= 637,
    CEIL_F32_S	= 638,
    CEIL_F32x4	= 639,
    CEIL_F32x4_S	= 640,
    CEIL_F64	= 641,
    CEIL_F64_S	= 642,
    CEIL_F64x2	= 643,
    CEIL_F64x2_S	= 644,
    CLZ_I32	= 645,
    CLZ_I32_S	= 646,
    CLZ_I64	= 647,
    CLZ_I64_S	= 648,
    CONST_F32	= 649,
    CONST_F32_S	= 650,
    CONST_F64	= 651,
    CONST_F64_S	= 652,
    CONST_I32	= 653,
    CONST_I32_S	= 654,
    CONST_I64	= 655,
    CONST_I64_S	= 656,
    CONST_V128_F32x4	= 657,
    CONST_V128_F32x4_S	= 658,
    CONST_V128_F64x2	= 659,
    CONST_V128_F64x2_S	= 660,
    CONST_V128_I16x8	= 661,
    CONST_V128_I16x8_S	= 662,
    CONST_V128_I32x4	= 663,
    CONST_V128_I32x4_S	= 664,
    CONST_V128_I64x2	= 665,
    CONST_V128_I64x2_S	= 666,
    CONST_V128_I8x16	= 667,
    CONST_V128_I8x16_S	= 668,
    COPYSIGN_F32	= 669,
    COPYSIGN_F32_S	= 670,
    COPYSIGN_F64	= 671,
    COPYSIGN_F64_S	= 672,
    COPY_EXTERNREF	= 673,
    COPY_EXTERNREF_S	= 674,
    COPY_F32	= 675,
    COPY_F32_S	= 676,
    COPY_F64	= 677,
    COPY_F64_S	= 678,
    COPY_FUNCREF	= 679,
    COPY_FUNCREF_S	= 680,
    COPY_I32	= 681,
    COPY_I32_S	= 682,
    COPY_I64	= 683,
    COPY_I64_S	= 684,
    COPY_V128	= 685,
    COPY_V128_S	= 686,
    CTZ_I32	= 687,
    CTZ_I32_S	= 688,
    CTZ_I64	= 689,
    CTZ_I64_S	= 690,
    DEBUG_UNREACHABLE	= 691,
    DEBUG_UNREACHABLE_S	= 692,
    DELEGATE	= 693,
    DELEGATE_S	= 694,
    DIV_F32	= 695,
    DIV_F32_S	= 696,
    DIV_F32x4	= 697,
    DIV_F32x4_S	= 698,
    DIV_F64	= 699,
    DIV_F64_S	= 700,
    DIV_F64x2	= 701,
    DIV_F64x2_S	= 702,
    DIV_S_I32	= 703,
    DIV_S_I32_S	= 704,
    DIV_S_I64	= 705,
    DIV_S_I64_S	= 706,
    DIV_U_I32	= 707,
    DIV_U_I32_S	= 708,
    DIV_U_I64	= 709,
    DIV_U_I64_S	= 710,
    DOT	= 711,
    DOT_S	= 712,
    DROP_EXTERNREF	= 713,
    DROP_EXTERNREF_S	= 714,
    DROP_F32	= 715,
    DROP_F32_S	= 716,
    DROP_F64	= 717,
    DROP_F64_S	= 718,
    DROP_FUNCREF	= 719,
    DROP_FUNCREF_S	= 720,
    DROP_I32	= 721,
    DROP_I32_S	= 722,
    DROP_I64	= 723,
    DROP_I64_S	= 724,
    DROP_V128	= 725,
    DROP_V128_S	= 726,
    ELSE	= 727,
    ELSE_S	= 728,
    END	= 729,
    END_BLOCK	= 730,
    END_BLOCK_S	= 731,
    END_FUNCTION	= 732,
    END_FUNCTION_S	= 733,
    END_IF	= 734,
    END_IF_S	= 735,
    END_LOOP	= 736,
    END_LOOP_S	= 737,
    END_S	= 738,
    END_TRY	= 739,
    END_TRY_S	= 740,
    EQZ_I32	= 741,
    EQZ_I32_S	= 742,
    EQZ_I64	= 743,
    EQZ_I64_S	= 744,
    EQ_F32	= 745,
    EQ_F32_S	= 746,
    EQ_F32x4	= 747,
    EQ_F32x4_S	= 748,
    EQ_F64	= 749,
    EQ_F64_S	= 750,
    EQ_F64x2	= 751,
    EQ_F64x2_S	= 752,
    EQ_I16x8	= 753,
    EQ_I16x8_S	= 754,
    EQ_I32	= 755,
    EQ_I32_S	= 756,
    EQ_I32x4	= 757,
    EQ_I32x4_S	= 758,
    EQ_I64	= 759,
    EQ_I64_S	= 760,
    EQ_I64x2	= 761,
    EQ_I64x2_S	= 762,
    EQ_I8x16	= 763,
    EQ_I8x16_S	= 764,
    EXTMUL_HIGH_S_I16x8	= 765,
    EXTMUL_HIGH_S_I16x8_S	= 766,
    EXTMUL_HIGH_S_I32x4	= 767,
    EXTMUL_HIGH_S_I32x4_S	= 768,
    EXTMUL_HIGH_S_I64x2	= 769,
    EXTMUL_HIGH_S_I64x2_S	= 770,
    EXTMUL_HIGH_U_I16x8	= 771,
    EXTMUL_HIGH_U_I16x8_S	= 772,
    EXTMUL_HIGH_U_I32x4	= 773,
    EXTMUL_HIGH_U_I32x4_S	= 774,
    EXTMUL_HIGH_U_I64x2	= 775,
    EXTMUL_HIGH_U_I64x2_S	= 776,
    EXTMUL_LOW_S_I16x8	= 777,
    EXTMUL_LOW_S_I16x8_S	= 778,
    EXTMUL_LOW_S_I32x4	= 779,
    EXTMUL_LOW_S_I32x4_S	= 780,
    EXTMUL_LOW_S_I64x2	= 781,
    EXTMUL_LOW_S_I64x2_S	= 782,
    EXTMUL_LOW_U_I16x8	= 783,
    EXTMUL_LOW_U_I16x8_S	= 784,
    EXTMUL_LOW_U_I32x4	= 785,
    EXTMUL_LOW_U_I32x4_S	= 786,
    EXTMUL_LOW_U_I64x2	= 787,
    EXTMUL_LOW_U_I64x2_S	= 788,
    EXTRACT_LANE_F32x4	= 789,
    EXTRACT_LANE_F32x4_S	= 790,
    EXTRACT_LANE_F64x2	= 791,
    EXTRACT_LANE_F64x2_S	= 792,
    EXTRACT_LANE_I16x8_s	= 793,
    EXTRACT_LANE_I16x8_s_S	= 794,
    EXTRACT_LANE_I16x8_u	= 795,
    EXTRACT_LANE_I16x8_u_S	= 796,
    EXTRACT_LANE_I32x4	= 797,
    EXTRACT_LANE_I32x4_S	= 798,
    EXTRACT_LANE_I64x2	= 799,
    EXTRACT_LANE_I64x2_S	= 800,
    EXTRACT_LANE_I8x16_s	= 801,
    EXTRACT_LANE_I8x16_s_S	= 802,
    EXTRACT_LANE_I8x16_u	= 803,
    EXTRACT_LANE_I8x16_u_S	= 804,
    F32_CONVERT_S_I32	= 805,
    F32_CONVERT_S_I32_S	= 806,
    F32_CONVERT_S_I64	= 807,
    F32_CONVERT_S_I64_S	= 808,
    F32_CONVERT_U_I32	= 809,
    F32_CONVERT_U_I32_S	= 810,
    F32_CONVERT_U_I64	= 811,
    F32_CONVERT_U_I64_S	= 812,
    F32_DEMOTE_F64	= 813,
    F32_DEMOTE_F64_S	= 814,
    F32_REINTERPRET_I32	= 815,
    F32_REINTERPRET_I32_S	= 816,
    F64_CONVERT_S_I32	= 817,
    F64_CONVERT_S_I32_S	= 818,
    F64_CONVERT_S_I64	= 819,
    F64_CONVERT_S_I64_S	= 820,
    F64_CONVERT_U_I32	= 821,
    F64_CONVERT_U_I32_S	= 822,
    F64_CONVERT_U_I64	= 823,
    F64_CONVERT_U_I64_S	= 824,
    F64_PROMOTE_F32	= 825,
    F64_PROMOTE_F32_S	= 826,
    F64_REINTERPRET_I64	= 827,
    F64_REINTERPRET_I64_S	= 828,
    FALLTHROUGH_RETURN	= 829,
    FALLTHROUGH_RETURN_S	= 830,
    FLOOR_F32	= 831,
    FLOOR_F32_S	= 832,
    FLOOR_F32x4	= 833,
    FLOOR_F32x4_S	= 834,
    FLOOR_F64	= 835,
    FLOOR_F64_S	= 836,
    FLOOR_F64x2	= 837,
    FLOOR_F64x2_S	= 838,
    FP_TO_SINT_I32_F32	= 839,
    FP_TO_SINT_I32_F32_S	= 840,
    FP_TO_SINT_I32_F64	= 841,
    FP_TO_SINT_I32_F64_S	= 842,
    FP_TO_SINT_I64_F32	= 843,
    FP_TO_SINT_I64_F32_S	= 844,
    FP_TO_SINT_I64_F64	= 845,
    FP_TO_SINT_I64_F64_S	= 846,
    FP_TO_UINT_I32_F32	= 847,
    FP_TO_UINT_I32_F32_S	= 848,
    FP_TO_UINT_I32_F64	= 849,
    FP_TO_UINT_I32_F64_S	= 850,
    FP_TO_UINT_I64_F32	= 851,
    FP_TO_UINT_I64_F32_S	= 852,
    FP_TO_UINT_I64_F64	= 853,
    FP_TO_UINT_I64_F64_S	= 854,
    GE_F32	= 855,
    GE_F32_S	= 856,
    GE_F32x4	= 857,
    GE_F32x4_S	= 858,
    GE_F64	= 859,
    GE_F64_S	= 860,
    GE_F64x2	= 861,
    GE_F64x2_S	= 862,
    GE_S_I16x8	= 863,
    GE_S_I16x8_S	= 864,
    GE_S_I32	= 865,
    GE_S_I32_S	= 866,
    GE_S_I32x4	= 867,
    GE_S_I32x4_S	= 868,
    GE_S_I64	= 869,
    GE_S_I64_S	= 870,
    GE_S_I64x2	= 871,
    GE_S_I64x2_S	= 872,
    GE_S_I8x16	= 873,
    GE_S_I8x16_S	= 874,
    GE_U_I16x8	= 875,
    GE_U_I16x8_S	= 876,
    GE_U_I32	= 877,
    GE_U_I32_S	= 878,
    GE_U_I32x4	= 879,
    GE_U_I32x4_S	= 880,
    GE_U_I64	= 881,
    GE_U_I64_S	= 882,
    GE_U_I8x16	= 883,
    GE_U_I8x16_S	= 884,
    GLOBAL_GET_EXTERNREF	= 885,
    GLOBAL_GET_EXTERNREF_S	= 886,
    GLOBAL_GET_F32	= 887,
    GLOBAL_GET_F32_S	= 888,
    GLOBAL_GET_F64	= 889,
    GLOBAL_GET_F64_S	= 890,
    GLOBAL_GET_FUNCREF	= 891,
    GLOBAL_GET_FUNCREF_S	= 892,
    GLOBAL_GET_I32	= 893,
    GLOBAL_GET_I32_S	= 894,
    GLOBAL_GET_I64	= 895,
    GLOBAL_GET_I64_S	= 896,
    GLOBAL_GET_V128	= 897,
    GLOBAL_GET_V128_S	= 898,
    GLOBAL_SET_EXTERNREF	= 899,
    GLOBAL_SET_EXTERNREF_S	= 900,
    GLOBAL_SET_F32	= 901,
    GLOBAL_SET_F32_S	= 902,
    GLOBAL_SET_F64	= 903,
    GLOBAL_SET_F64_S	= 904,
    GLOBAL_SET_FUNCREF	= 905,
    GLOBAL_SET_FUNCREF_S	= 906,
    GLOBAL_SET_I32	= 907,
    GLOBAL_SET_I32_S	= 908,
    GLOBAL_SET_I64	= 909,
    GLOBAL_SET_I64_S	= 910,
    GLOBAL_SET_V128	= 911,
    GLOBAL_SET_V128_S	= 912,
    GT_F32	= 913,
    GT_F32_S	= 914,
    GT_F32x4	= 915,
    GT_F32x4_S	= 916,
    GT_F64	= 917,
    GT_F64_S	= 918,
    GT_F64x2	= 919,
    GT_F64x2_S	= 920,
    GT_S_I16x8	= 921,
    GT_S_I16x8_S	= 922,
    GT_S_I32	= 923,
    GT_S_I32_S	= 924,
    GT_S_I32x4	= 925,
    GT_S_I32x4_S	= 926,
    GT_S_I64	= 927,
    GT_S_I64_S	= 928,
    GT_S_I64x2	= 929,
    GT_S_I64x2_S	= 930,
    GT_S_I8x16	= 931,
    GT_S_I8x16_S	= 932,
    GT_U_I16x8	= 933,
    GT_U_I16x8_S	= 934,
    GT_U_I32	= 935,
    GT_U_I32_S	= 936,
    GT_U_I32x4	= 937,
    GT_U_I32x4_S	= 938,
    GT_U_I64	= 939,
    GT_U_I64_S	= 940,
    GT_U_I8x16	= 941,
    GT_U_I8x16_S	= 942,
    I32_EXTEND16_S_I32	= 943,
    I32_EXTEND16_S_I32_S	= 944,
    I32_EXTEND8_S_I32	= 945,
    I32_EXTEND8_S_I32_S	= 946,
    I32_REINTERPRET_F32	= 947,
    I32_REINTERPRET_F32_S	= 948,
    I32_TRUNC_S_F32	= 949,
    I32_TRUNC_S_F32_S	= 950,
    I32_TRUNC_S_F64	= 951,
    I32_TRUNC_S_F64_S	= 952,
    I32_TRUNC_S_SAT_F32	= 953,
    I32_TRUNC_S_SAT_F32_S	= 954,
    I32_TRUNC_S_SAT_F64	= 955,
    I32_TRUNC_S_SAT_F64_S	= 956,
    I32_TRUNC_U_F32	= 957,
    I32_TRUNC_U_F32_S	= 958,
    I32_TRUNC_U_F64	= 959,
    I32_TRUNC_U_F64_S	= 960,
    I32_TRUNC_U_SAT_F32	= 961,
    I32_TRUNC_U_SAT_F32_S	= 962,
    I32_TRUNC_U_SAT_F64	= 963,
    I32_TRUNC_U_SAT_F64_S	= 964,
    I32_WRAP_I64	= 965,
    I32_WRAP_I64_S	= 966,
    I64_EXTEND16_S_I64	= 967,
    I64_EXTEND16_S_I64_S	= 968,
    I64_EXTEND32_S_I64	= 969,
    I64_EXTEND32_S_I64_S	= 970,
    I64_EXTEND8_S_I64	= 971,
    I64_EXTEND8_S_I64_S	= 972,
    I64_EXTEND_S_I32	= 973,
    I64_EXTEND_S_I32_S	= 974,
    I64_EXTEND_U_I32	= 975,
    I64_EXTEND_U_I32_S	= 976,
    I64_REINTERPRET_F64	= 977,
    I64_REINTERPRET_F64_S	= 978,
    I64_TRUNC_S_F32	= 979,
    I64_TRUNC_S_F32_S	= 980,
    I64_TRUNC_S_F64	= 981,
    I64_TRUNC_S_F64_S	= 982,
    I64_TRUNC_S_SAT_F32	= 983,
    I64_TRUNC_S_SAT_F32_S	= 984,
    I64_TRUNC_S_SAT_F64	= 985,
    I64_TRUNC_S_SAT_F64_S	= 986,
    I64_TRUNC_U_F32	= 987,
    I64_TRUNC_U_F32_S	= 988,
    I64_TRUNC_U_F64	= 989,
    I64_TRUNC_U_F64_S	= 990,
    I64_TRUNC_U_SAT_F32	= 991,
    I64_TRUNC_U_SAT_F32_S	= 992,
    I64_TRUNC_U_SAT_F64	= 993,
    I64_TRUNC_U_SAT_F64_S	= 994,
    IF	= 995,
    IF_S	= 996,
    LANESELECT_I16x8	= 997,
    LANESELECT_I16x8_S	= 998,
    LANESELECT_I32x4	= 999,
    LANESELECT_I32x4_S	= 1000,
    LANESELECT_I64x2	= 1001,
    LANESELECT_I64x2_S	= 1002,
    LANESELECT_I8x16	= 1003,
    LANESELECT_I8x16_S	= 1004,
    LE_F32	= 1005,
    LE_F32_S	= 1006,
    LE_F32x4	= 1007,
    LE_F32x4_S	= 1008,
    LE_F64	= 1009,
    LE_F64_S	= 1010,
    LE_F64x2	= 1011,
    LE_F64x2_S	= 1012,
    LE_S_I16x8	= 1013,
    LE_S_I16x8_S	= 1014,
    LE_S_I32	= 1015,
    LE_S_I32_S	= 1016,
    LE_S_I32x4	= 1017,
    LE_S_I32x4_S	= 1018,
    LE_S_I64	= 1019,
    LE_S_I64_S	= 1020,
    LE_S_I64x2	= 1021,
    LE_S_I64x2_S	= 1022,
    LE_S_I8x16	= 1023,
    LE_S_I8x16_S	= 1024,
    LE_U_I16x8	= 1025,
    LE_U_I16x8_S	= 1026,
    LE_U_I32	= 1027,
    LE_U_I32_S	= 1028,
    LE_U_I32x4	= 1029,
    LE_U_I32x4_S	= 1030,
    LE_U_I64	= 1031,
    LE_U_I64_S	= 1032,
    LE_U_I8x16	= 1033,
    LE_U_I8x16_S	= 1034,
    LOAD16_SPLAT_A32	= 1035,
    LOAD16_SPLAT_A32_S	= 1036,
    LOAD16_SPLAT_A64	= 1037,
    LOAD16_SPLAT_A64_S	= 1038,
    LOAD16_S_I32_A32	= 1039,
    LOAD16_S_I32_A32_S	= 1040,
    LOAD16_S_I32_A64	= 1041,
    LOAD16_S_I32_A64_S	= 1042,
    LOAD16_S_I64_A32	= 1043,
    LOAD16_S_I64_A32_S	= 1044,
    LOAD16_S_I64_A64	= 1045,
    LOAD16_S_I64_A64_S	= 1046,
    LOAD16_U_I32_A32	= 1047,
    LOAD16_U_I32_A32_S	= 1048,
    LOAD16_U_I32_A64	= 1049,
    LOAD16_U_I32_A64_S	= 1050,
    LOAD16_U_I64_A32	= 1051,
    LOAD16_U_I64_A32_S	= 1052,
    LOAD16_U_I64_A64	= 1053,
    LOAD16_U_I64_A64_S	= 1054,
    LOAD32_SPLAT_A32	= 1055,
    LOAD32_SPLAT_A32_S	= 1056,
    LOAD32_SPLAT_A64	= 1057,
    LOAD32_SPLAT_A64_S	= 1058,
    LOAD32_S_I64_A32	= 1059,
    LOAD32_S_I64_A32_S	= 1060,
    LOAD32_S_I64_A64	= 1061,
    LOAD32_S_I64_A64_S	= 1062,
    LOAD32_U_I64_A32	= 1063,
    LOAD32_U_I64_A32_S	= 1064,
    LOAD32_U_I64_A64	= 1065,
    LOAD32_U_I64_A64_S	= 1066,
    LOAD64_SPLAT_A32	= 1067,
    LOAD64_SPLAT_A32_S	= 1068,
    LOAD64_SPLAT_A64	= 1069,
    LOAD64_SPLAT_A64_S	= 1070,
    LOAD8_SPLAT_A32	= 1071,
    LOAD8_SPLAT_A32_S	= 1072,
    LOAD8_SPLAT_A64	= 1073,
    LOAD8_SPLAT_A64_S	= 1074,
    LOAD8_S_I32_A32	= 1075,
    LOAD8_S_I32_A32_S	= 1076,
    LOAD8_S_I32_A64	= 1077,
    LOAD8_S_I32_A64_S	= 1078,
    LOAD8_S_I64_A32	= 1079,
    LOAD8_S_I64_A32_S	= 1080,
    LOAD8_S_I64_A64	= 1081,
    LOAD8_S_I64_A64_S	= 1082,
    LOAD8_U_I32_A32	= 1083,
    LOAD8_U_I32_A32_S	= 1084,
    LOAD8_U_I32_A64	= 1085,
    LOAD8_U_I32_A64_S	= 1086,
    LOAD8_U_I64_A32	= 1087,
    LOAD8_U_I64_A32_S	= 1088,
    LOAD8_U_I64_A64	= 1089,
    LOAD8_U_I64_A64_S	= 1090,
    LOAD_EXTEND_S_I16x8_A32	= 1091,
    LOAD_EXTEND_S_I16x8_A32_S	= 1092,
    LOAD_EXTEND_S_I16x8_A64	= 1093,
    LOAD_EXTEND_S_I16x8_A64_S	= 1094,
    LOAD_EXTEND_S_I32x4_A32	= 1095,
    LOAD_EXTEND_S_I32x4_A32_S	= 1096,
    LOAD_EXTEND_S_I32x4_A64	= 1097,
    LOAD_EXTEND_S_I32x4_A64_S	= 1098,
    LOAD_EXTEND_S_I64x2_A32	= 1099,
    LOAD_EXTEND_S_I64x2_A32_S	= 1100,
    LOAD_EXTEND_S_I64x2_A64	= 1101,
    LOAD_EXTEND_S_I64x2_A64_S	= 1102,
    LOAD_EXTEND_U_I16x8_A32	= 1103,
    LOAD_EXTEND_U_I16x8_A32_S	= 1104,
    LOAD_EXTEND_U_I16x8_A64	= 1105,
    LOAD_EXTEND_U_I16x8_A64_S	= 1106,
    LOAD_EXTEND_U_I32x4_A32	= 1107,
    LOAD_EXTEND_U_I32x4_A32_S	= 1108,
    LOAD_EXTEND_U_I32x4_A64	= 1109,
    LOAD_EXTEND_U_I32x4_A64_S	= 1110,
    LOAD_EXTEND_U_I64x2_A32	= 1111,
    LOAD_EXTEND_U_I64x2_A32_S	= 1112,
    LOAD_EXTEND_U_I64x2_A64	= 1113,
    LOAD_EXTEND_U_I64x2_A64_S	= 1114,
    LOAD_F32_A32	= 1115,
    LOAD_F32_A32_S	= 1116,
    LOAD_F32_A64	= 1117,
    LOAD_F32_A64_S	= 1118,
    LOAD_F64_A32	= 1119,
    LOAD_F64_A32_S	= 1120,
    LOAD_F64_A64	= 1121,
    LOAD_F64_A64_S	= 1122,
    LOAD_I32_A32	= 1123,
    LOAD_I32_A32_S	= 1124,
    LOAD_I32_A64	= 1125,
    LOAD_I32_A64_S	= 1126,
    LOAD_I64_A32	= 1127,
    LOAD_I64_A32_S	= 1128,
    LOAD_I64_A64	= 1129,
    LOAD_I64_A64_S	= 1130,
    LOAD_LANE_I16x8_A32	= 1131,
    LOAD_LANE_I16x8_A32_S	= 1132,
    LOAD_LANE_I16x8_A64	= 1133,
    LOAD_LANE_I16x8_A64_S	= 1134,
    LOAD_LANE_I32x4_A32	= 1135,
    LOAD_LANE_I32x4_A32_S	= 1136,
    LOAD_LANE_I32x4_A64	= 1137,
    LOAD_LANE_I32x4_A64_S	= 1138,
    LOAD_LANE_I64x2_A32	= 1139,
    LOAD_LANE_I64x2_A32_S	= 1140,
    LOAD_LANE_I64x2_A64	= 1141,
    LOAD_LANE_I64x2_A64_S	= 1142,
    LOAD_LANE_I8x16_A32	= 1143,
    LOAD_LANE_I8x16_A32_S	= 1144,
    LOAD_LANE_I8x16_A64	= 1145,
    LOAD_LANE_I8x16_A64_S	= 1146,
    LOAD_V128_A32	= 1147,
    LOAD_V128_A32_S	= 1148,
    LOAD_V128_A64	= 1149,
    LOAD_V128_A64_S	= 1150,
    LOAD_ZERO_I32x4_A32	= 1151,
    LOAD_ZERO_I32x4_A32_S	= 1152,
    LOAD_ZERO_I32x4_A64	= 1153,
    LOAD_ZERO_I32x4_A64_S	= 1154,
    LOAD_ZERO_I64x2_A32	= 1155,
    LOAD_ZERO_I64x2_A32_S	= 1156,
    LOAD_ZERO_I64x2_A64	= 1157,
    LOAD_ZERO_I64x2_A64_S	= 1158,
    LOCAL_GET_EXTERNREF	= 1159,
    LOCAL_GET_EXTERNREF_S	= 1160,
    LOCAL_GET_F32	= 1161,
    LOCAL_GET_F32_S	= 1162,
    LOCAL_GET_F64	= 1163,
    LOCAL_GET_F64_S	= 1164,
    LOCAL_GET_FUNCREF	= 1165,
    LOCAL_GET_FUNCREF_S	= 1166,
    LOCAL_GET_I32	= 1167,
    LOCAL_GET_I32_S	= 1168,
    LOCAL_GET_I64	= 1169,
    LOCAL_GET_I64_S	= 1170,
    LOCAL_GET_V128	= 1171,
    LOCAL_GET_V128_S	= 1172,
    LOCAL_SET_EXTERNREF	= 1173,
    LOCAL_SET_EXTERNREF_S	= 1174,
    LOCAL_SET_F32	= 1175,
    LOCAL_SET_F32_S	= 1176,
    LOCAL_SET_F64	= 1177,
    LOCAL_SET_F64_S	= 1178,
    LOCAL_SET_FUNCREF	= 1179,
    LOCAL_SET_FUNCREF_S	= 1180,
    LOCAL_SET_I32	= 1181,
    LOCAL_SET_I32_S	= 1182,
    LOCAL_SET_I64	= 1183,
    LOCAL_SET_I64_S	= 1184,
    LOCAL_SET_V128	= 1185,
    LOCAL_SET_V128_S	= 1186,
    LOCAL_TEE_EXTERNREF	= 1187,
    LOCAL_TEE_EXTERNREF_S	= 1188,
    LOCAL_TEE_F32	= 1189,
    LOCAL_TEE_F32_S	= 1190,
    LOCAL_TEE_F64	= 1191,
    LOCAL_TEE_F64_S	= 1192,
    LOCAL_TEE_FUNCREF	= 1193,
    LOCAL_TEE_FUNCREF_S	= 1194,
    LOCAL_TEE_I32	= 1195,
    LOCAL_TEE_I32_S	= 1196,
    LOCAL_TEE_I64	= 1197,
    LOCAL_TEE_I64_S	= 1198,
    LOCAL_TEE_V128	= 1199,
    LOCAL_TEE_V128_S	= 1200,
    LOOP	= 1201,
    LOOP_S	= 1202,
    LT_F32	= 1203,
    LT_F32_S	= 1204,
    LT_F32x4	= 1205,
    LT_F32x4_S	= 1206,
    LT_F64	= 1207,
    LT_F64_S	= 1208,
    LT_F64x2	= 1209,
    LT_F64x2_S	= 1210,
    LT_S_I16x8	= 1211,
    LT_S_I16x8_S	= 1212,
    LT_S_I32	= 1213,
    LT_S_I32_S	= 1214,
    LT_S_I32x4	= 1215,
    LT_S_I32x4_S	= 1216,
    LT_S_I64	= 1217,
    LT_S_I64_S	= 1218,
    LT_S_I64x2	= 1219,
    LT_S_I64x2_S	= 1220,
    LT_S_I8x16	= 1221,
    LT_S_I8x16_S	= 1222,
    LT_U_I16x8	= 1223,
    LT_U_I16x8_S	= 1224,
    LT_U_I32	= 1225,
    LT_U_I32_S	= 1226,
    LT_U_I32x4	= 1227,
    LT_U_I32x4_S	= 1228,
    LT_U_I64	= 1229,
    LT_U_I64_S	= 1230,
    LT_U_I8x16	= 1231,
    LT_U_I8x16_S	= 1232,
    MADD_F32x4	= 1233,
    MADD_F32x4_S	= 1234,
    MADD_F64x2	= 1235,
    MADD_F64x2_S	= 1236,
    MAX_F32	= 1237,
    MAX_F32_S	= 1238,
    MAX_F32x4	= 1239,
    MAX_F32x4_S	= 1240,
    MAX_F64	= 1241,
    MAX_F64_S	= 1242,
    MAX_F64x2	= 1243,
    MAX_F64x2_S	= 1244,
    MAX_S_I16x8	= 1245,
    MAX_S_I16x8_S	= 1246,
    MAX_S_I32x4	= 1247,
    MAX_S_I32x4_S	= 1248,
    MAX_S_I8x16	= 1249,
    MAX_S_I8x16_S	= 1250,
    MAX_U_I16x8	= 1251,
    MAX_U_I16x8_S	= 1252,
    MAX_U_I32x4	= 1253,
    MAX_U_I32x4_S	= 1254,
    MAX_U_I8x16	= 1255,
    MAX_U_I8x16_S	= 1256,
    MEMORY_ATOMIC_NOTIFY_A32	= 1257,
    MEMORY_ATOMIC_NOTIFY_A32_S	= 1258,
    MEMORY_ATOMIC_NOTIFY_A64	= 1259,
    MEMORY_ATOMIC_NOTIFY_A64_S	= 1260,
    MEMORY_ATOMIC_WAIT32_A32	= 1261,
    MEMORY_ATOMIC_WAIT32_A32_S	= 1262,
    MEMORY_ATOMIC_WAIT32_A64	= 1263,
    MEMORY_ATOMIC_WAIT32_A64_S	= 1264,
    MEMORY_ATOMIC_WAIT64_A32	= 1265,
    MEMORY_ATOMIC_WAIT64_A32_S	= 1266,
    MEMORY_ATOMIC_WAIT64_A64	= 1267,
    MEMORY_ATOMIC_WAIT64_A64_S	= 1268,
    MIN_F32	= 1269,
    MIN_F32_S	= 1270,
    MIN_F32x4	= 1271,
    MIN_F32x4_S	= 1272,
    MIN_F64	= 1273,
    MIN_F64_S	= 1274,
    MIN_F64x2	= 1275,
    MIN_F64x2_S	= 1276,
    MIN_S_I16x8	= 1277,
    MIN_S_I16x8_S	= 1278,
    MIN_S_I32x4	= 1279,
    MIN_S_I32x4_S	= 1280,
    MIN_S_I8x16	= 1281,
    MIN_S_I8x16_S	= 1282,
    MIN_U_I16x8	= 1283,
    MIN_U_I16x8_S	= 1284,
    MIN_U_I32x4	= 1285,
    MIN_U_I32x4_S	= 1286,
    MIN_U_I8x16	= 1287,
    MIN_U_I8x16_S	= 1288,
    MUL_F32	= 1289,
    MUL_F32_S	= 1290,
    MUL_F32x4	= 1291,
    MUL_F32x4_S	= 1292,
    MUL_F64	= 1293,
    MUL_F64_S	= 1294,
    MUL_F64x2	= 1295,
    MUL_F64x2_S	= 1296,
    MUL_I16x8	= 1297,
    MUL_I16x8_S	= 1298,
    MUL_I32	= 1299,
    MUL_I32_S	= 1300,
    MUL_I32x4	= 1301,
    MUL_I32x4_S	= 1302,
    MUL_I64	= 1303,
    MUL_I64_S	= 1304,
    MUL_I64x2	= 1305,
    MUL_I64x2_S	= 1306,
    NARROW_S_I16x8	= 1307,
    NARROW_S_I16x8_S	= 1308,
    NARROW_S_I8x16	= 1309,
    NARROW_S_I8x16_S	= 1310,
    NARROW_U_I16x8	= 1311,
    NARROW_U_I16x8_S	= 1312,
    NARROW_U_I8x16	= 1313,
    NARROW_U_I8x16_S	= 1314,
    NEAREST_F32	= 1315,
    NEAREST_F32_S	= 1316,
    NEAREST_F32x4	= 1317,
    NEAREST_F32x4_S	= 1318,
    NEAREST_F64	= 1319,
    NEAREST_F64_S	= 1320,
    NEAREST_F64x2	= 1321,
    NEAREST_F64x2_S	= 1322,
    NEG_F32	= 1323,
    NEG_F32_S	= 1324,
    NEG_F32x4	= 1325,
    NEG_F32x4_S	= 1326,
    NEG_F64	= 1327,
    NEG_F64_S	= 1328,
    NEG_F64x2	= 1329,
    NEG_F64x2_S	= 1330,
    NEG_I16x8	= 1331,
    NEG_I16x8_S	= 1332,
    NEG_I32x4	= 1333,
    NEG_I32x4_S	= 1334,
    NEG_I64x2	= 1335,
    NEG_I64x2_S	= 1336,
    NEG_I8x16	= 1337,
    NEG_I8x16_S	= 1338,
    NE_F32	= 1339,
    NE_F32_S	= 1340,
    NE_F32x4	= 1341,
    NE_F32x4_S	= 1342,
    NE_F64	= 1343,
    NE_F64_S	= 1344,
    NE_F64x2	= 1345,
    NE_F64x2_S	= 1346,
    NE_I16x8	= 1347,
    NE_I16x8_S	= 1348,
    NE_I32	= 1349,
    NE_I32_S	= 1350,
    NE_I32x4	= 1351,
    NE_I32x4_S	= 1352,
    NE_I64	= 1353,
    NE_I64_S	= 1354,
    NE_I64x2	= 1355,
    NE_I64x2_S	= 1356,
    NE_I8x16	= 1357,
    NE_I8x16_S	= 1358,
    NMADD_F32x4	= 1359,
    NMADD_F32x4_S	= 1360,
    NMADD_F64x2	= 1361,
    NMADD_F64x2_S	= 1362,
    NOP	= 1363,
    NOP_S	= 1364,
    NOT	= 1365,
    NOT_S	= 1366,
    OR	= 1367,
    OR_I32	= 1368,
    OR_I32_S	= 1369,
    OR_I64	= 1370,
    OR_I64_S	= 1371,
    OR_S	= 1372,
    PMAX_F32x4	= 1373,
    PMAX_F32x4_S	= 1374,
    PMAX_F64x2	= 1375,
    PMAX_F64x2_S	= 1376,
    PMIN_F32x4	= 1377,
    PMIN_F32x4_S	= 1378,
    PMIN_F64x2	= 1379,
    PMIN_F64x2_S	= 1380,
    POPCNT_I32	= 1381,
    POPCNT_I32_S	= 1382,
    POPCNT_I64	= 1383,
    POPCNT_I64_S	= 1384,
    POPCNT_I8x16	= 1385,
    POPCNT_I8x16_S	= 1386,
    Q15MULR_SAT_S_I16x8	= 1387,
    Q15MULR_SAT_S_I16x8_S	= 1388,
    REF_IS_NULL_EXTERNREF	= 1389,
    REF_IS_NULL_EXTERNREF_S	= 1390,
    REF_IS_NULL_FUNCREF	= 1391,
    REF_IS_NULL_FUNCREF_S	= 1392,
    REF_NULL_EXTERNREF	= 1393,
    REF_NULL_EXTERNREF_S	= 1394,
    REF_NULL_FUNCREF	= 1395,
    REF_NULL_FUNCREF_S	= 1396,
    RELAXED_DOT	= 1397,
    RELAXED_DOT_ADD	= 1398,
    RELAXED_DOT_ADD_S	= 1399,
    RELAXED_DOT_BFLOAT	= 1400,
    RELAXED_DOT_BFLOAT_S	= 1401,
    RELAXED_DOT_S	= 1402,
    RELAXED_Q15MULR_S_I16x8	= 1403,
    RELAXED_Q15MULR_S_I16x8_S	= 1404,
    RELAXED_SWIZZLE	= 1405,
    RELAXED_SWIZZLE_S	= 1406,
    REM_S_I32	= 1407,
    REM_S_I32_S	= 1408,
    REM_S_I64	= 1409,
    REM_S_I64_S	= 1410,
    REM_U_I32	= 1411,
    REM_U_I32_S	= 1412,
    REM_U_I64	= 1413,
    REM_U_I64_S	= 1414,
    REPLACE_LANE_F32x4	= 1415,
    REPLACE_LANE_F32x4_S	= 1416,
    REPLACE_LANE_F64x2	= 1417,
    REPLACE_LANE_F64x2_S	= 1418,
    REPLACE_LANE_I16x8	= 1419,
    REPLACE_LANE_I16x8_S	= 1420,
    REPLACE_LANE_I32x4	= 1421,
    REPLACE_LANE_I32x4_S	= 1422,
    REPLACE_LANE_I64x2	= 1423,
    REPLACE_LANE_I64x2_S	= 1424,
    REPLACE_LANE_I8x16	= 1425,
    REPLACE_LANE_I8x16_S	= 1426,
    RETHROW	= 1427,
    RETHROW_S	= 1428,
    RETURN	= 1429,
    RETURN_S	= 1430,
    RET_CALL	= 1431,
    RET_CALL_INDIRECT	= 1432,
    RET_CALL_INDIRECT_S	= 1433,
    RET_CALL_S	= 1434,
    ROTL_I32	= 1435,
    ROTL_I32_S	= 1436,
    ROTL_I64	= 1437,
    ROTL_I64_S	= 1438,
    ROTR_I32	= 1439,
    ROTR_I32_S	= 1440,
    ROTR_I64	= 1441,
    ROTR_I64_S	= 1442,
    SELECT_EXTERNREF	= 1443,
    SELECT_EXTERNREF_S	= 1444,
    SELECT_F32	= 1445,
    SELECT_F32_S	= 1446,
    SELECT_F64	= 1447,
    SELECT_F64_S	= 1448,
    SELECT_FUNCREF	= 1449,
    SELECT_FUNCREF_S	= 1450,
    SELECT_I32	= 1451,
    SELECT_I32_S	= 1452,
    SELECT_I64	= 1453,
    SELECT_I64_S	= 1454,
    SELECT_V128	= 1455,
    SELECT_V128_S	= 1456,
    SHL_I16x8	= 1457,
    SHL_I16x8_S	= 1458,
    SHL_I32	= 1459,
    SHL_I32_S	= 1460,
    SHL_I32x4	= 1461,
    SHL_I32x4_S	= 1462,
    SHL_I64	= 1463,
    SHL_I64_S	= 1464,
    SHL_I64x2	= 1465,
    SHL_I64x2_S	= 1466,
    SHL_I8x16	= 1467,
    SHL_I8x16_S	= 1468,
    SHR_S_I16x8	= 1469,
    SHR_S_I16x8_S	= 1470,
    SHR_S_I32	= 1471,
    SHR_S_I32_S	= 1472,
    SHR_S_I32x4	= 1473,
    SHR_S_I32x4_S	= 1474,
    SHR_S_I64	= 1475,
    SHR_S_I64_S	= 1476,
    SHR_S_I64x2	= 1477,
    SHR_S_I64x2_S	= 1478,
    SHR_S_I8x16	= 1479,
    SHR_S_I8x16_S	= 1480,
    SHR_U_I16x8	= 1481,
    SHR_U_I16x8_S	= 1482,
    SHR_U_I32	= 1483,
    SHR_U_I32_S	= 1484,
    SHR_U_I32x4	= 1485,
    SHR_U_I32x4_S	= 1486,
    SHR_U_I64	= 1487,
    SHR_U_I64_S	= 1488,
    SHR_U_I64x2	= 1489,
    SHR_U_I64x2_S	= 1490,
    SHR_U_I8x16	= 1491,
    SHR_U_I8x16_S	= 1492,
    SHUFFLE	= 1493,
    SHUFFLE_S	= 1494,
    SIMD_RELAXED_FMAX_F32x4	= 1495,
    SIMD_RELAXED_FMAX_F32x4_S	= 1496,
    SIMD_RELAXED_FMAX_F64x2	= 1497,
    SIMD_RELAXED_FMAX_F64x2_S	= 1498,
    SIMD_RELAXED_FMIN_F32x4	= 1499,
    SIMD_RELAXED_FMIN_F32x4_S	= 1500,
    SIMD_RELAXED_FMIN_F64x2	= 1501,
    SIMD_RELAXED_FMIN_F64x2_S	= 1502,
    SPLAT_F32x4	= 1503,
    SPLAT_F32x4_S	= 1504,
    SPLAT_F64x2	= 1505,
    SPLAT_F64x2_S	= 1506,
    SPLAT_I16x8	= 1507,
    SPLAT_I16x8_S	= 1508,
    SPLAT_I32x4	= 1509,
    SPLAT_I32x4_S	= 1510,
    SPLAT_I64x2	= 1511,
    SPLAT_I64x2_S	= 1512,
    SPLAT_I8x16	= 1513,
    SPLAT_I8x16_S	= 1514,
    SQRT_F32	= 1515,
    SQRT_F32_S	= 1516,
    SQRT_F32x4	= 1517,
    SQRT_F32x4_S	= 1518,
    SQRT_F64	= 1519,
    SQRT_F64_S	= 1520,
    SQRT_F64x2	= 1521,
    SQRT_F64x2_S	= 1522,
    STORE16_I32_A32	= 1523,
    STORE16_I32_A32_S	= 1524,
    STORE16_I32_A64	= 1525,
    STORE16_I32_A64_S	= 1526,
    STORE16_I64_A32	= 1527,
    STORE16_I64_A32_S	= 1528,
    STORE16_I64_A64	= 1529,
    STORE16_I64_A64_S	= 1530,
    STORE32_I64_A32	= 1531,
    STORE32_I64_A32_S	= 1532,
    STORE32_I64_A64	= 1533,
    STORE32_I64_A64_S	= 1534,
    STORE8_I32_A32	= 1535,
    STORE8_I32_A32_S	= 1536,
    STORE8_I32_A64	= 1537,
    STORE8_I32_A64_S	= 1538,
    STORE8_I64_A32	= 1539,
    STORE8_I64_A32_S	= 1540,
    STORE8_I64_A64	= 1541,
    STORE8_I64_A64_S	= 1542,
    STORE_F32_A32	= 1543,
    STORE_F32_A32_S	= 1544,
    STORE_F32_A64	= 1545,
    STORE_F32_A64_S	= 1546,
    STORE_F64_A32	= 1547,
    STORE_F64_A32_S	= 1548,
    STORE_F64_A64	= 1549,
    STORE_F64_A64_S	= 1550,
    STORE_I32_A32	= 1551,
    STORE_I32_A32_S	= 1552,
    STORE_I32_A64	= 1553,
    STORE_I32_A64_S	= 1554,
    STORE_I64_A32	= 1555,
    STORE_I64_A32_S	= 1556,
    STORE_I64_A64	= 1557,
    STORE_I64_A64_S	= 1558,
    STORE_LANE_I16x8_A32	= 1559,
    STORE_LANE_I16x8_A32_S	= 1560,
    STORE_LANE_I16x8_A64	= 1561,
    STORE_LANE_I16x8_A64_S	= 1562,
    STORE_LANE_I32x4_A32	= 1563,
    STORE_LANE_I32x4_A32_S	= 1564,
    STORE_LANE_I32x4_A64	= 1565,
    STORE_LANE_I32x4_A64_S	= 1566,
    STORE_LANE_I64x2_A32	= 1567,
    STORE_LANE_I64x2_A32_S	= 1568,
    STORE_LANE_I64x2_A64	= 1569,
    STORE_LANE_I64x2_A64_S	= 1570,
    STORE_LANE_I8x16_A32	= 1571,
    STORE_LANE_I8x16_A32_S	= 1572,
    STORE_LANE_I8x16_A64	= 1573,
    STORE_LANE_I8x16_A64_S	= 1574,
    STORE_V128_A32	= 1575,
    STORE_V128_A32_S	= 1576,
    STORE_V128_A64	= 1577,
    STORE_V128_A64_S	= 1578,
    SUB_F32	= 1579,
    SUB_F32_S	= 1580,
    SUB_F32x4	= 1581,
    SUB_F32x4_S	= 1582,
    SUB_F64	= 1583,
    SUB_F64_S	= 1584,
    SUB_F64x2	= 1585,
    SUB_F64x2_S	= 1586,
    SUB_I16x8	= 1587,
    SUB_I16x8_S	= 1588,
    SUB_I32	= 1589,
    SUB_I32_S	= 1590,
    SUB_I32x4	= 1591,
    SUB_I32x4_S	= 1592,
    SUB_I64	= 1593,
    SUB_I64_S	= 1594,
    SUB_I64x2	= 1595,
    SUB_I64x2_S	= 1596,
    SUB_I8x16	= 1597,
    SUB_I8x16_S	= 1598,
    SUB_SAT_S_I16x8	= 1599,
    SUB_SAT_S_I16x8_S	= 1600,
    SUB_SAT_S_I8x16	= 1601,
    SUB_SAT_S_I8x16_S	= 1602,
    SUB_SAT_U_I16x8	= 1603,
    SUB_SAT_U_I16x8_S	= 1604,
    SUB_SAT_U_I8x16	= 1605,
    SUB_SAT_U_I8x16_S	= 1606,
    SWIZZLE	= 1607,
    SWIZZLE_S	= 1608,
    TABLE_COPY	= 1609,
    TABLE_COPY_S	= 1610,
    TABLE_FILL_EXTERNREF	= 1611,
    TABLE_FILL_EXTERNREF_S	= 1612,
    TABLE_FILL_FUNCREF	= 1613,
    TABLE_FILL_FUNCREF_S	= 1614,
    TABLE_GET_EXTERNREF	= 1615,
    TABLE_GET_EXTERNREF_S	= 1616,
    TABLE_GET_FUNCREF	= 1617,
    TABLE_GET_FUNCREF_S	= 1618,
    TABLE_GROW_EXTERNREF	= 1619,
    TABLE_GROW_EXTERNREF_S	= 1620,
    TABLE_GROW_FUNCREF	= 1621,
    TABLE_GROW_FUNCREF_S	= 1622,
    TABLE_SET_EXTERNREF	= 1623,
    TABLE_SET_EXTERNREF_S	= 1624,
    TABLE_SET_FUNCREF	= 1625,
    TABLE_SET_FUNCREF_S	= 1626,
    TABLE_SIZE	= 1627,
    TABLE_SIZE_S	= 1628,
    TEE_EXTERNREF	= 1629,
    TEE_EXTERNREF_S	= 1630,
    TEE_F32	= 1631,
    TEE_F32_S	= 1632,
    TEE_F64	= 1633,
    TEE_F64_S	= 1634,
    TEE_FUNCREF	= 1635,
    TEE_FUNCREF_S	= 1636,
    TEE_I32	= 1637,
    TEE_I32_S	= 1638,
    TEE_I64	= 1639,
    TEE_I64_S	= 1640,
    TEE_V128	= 1641,
    TEE_V128_S	= 1642,
    THROW	= 1643,
    THROW_S	= 1644,
    TRUNC_F32	= 1645,
    TRUNC_F32_S	= 1646,
    TRUNC_F32x4	= 1647,
    TRUNC_F32x4_S	= 1648,
    TRUNC_F64	= 1649,
    TRUNC_F64_S	= 1650,
    TRUNC_F64x2	= 1651,
    TRUNC_F64x2_S	= 1652,
    TRY	= 1653,
    TRY_S	= 1654,
    UNREACHABLE	= 1655,
    UNREACHABLE_S	= 1656,
    XOR	= 1657,
    XOR_I32	= 1658,
    XOR_I32_S	= 1659,
    XOR_I64	= 1660,
    XOR_I64_S	= 1661,
    XOR_S	= 1662,
    anonymous_4396MEMORY_GROW_A32	= 1663,
    anonymous_4396MEMORY_GROW_A32_S	= 1664,
    anonymous_4396MEMORY_SIZE_A32	= 1665,
    anonymous_4396MEMORY_SIZE_A32_S	= 1666,
    anonymous_4397MEMORY_GROW_A64	= 1667,
    anonymous_4397MEMORY_GROW_A64_S	= 1668,
    anonymous_4397MEMORY_SIZE_A64	= 1669,
    anonymous_4397MEMORY_SIZE_A64_S	= 1670,
    anonymous_6249DATA_DROP	= 1671,
    anonymous_6249DATA_DROP_S	= 1672,
    anonymous_6249MEMORY_COPY_A32	= 1673,
    anonymous_6249MEMORY_COPY_A32_S	= 1674,
    anonymous_6249MEMORY_FILL_A32	= 1675,
    anonymous_6249MEMORY_FILL_A32_S	= 1676,
    anonymous_6249MEMORY_INIT_A32	= 1677,
    anonymous_6249MEMORY_INIT_A32_S	= 1678,
    anonymous_6250DATA_DROP	= 1679,
    anonymous_6250DATA_DROP_S	= 1680,
    anonymous_6250MEMORY_COPY_A64	= 1681,
    anonymous_6250MEMORY_COPY_A64_S	= 1682,
    anonymous_6250MEMORY_FILL_A64	= 1683,
    anonymous_6250MEMORY_FILL_A64_S	= 1684,
    anonymous_6250MEMORY_INIT_A64	= 1685,
    anonymous_6250MEMORY_INIT_A64_S	= 1686,
    convert_low_s_F64x2	= 1687,
    convert_low_s_F64x2_S	= 1688,
    convert_low_u_F64x2	= 1689,
    convert_low_u_F64x2_S	= 1690,
    demote_zero_F32x4	= 1691,
    demote_zero_F32x4_S	= 1692,
    extend_high_s_I16x8	= 1693,
    extend_high_s_I16x8_S	= 1694,
    extend_high_s_I32x4	= 1695,
    extend_high_s_I32x4_S	= 1696,
    extend_high_s_I64x2	= 1697,
    extend_high_s_I64x2_S	= 1698,
    extend_high_u_I16x8	= 1699,
    extend_high_u_I16x8_S	= 1700,
    extend_high_u_I32x4	= 1701,
    extend_high_u_I32x4_S	= 1702,
    extend_high_u_I64x2	= 1703,
    extend_high_u_I64x2_S	= 1704,
    extend_low_s_I16x8	= 1705,
    extend_low_s_I16x8_S	= 1706,
    extend_low_s_I32x4	= 1707,
    extend_low_s_I32x4_S	= 1708,
    extend_low_s_I64x2	= 1709,
    extend_low_s_I64x2_S	= 1710,
    extend_low_u_I16x8	= 1711,
    extend_low_u_I16x8_S	= 1712,
    extend_low_u_I32x4	= 1713,
    extend_low_u_I32x4_S	= 1714,
    extend_low_u_I64x2	= 1715,
    extend_low_u_I64x2_S	= 1716,
    fp_to_sint_I32x4	= 1717,
    fp_to_sint_I32x4_S	= 1718,
    fp_to_uint_I32x4	= 1719,
    fp_to_uint_I32x4_S	= 1720,
    int_wasm_extadd_pairwise_signed_I16x8	= 1721,
    int_wasm_extadd_pairwise_signed_I16x8_S	= 1722,
    int_wasm_extadd_pairwise_signed_I32x4	= 1723,
    int_wasm_extadd_pairwise_signed_I32x4_S	= 1724,
    int_wasm_extadd_pairwise_unsigned_I16x8	= 1725,
    int_wasm_extadd_pairwise_unsigned_I16x8_S	= 1726,
    int_wasm_extadd_pairwise_unsigned_I32x4	= 1727,
    int_wasm_extadd_pairwise_unsigned_I32x4_S	= 1728,
    int_wasm_relaxed_trunc_signed_I32x4	= 1729,
    int_wasm_relaxed_trunc_signed_I32x4_S	= 1730,
    int_wasm_relaxed_trunc_signed_zero_I32x4	= 1731,
    int_wasm_relaxed_trunc_signed_zero_I32x4_S	= 1732,
    int_wasm_relaxed_trunc_unsigned_I32x4	= 1733,
    int_wasm_relaxed_trunc_unsigned_I32x4_S	= 1734,
    int_wasm_relaxed_trunc_unsigned_zero_I32x4	= 1735,
    int_wasm_relaxed_trunc_unsigned_zero_I32x4_S	= 1736,
    promote_low_F64x2	= 1737,
    promote_low_F64x2_S	= 1738,
    sint_to_fp_F32x4	= 1739,
    sint_to_fp_F32x4_S	= 1740,
    trunc_sat_zero_s_I32x4	= 1741,
    trunc_sat_zero_s_I32x4_S	= 1742,
    trunc_sat_zero_u_I32x4	= 1743,
    trunc_sat_zero_u_I32x4_S	= 1744,
    uint_to_fp_F32x4	= 1745,
    uint_to_fp_F32x4_S	= 1746,
    INSTRUCTION_LIST_END = 1747
  };

} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_SCHED_ENUM
#undef GET_INSTRINFO_SCHED_ENUM
namespace llvm {

namespace WebAssembly {
namespace Sched {
  enum {
    NoInstrModel	= 0,
    SCHED_LIST_END = 1
  };
} // end namespace Sched
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_SCHED_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { WebAssembly::SP32, WebAssembly::SP64, 0 };
static const MCPhysReg ImplicitList2[] = { WebAssembly::ARGUMENTS, 0 };
static const MCPhysReg ImplicitList3[] = { WebAssembly::VALUE_STACK, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo10[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { -1, 0, WebAssembly::OPERAND_FUNCTION32, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { -1, 0, WebAssembly::OPERAND_SIGNATURE, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { -1, 0, WebAssembly::OPERAND_BRLIST, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { -1, 0, WebAssembly::OPERAND_TYPEINDEX, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { -1, 0, WebAssembly::OPERAND_TAG, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { -1, 0, WebAssembly::OPERAND_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { -1, 0, WebAssembly::OPERAND_SIGNATURE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc WebAssemblyInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1 = INLINEASM
  { 2,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #2 = INLINEASM_BR
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #3 = CFI_INSTRUCTION
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #4 = EH_LABEL
  { 5,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #5 = GC_LABEL
  { 6,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #6 = ANNOTATION_LABEL
  { 7,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #7 = KILL
  { 8,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo4 },  // Inst #8 = EXTRACT_SUBREG
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo5 },  // Inst #9 = INSERT_SUBREG
  { 10,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #10 = IMPLICIT_DEF
  { 11,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo6 },  // Inst #11 = SUBREG_TO_REG
  { 12,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo4 },  // Inst #12 = COPY_TO_REGCLASS
  { 13,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #13 = DBG_VALUE
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #14 = DBG_VALUE_LIST
  { 15,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #15 = DBG_INSTR_REF
  { 16,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #16 = DBG_PHI
  { 17,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #17 = DBG_LABEL
  { 18,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo7 },  // Inst #18 = REG_SEQUENCE
  { 19,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo7 },  // Inst #19 = COPY
  { 20,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #20 = BUNDLE
  { 21,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #21 = LIFETIME_START
  { 22,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #22 = LIFETIME_END
  { 23,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo8 },  // Inst #23 = PSEUDO_PROBE
  { 24,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo9 },  // Inst #24 = ARITH_FENCE
  { 25,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo10 },  // Inst #25 = STACKMAP
  { 26,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #26 = FENTRY_CALL
  { 27,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo11 },  // Inst #27 = PATCHPOINT
  { 28,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo12 },  // Inst #28 = LOAD_STACK_GUARD
  { 29,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #29 = PREALLOCATED_SETUP
  { 30,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13 },  // Inst #30 = PREALLOCATED_ARG
  { 31,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #31 = STATEPOINT
  { 32,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo14 },  // Inst #32 = LOCAL_ESCAPE
  { 33,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #33 = FAULTING_OP
  { 34,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #34 = PATCHABLE_OP
  { 35,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #35 = PATCHABLE_FUNCTION_ENTER
  { 36,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #36 = PATCHABLE_RET
  { 37,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #37 = PATCHABLE_FUNCTION_EXIT
  { 38,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #38 = PATCHABLE_TAIL_CALL
  { 39,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo15 },  // Inst #39 = PATCHABLE_EVENT_CALL
  { 40,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #40 = PATCHABLE_TYPED_EVENT_CALL
  { 41,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #41 = ICALL_BRANCH_FUNNEL
  { 42,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #42 = G_ASSERT_SEXT
  { 43,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #43 = G_ASSERT_ZEXT
  { 44,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #44 = G_ASSERT_ALIGN
  { 45,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #45 = G_ADD
  { 46,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #46 = G_SUB
  { 47,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #47 = G_MUL
  { 48,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #48 = G_SDIV
  { 49,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #49 = G_UDIV
  { 50,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #50 = G_SREM
  { 51,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #51 = G_UREM
  { 52,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #52 = G_SDIVREM
  { 53,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #53 = G_UDIVREM
  { 54,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #54 = G_AND
  { 55,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #55 = G_OR
  { 56,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #56 = G_XOR
  { 57,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #57 = G_IMPLICIT_DEF
  { 58,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #58 = G_PHI
  { 59,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #59 = G_FRAME_INDEX
  { 60,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #60 = G_GLOBAL_VALUE
  { 61,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #61 = G_EXTRACT
  { 62,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #62 = G_UNMERGE_VALUES
  { 63,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo24 },  // Inst #63 = G_INSERT
  { 64,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #64 = G_MERGE_VALUES
  { 65,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #65 = G_BUILD_VECTOR
  { 66,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #66 = G_BUILD_VECTOR_TRUNC
  { 67,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #67 = G_CONCAT_VECTORS
  { 68,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #68 = G_PTRTOINT
  { 69,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #69 = G_INTTOPTR
  { 70,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #70 = G_BITCAST
  { 71,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #71 = G_FREEZE
  { 72,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #72 = G_INTRINSIC_FPTRUNC_ROUND
  { 73,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #73 = G_INTRINSIC_TRUNC
  { 74,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #74 = G_INTRINSIC_ROUND
  { 75,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #75 = G_INTRINSIC_LRINT
  { 76,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #76 = G_INTRINSIC_ROUNDEVEN
  { 77,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #77 = G_READCYCLECOUNTER
  { 78,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #78 = G_LOAD
  { 79,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #79 = G_SEXTLOAD
  { 80,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #80 = G_ZEXTLOAD
  { 81,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #81 = G_INDEXED_LOAD
  { 82,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #82 = G_INDEXED_SEXTLOAD
  { 83,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #83 = G_INDEXED_ZEXTLOAD
  { 84,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #84 = G_STORE
  { 85,	5,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #85 = G_INDEXED_STORE
  { 86,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo29 },  // Inst #86 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
  { 87,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #87 = G_ATOMIC_CMPXCHG
  { 88,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #88 = G_ATOMICRMW_XCHG
  { 89,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #89 = G_ATOMICRMW_ADD
  { 90,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #90 = G_ATOMICRMW_SUB
  { 91,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #91 = G_ATOMICRMW_AND
  { 92,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #92 = G_ATOMICRMW_NAND
  { 93,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #93 = G_ATOMICRMW_OR
  { 94,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #94 = G_ATOMICRMW_XOR
  { 95,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #95 = G_ATOMICRMW_MAX
  { 96,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #96 = G_ATOMICRMW_MIN
  { 97,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #97 = G_ATOMICRMW_UMAX
  { 98,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #98 = G_ATOMICRMW_UMIN
  { 99,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #99 = G_ATOMICRMW_FADD
  { 100,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #100 = G_ATOMICRMW_FSUB
  { 101,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #101 = G_ATOMICRMW_FMAX
  { 102,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #102 = G_ATOMICRMW_FMIN
  { 103,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo10 },  // Inst #103 = G_FENCE
  { 104,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #104 = G_BRCOND
  { 105,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #105 = G_BRINDIRECT
  { 106,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #106 = G_INTRINSIC
  { 107,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #107 = G_INTRINSIC_W_SIDE_EFFECTS
  { 108,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #108 = G_ANYEXT
  { 109,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #109 = G_TRUNC
  { 110,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #110 = G_CONSTANT
  { 111,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #111 = G_FCONSTANT
  { 112,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #112 = G_VASTART
  { 113,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo32 },  // Inst #113 = G_VAARG
  { 114,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #114 = G_SEXT
  { 115,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #115 = G_SEXT_INREG
  { 116,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #116 = G_ZEXT
  { 117,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #117 = G_SHL
  { 118,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #118 = G_LSHR
  { 119,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #119 = G_ASHR
  { 120,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #120 = G_FSHL
  { 121,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #121 = G_FSHR
  { 122,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #122 = G_ROTR
  { 123,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #123 = G_ROTL
  { 124,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #124 = G_ICMP
  { 125,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #125 = G_FCMP
  { 126,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #126 = G_SELECT
  { 127,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #127 = G_UADDO
  { 128,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo36 },  // Inst #128 = G_UADDE
  { 129,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #129 = G_USUBO
  { 130,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo36 },  // Inst #130 = G_USUBE
  { 131,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #131 = G_SADDO
  { 132,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo36 },  // Inst #132 = G_SADDE
  { 133,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #133 = G_SSUBO
  { 134,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo36 },  // Inst #134 = G_SSUBE
  { 135,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #135 = G_UMULO
  { 136,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #136 = G_SMULO
  { 137,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #137 = G_UMULH
  { 138,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #138 = G_SMULH
  { 139,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #139 = G_UADDSAT
  { 140,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #140 = G_SADDSAT
  { 141,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #141 = G_USUBSAT
  { 142,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #142 = G_SSUBSAT
  { 143,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #143 = G_USHLSAT
  { 144,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #144 = G_SSHLSAT
  { 145,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #145 = G_SMULFIX
  { 146,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #146 = G_UMULFIX
  { 147,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #147 = G_SMULFIXSAT
  { 148,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #148 = G_UMULFIXSAT
  { 149,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #149 = G_SDIVFIX
  { 150,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #150 = G_UDIVFIX
  { 151,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #151 = G_SDIVFIXSAT
  { 152,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #152 = G_UDIVFIXSAT
  { 153,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #153 = G_FADD
  { 154,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #154 = G_FSUB
  { 155,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #155 = G_FMUL
  { 156,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #156 = G_FMA
  { 157,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #157 = G_FMAD
  { 158,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #158 = G_FDIV
  { 159,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #159 = G_FREM
  { 160,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #160 = G_FPOW
  { 161,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #161 = G_FPOWI
  { 162,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #162 = G_FEXP
  { 163,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #163 = G_FEXP2
  { 164,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #164 = G_FLOG
  { 165,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #165 = G_FLOG2
  { 166,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #166 = G_FLOG10
  { 167,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #167 = G_FNEG
  { 168,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #168 = G_FPEXT
  { 169,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #169 = G_FPTRUNC
  { 170,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #170 = G_FPTOSI
  { 171,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #171 = G_FPTOUI
  { 172,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #172 = G_SITOFP
  { 173,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #173 = G_UITOFP
  { 174,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #174 = G_FABS
  { 175,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #175 = G_FCOPYSIGN
  { 176,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo32 },  // Inst #176 = G_IS_FPCLASS
  { 177,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #177 = G_FCANONICALIZE
  { 178,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #178 = G_FMINNUM
  { 179,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #179 = G_FMAXNUM
  { 180,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #180 = G_FMINNUM_IEEE
  { 181,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #181 = G_FMAXNUM_IEEE
  { 182,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #182 = G_FMINIMUM
  { 183,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #183 = G_FMAXIMUM
  { 184,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #184 = G_PTR_ADD
  { 185,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #185 = G_PTRMASK
  { 186,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #186 = G_SMIN
  { 187,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #187 = G_SMAX
  { 188,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #188 = G_UMIN
  { 189,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #189 = G_UMAX
  { 190,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #190 = G_ABS
  { 191,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #191 = G_LROUND
  { 192,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #192 = G_LLROUND
  { 193,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #193 = G_BR
  { 194,	3,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo38 },  // Inst #194 = G_BRJT
  { 195,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo39 },  // Inst #195 = G_INSERT_VECTOR_ELT
  { 196,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo40 },  // Inst #196 = G_EXTRACT_VECTOR_ELT
  { 197,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo41 },  // Inst #197 = G_SHUFFLE_VECTOR
  { 198,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #198 = G_CTTZ
  { 199,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #199 = G_CTTZ_ZERO_UNDEF
  { 200,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #200 = G_CTLZ
  { 201,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #201 = G_CTLZ_ZERO_UNDEF
  { 202,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #202 = G_CTPOP
  { 203,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #203 = G_BSWAP
  { 204,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #204 = G_BITREVERSE
  { 205,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #205 = G_FCEIL
  { 206,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #206 = G_FCOS
  { 207,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #207 = G_FSIN
  { 208,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #208 = G_FSQRT
  { 209,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #209 = G_FFLOOR
  { 210,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #210 = G_FRINT
  { 211,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #211 = G_FNEARBYINT
  { 212,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #212 = G_ADDRSPACE_CAST
  { 213,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #213 = G_BLOCK_ADDR
  { 214,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #214 = G_JUMP_TABLE
  { 215,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #215 = G_DYN_STACKALLOC
  { 216,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #216 = G_STRICT_FADD
  { 217,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #217 = G_STRICT_FSUB
  { 218,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #218 = G_STRICT_FMUL
  { 219,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #219 = G_STRICT_FDIV
  { 220,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #220 = G_STRICT_FREM
  { 221,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #221 = G_STRICT_FMA
  { 222,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #222 = G_STRICT_FSQRT
  { 223,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #223 = G_READ_REGISTER
  { 224,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo42 },  // Inst #224 = G_WRITE_REGISTER
  { 225,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo43 },  // Inst #225 = G_MEMCPY
  { 226,	3,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo40 },  // Inst #226 = G_MEMCPY_INLINE
  { 227,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo43 },  // Inst #227 = G_MEMMOVE
  { 228,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo43 },  // Inst #228 = G_MEMSET
  { 229,	3,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #229 = G_BZERO
  { 230,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo40 },  // Inst #230 = G_VECREDUCE_SEQ_FADD
  { 231,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo40 },  // Inst #231 = G_VECREDUCE_SEQ_FMUL
  { 232,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #232 = G_VECREDUCE_FADD
  { 233,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #233 = G_VECREDUCE_FMUL
  { 234,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #234 = G_VECREDUCE_FMAX
  { 235,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #235 = G_VECREDUCE_FMIN
  { 236,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #236 = G_VECREDUCE_ADD
  { 237,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #237 = G_VECREDUCE_MUL
  { 238,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #238 = G_VECREDUCE_AND
  { 239,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #239 = G_VECREDUCE_OR
  { 240,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #240 = G_VECREDUCE_XOR
  { 241,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #241 = G_VECREDUCE_SMAX
  { 242,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #242 = G_VECREDUCE_SMIN
  { 243,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #243 = G_VECREDUCE_UMAX
  { 244,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #244 = G_VECREDUCE_UMIN
  { 245,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo44 },  // Inst #245 = G_SBFX
  { 246,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo44 },  // Inst #246 = G_UBFX
  { 247,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo45 },  // Inst #247 = CALL_PARAMS
  { 248,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo45 },  // Inst #248 = CALL_PARAMS_S
  { 249,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, nullptr },  // Inst #249 = CALL_RESULTS
  { 250,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, nullptr },  // Inst #250 = CALL_RESULTS_S
  { 251,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #251 = CATCHRET
  { 252,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #252 = CATCHRET_S
  { 253,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #253 = CLEANUPRET
  { 254,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #254 = CLEANUPRET_S
  { 255,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #255 = COMPILER_FENCE
  { 256,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #256 = COMPILER_FENCE_S
  { 257,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, nullptr },  // Inst #257 = RET_CALL_RESULTS
  { 258,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, nullptr },  // Inst #258 = RET_CALL_RESULTS_S
  { 259,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #259 = ABS_F32
  { 260,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #260 = ABS_F32_S
  { 261,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #261 = ABS_F32x4
  { 262,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #262 = ABS_F32x4_S
  { 263,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #263 = ABS_F64
  { 264,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #264 = ABS_F64_S
  { 265,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #265 = ABS_F64x2
  { 266,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #266 = ABS_F64x2_S
  { 267,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #267 = ABS_I16x8
  { 268,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #268 = ABS_I16x8_S
  { 269,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #269 = ABS_I32x4
  { 270,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #270 = ABS_I32x4_S
  { 271,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #271 = ABS_I64x2
  { 272,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #272 = ABS_I64x2_S
  { 273,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #273 = ABS_I8x16
  { 274,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #274 = ABS_I8x16_S
  { 275,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #275 = ADD_F32
  { 276,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #276 = ADD_F32_S
  { 277,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #277 = ADD_F32x4
  { 278,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #278 = ADD_F32x4_S
  { 279,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #279 = ADD_F64
  { 280,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #280 = ADD_F64_S
  { 281,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #281 = ADD_F64x2
  { 282,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #282 = ADD_F64x2_S
  { 283,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #283 = ADD_I16x8
  { 284,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #284 = ADD_I16x8_S
  { 285,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #285 = ADD_I32
  { 286,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #286 = ADD_I32_S
  { 287,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #287 = ADD_I32x4
  { 288,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #288 = ADD_I32x4_S
  { 289,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #289 = ADD_I64
  { 290,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #290 = ADD_I64_S
  { 291,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #291 = ADD_I64x2
  { 292,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #292 = ADD_I64x2_S
  { 293,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #293 = ADD_I8x16
  { 294,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #294 = ADD_I8x16_S
  { 295,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #295 = ADD_SAT_S_I16x8
  { 296,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #296 = ADD_SAT_S_I16x8_S
  { 297,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #297 = ADD_SAT_S_I8x16
  { 298,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #298 = ADD_SAT_S_I8x16_S
  { 299,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #299 = ADD_SAT_U_I16x8
  { 300,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #300 = ADD_SAT_U_I16x8_S
  { 301,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #301 = ADD_SAT_U_I8x16
  { 302,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #302 = ADD_SAT_U_I8x16_S
  { 303,	2,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo10 },  // Inst #303 = ADJCALLSTACKDOWN
  { 304,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo10 },  // Inst #304 = ADJCALLSTACKDOWN_S
  { 305,	2,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo10 },  // Inst #305 = ADJCALLSTACKUP
  { 306,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo10 },  // Inst #306 = ADJCALLSTACKUP_S
  { 307,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo55 },  // Inst #307 = ALLTRUE_I16x8
  { 308,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #308 = ALLTRUE_I16x8_S
  { 309,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo55 },  // Inst #309 = ALLTRUE_I32x4
  { 310,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #310 = ALLTRUE_I32x4_S
  { 311,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo55 },  // Inst #311 = ALLTRUE_I64x2
  { 312,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #312 = ALLTRUE_I64x2_S
  { 313,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo55 },  // Inst #313 = ALLTRUE_I8x16
  { 314,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #314 = ALLTRUE_I8x16_S
  { 315,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #315 = AND
  { 316,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #316 = ANDNOT
  { 317,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #317 = ANDNOT_S
  { 318,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #318 = AND_I32
  { 319,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #319 = AND_I32_S
  { 320,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #320 = AND_I64
  { 321,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #321 = AND_I64_S
  { 322,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #322 = AND_S
  { 323,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo55 },  // Inst #323 = ANYTRUE
  { 324,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #324 = ANYTRUE_S
  { 325,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo56 },  // Inst #325 = ARGUMENT_externref
  { 326,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #326 = ARGUMENT_externref_S
  { 327,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo57 },  // Inst #327 = ARGUMENT_f32
  { 328,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #328 = ARGUMENT_f32_S
  { 329,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo58 },  // Inst #329 = ARGUMENT_f64
  { 330,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #330 = ARGUMENT_f64_S
  { 331,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo59 },  // Inst #331 = ARGUMENT_funcref
  { 332,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #332 = ARGUMENT_funcref_S
  { 333,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo60 },  // Inst #333 = ARGUMENT_i32
  { 334,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #334 = ARGUMENT_i32_S
  { 335,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo61 },  // Inst #335 = ARGUMENT_i64
  { 336,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #336 = ARGUMENT_i64_S
  { 337,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo62 },  // Inst #337 = ARGUMENT_v16i8
  { 338,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #338 = ARGUMENT_v16i8_S
  { 339,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo62 },  // Inst #339 = ARGUMENT_v2f64
  { 340,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #340 = ARGUMENT_v2f64_S
  { 341,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo62 },  // Inst #341 = ARGUMENT_v2i64
  { 342,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #342 = ARGUMENT_v2i64_S
  { 343,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo62 },  // Inst #343 = ARGUMENT_v4f32
  { 344,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #344 = ARGUMENT_v4f32_S
  { 345,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo62 },  // Inst #345 = ARGUMENT_v4i32
  { 346,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #346 = ARGUMENT_v4i32_S
  { 347,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo62 },  // Inst #347 = ARGUMENT_v8i16
  { 348,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #348 = ARGUMENT_v8i16_S
  { 349,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #349 = ATOMIC_FENCE
  { 350,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #350 = ATOMIC_FENCE_S
  { 351,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #351 = ATOMIC_LOAD16_U_I32_A32
  { 352,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #352 = ATOMIC_LOAD16_U_I32_A32_S
  { 353,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #353 = ATOMIC_LOAD16_U_I32_A64
  { 354,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #354 = ATOMIC_LOAD16_U_I32_A64_S
  { 355,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #355 = ATOMIC_LOAD16_U_I64_A32
  { 356,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #356 = ATOMIC_LOAD16_U_I64_A32_S
  { 357,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #357 = ATOMIC_LOAD16_U_I64_A64
  { 358,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #358 = ATOMIC_LOAD16_U_I64_A64_S
  { 359,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #359 = ATOMIC_LOAD32_U_I64_A32
  { 360,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #360 = ATOMIC_LOAD32_U_I64_A32_S
  { 361,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #361 = ATOMIC_LOAD32_U_I64_A64
  { 362,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #362 = ATOMIC_LOAD32_U_I64_A64_S
  { 363,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #363 = ATOMIC_LOAD8_U_I32_A32
  { 364,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #364 = ATOMIC_LOAD8_U_I32_A32_S
  { 365,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #365 = ATOMIC_LOAD8_U_I32_A64
  { 366,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #366 = ATOMIC_LOAD8_U_I32_A64_S
  { 367,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #367 = ATOMIC_LOAD8_U_I64_A32
  { 368,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #368 = ATOMIC_LOAD8_U_I64_A32_S
  { 369,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #369 = ATOMIC_LOAD8_U_I64_A64
  { 370,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #370 = ATOMIC_LOAD8_U_I64_A64_S
  { 371,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #371 = ATOMIC_LOAD_I32_A32
  { 372,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #372 = ATOMIC_LOAD_I32_A32_S
  { 373,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #373 = ATOMIC_LOAD_I32_A64
  { 374,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #374 = ATOMIC_LOAD_I32_A64_S
  { 375,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #375 = ATOMIC_LOAD_I64_A32
  { 376,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #376 = ATOMIC_LOAD_I64_A32_S
  { 377,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #377 = ATOMIC_LOAD_I64_A64
  { 378,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #378 = ATOMIC_LOAD_I64_A64_S
  { 379,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #379 = ATOMIC_RMW16_U_ADD_I32_A32
  { 380,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #380 = ATOMIC_RMW16_U_ADD_I32_A32_S
  { 381,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #381 = ATOMIC_RMW16_U_ADD_I32_A64
  { 382,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #382 = ATOMIC_RMW16_U_ADD_I32_A64_S
  { 383,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #383 = ATOMIC_RMW16_U_ADD_I64_A32
  { 384,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #384 = ATOMIC_RMW16_U_ADD_I64_A32_S
  { 385,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #385 = ATOMIC_RMW16_U_ADD_I64_A64
  { 386,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #386 = ATOMIC_RMW16_U_ADD_I64_A64_S
  { 387,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #387 = ATOMIC_RMW16_U_AND_I32_A32
  { 388,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #388 = ATOMIC_RMW16_U_AND_I32_A32_S
  { 389,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #389 = ATOMIC_RMW16_U_AND_I32_A64
  { 390,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #390 = ATOMIC_RMW16_U_AND_I32_A64_S
  { 391,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #391 = ATOMIC_RMW16_U_AND_I64_A32
  { 392,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #392 = ATOMIC_RMW16_U_AND_I64_A32_S
  { 393,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #393 = ATOMIC_RMW16_U_AND_I64_A64
  { 394,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #394 = ATOMIC_RMW16_U_AND_I64_A64_S
  { 395,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo73 },  // Inst #395 = ATOMIC_RMW16_U_CMPXCHG_I32_A32
  { 396,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #396 = ATOMIC_RMW16_U_CMPXCHG_I32_A32_S
  { 397,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo74 },  // Inst #397 = ATOMIC_RMW16_U_CMPXCHG_I32_A64
  { 398,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #398 = ATOMIC_RMW16_U_CMPXCHG_I32_A64_S
  { 399,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo75 },  // Inst #399 = ATOMIC_RMW16_U_CMPXCHG_I64_A32
  { 400,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #400 = ATOMIC_RMW16_U_CMPXCHG_I64_A32_S
  { 401,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo76 },  // Inst #401 = ATOMIC_RMW16_U_CMPXCHG_I64_A64
  { 402,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #402 = ATOMIC_RMW16_U_CMPXCHG_I64_A64_S
  { 403,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #403 = ATOMIC_RMW16_U_OR_I32_A32
  { 404,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #404 = ATOMIC_RMW16_U_OR_I32_A32_S
  { 405,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #405 = ATOMIC_RMW16_U_OR_I32_A64
  { 406,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #406 = ATOMIC_RMW16_U_OR_I32_A64_S
  { 407,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #407 = ATOMIC_RMW16_U_OR_I64_A32
  { 408,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #408 = ATOMIC_RMW16_U_OR_I64_A32_S
  { 409,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #409 = ATOMIC_RMW16_U_OR_I64_A64
  { 410,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #410 = ATOMIC_RMW16_U_OR_I64_A64_S
  { 411,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #411 = ATOMIC_RMW16_U_SUB_I32_A32
  { 412,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #412 = ATOMIC_RMW16_U_SUB_I32_A32_S
  { 413,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #413 = ATOMIC_RMW16_U_SUB_I32_A64
  { 414,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #414 = ATOMIC_RMW16_U_SUB_I32_A64_S
  { 415,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #415 = ATOMIC_RMW16_U_SUB_I64_A32
  { 416,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #416 = ATOMIC_RMW16_U_SUB_I64_A32_S
  { 417,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #417 = ATOMIC_RMW16_U_SUB_I64_A64
  { 418,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #418 = ATOMIC_RMW16_U_SUB_I64_A64_S
  { 419,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #419 = ATOMIC_RMW16_U_XCHG_I32_A32
  { 420,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #420 = ATOMIC_RMW16_U_XCHG_I32_A32_S
  { 421,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #421 = ATOMIC_RMW16_U_XCHG_I32_A64
  { 422,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #422 = ATOMIC_RMW16_U_XCHG_I32_A64_S
  { 423,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #423 = ATOMIC_RMW16_U_XCHG_I64_A32
  { 424,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #424 = ATOMIC_RMW16_U_XCHG_I64_A32_S
  { 425,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #425 = ATOMIC_RMW16_U_XCHG_I64_A64
  { 426,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #426 = ATOMIC_RMW16_U_XCHG_I64_A64_S
  { 427,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #427 = ATOMIC_RMW16_U_XOR_I32_A32
  { 428,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #428 = ATOMIC_RMW16_U_XOR_I32_A32_S
  { 429,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #429 = ATOMIC_RMW16_U_XOR_I32_A64
  { 430,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #430 = ATOMIC_RMW16_U_XOR_I32_A64_S
  { 431,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #431 = ATOMIC_RMW16_U_XOR_I64_A32
  { 432,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #432 = ATOMIC_RMW16_U_XOR_I64_A32_S
  { 433,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #433 = ATOMIC_RMW16_U_XOR_I64_A64
  { 434,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #434 = ATOMIC_RMW16_U_XOR_I64_A64_S
  { 435,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #435 = ATOMIC_RMW32_U_ADD_I64_A32
  { 436,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #436 = ATOMIC_RMW32_U_ADD_I64_A32_S
  { 437,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #437 = ATOMIC_RMW32_U_ADD_I64_A64
  { 438,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #438 = ATOMIC_RMW32_U_ADD_I64_A64_S
  { 439,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #439 = ATOMIC_RMW32_U_AND_I64_A32
  { 440,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #440 = ATOMIC_RMW32_U_AND_I64_A32_S
  { 441,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #441 = ATOMIC_RMW32_U_AND_I64_A64
  { 442,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #442 = ATOMIC_RMW32_U_AND_I64_A64_S
  { 443,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo75 },  // Inst #443 = ATOMIC_RMW32_U_CMPXCHG_I64_A32
  { 444,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #444 = ATOMIC_RMW32_U_CMPXCHG_I64_A32_S
  { 445,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo76 },  // Inst #445 = ATOMIC_RMW32_U_CMPXCHG_I64_A64
  { 446,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #446 = ATOMIC_RMW32_U_CMPXCHG_I64_A64_S
  { 447,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #447 = ATOMIC_RMW32_U_OR_I64_A32
  { 448,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #448 = ATOMIC_RMW32_U_OR_I64_A32_S
  { 449,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #449 = ATOMIC_RMW32_U_OR_I64_A64
  { 450,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #450 = ATOMIC_RMW32_U_OR_I64_A64_S
  { 451,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #451 = ATOMIC_RMW32_U_SUB_I64_A32
  { 452,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #452 = ATOMIC_RMW32_U_SUB_I64_A32_S
  { 453,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #453 = ATOMIC_RMW32_U_SUB_I64_A64
  { 454,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #454 = ATOMIC_RMW32_U_SUB_I64_A64_S
  { 455,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #455 = ATOMIC_RMW32_U_XCHG_I64_A32
  { 456,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #456 = ATOMIC_RMW32_U_XCHG_I64_A32_S
  { 457,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #457 = ATOMIC_RMW32_U_XCHG_I64_A64
  { 458,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #458 = ATOMIC_RMW32_U_XCHG_I64_A64_S
  { 459,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #459 = ATOMIC_RMW32_U_XOR_I64_A32
  { 460,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #460 = ATOMIC_RMW32_U_XOR_I64_A32_S
  { 461,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #461 = ATOMIC_RMW32_U_XOR_I64_A64
  { 462,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #462 = ATOMIC_RMW32_U_XOR_I64_A64_S
  { 463,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #463 = ATOMIC_RMW8_U_ADD_I32_A32
  { 464,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #464 = ATOMIC_RMW8_U_ADD_I32_A32_S
  { 465,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #465 = ATOMIC_RMW8_U_ADD_I32_A64
  { 466,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #466 = ATOMIC_RMW8_U_ADD_I32_A64_S
  { 467,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #467 = ATOMIC_RMW8_U_ADD_I64_A32
  { 468,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #468 = ATOMIC_RMW8_U_ADD_I64_A32_S
  { 469,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #469 = ATOMIC_RMW8_U_ADD_I64_A64
  { 470,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #470 = ATOMIC_RMW8_U_ADD_I64_A64_S
  { 471,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #471 = ATOMIC_RMW8_U_AND_I32_A32
  { 472,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #472 = ATOMIC_RMW8_U_AND_I32_A32_S
  { 473,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #473 = ATOMIC_RMW8_U_AND_I32_A64
  { 474,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #474 = ATOMIC_RMW8_U_AND_I32_A64_S
  { 475,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #475 = ATOMIC_RMW8_U_AND_I64_A32
  { 476,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #476 = ATOMIC_RMW8_U_AND_I64_A32_S
  { 477,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #477 = ATOMIC_RMW8_U_AND_I64_A64
  { 478,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #478 = ATOMIC_RMW8_U_AND_I64_A64_S
  { 479,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo73 },  // Inst #479 = ATOMIC_RMW8_U_CMPXCHG_I32_A32
  { 480,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #480 = ATOMIC_RMW8_U_CMPXCHG_I32_A32_S
  { 481,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo74 },  // Inst #481 = ATOMIC_RMW8_U_CMPXCHG_I32_A64
  { 482,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #482 = ATOMIC_RMW8_U_CMPXCHG_I32_A64_S
  { 483,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo75 },  // Inst #483 = ATOMIC_RMW8_U_CMPXCHG_I64_A32
  { 484,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #484 = ATOMIC_RMW8_U_CMPXCHG_I64_A32_S
  { 485,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo76 },  // Inst #485 = ATOMIC_RMW8_U_CMPXCHG_I64_A64
  { 486,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #486 = ATOMIC_RMW8_U_CMPXCHG_I64_A64_S
  { 487,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #487 = ATOMIC_RMW8_U_OR_I32_A32
  { 488,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #488 = ATOMIC_RMW8_U_OR_I32_A32_S
  { 489,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #489 = ATOMIC_RMW8_U_OR_I32_A64
  { 490,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #490 = ATOMIC_RMW8_U_OR_I32_A64_S
  { 491,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #491 = ATOMIC_RMW8_U_OR_I64_A32
  { 492,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #492 = ATOMIC_RMW8_U_OR_I64_A32_S
  { 493,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #493 = ATOMIC_RMW8_U_OR_I64_A64
  { 494,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #494 = ATOMIC_RMW8_U_OR_I64_A64_S
  { 495,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #495 = ATOMIC_RMW8_U_SUB_I32_A32
  { 496,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #496 = ATOMIC_RMW8_U_SUB_I32_A32_S
  { 497,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #497 = ATOMIC_RMW8_U_SUB_I32_A64
  { 498,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #498 = ATOMIC_RMW8_U_SUB_I32_A64_S
  { 499,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #499 = ATOMIC_RMW8_U_SUB_I64_A32
  { 500,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #500 = ATOMIC_RMW8_U_SUB_I64_A32_S
  { 501,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #501 = ATOMIC_RMW8_U_SUB_I64_A64
  { 502,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #502 = ATOMIC_RMW8_U_SUB_I64_A64_S
  { 503,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #503 = ATOMIC_RMW8_U_XCHG_I32_A32
  { 504,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #504 = ATOMIC_RMW8_U_XCHG_I32_A32_S
  { 505,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #505 = ATOMIC_RMW8_U_XCHG_I32_A64
  { 506,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #506 = ATOMIC_RMW8_U_XCHG_I32_A64_S
  { 507,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #507 = ATOMIC_RMW8_U_XCHG_I64_A32
  { 508,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #508 = ATOMIC_RMW8_U_XCHG_I64_A32_S
  { 509,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #509 = ATOMIC_RMW8_U_XCHG_I64_A64
  { 510,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #510 = ATOMIC_RMW8_U_XCHG_I64_A64_S
  { 511,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #511 = ATOMIC_RMW8_U_XOR_I32_A32
  { 512,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #512 = ATOMIC_RMW8_U_XOR_I32_A32_S
  { 513,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #513 = ATOMIC_RMW8_U_XOR_I32_A64
  { 514,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #514 = ATOMIC_RMW8_U_XOR_I32_A64_S
  { 515,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #515 = ATOMIC_RMW8_U_XOR_I64_A32
  { 516,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #516 = ATOMIC_RMW8_U_XOR_I64_A32_S
  { 517,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #517 = ATOMIC_RMW8_U_XOR_I64_A64
  { 518,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #518 = ATOMIC_RMW8_U_XOR_I64_A64_S
  { 519,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #519 = ATOMIC_RMW_ADD_I32_A32
  { 520,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #520 = ATOMIC_RMW_ADD_I32_A32_S
  { 521,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #521 = ATOMIC_RMW_ADD_I32_A64
  { 522,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #522 = ATOMIC_RMW_ADD_I32_A64_S
  { 523,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #523 = ATOMIC_RMW_ADD_I64_A32
  { 524,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #524 = ATOMIC_RMW_ADD_I64_A32_S
  { 525,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #525 = ATOMIC_RMW_ADD_I64_A64
  { 526,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #526 = ATOMIC_RMW_ADD_I64_A64_S
  { 527,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #527 = ATOMIC_RMW_AND_I32_A32
  { 528,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #528 = ATOMIC_RMW_AND_I32_A32_S
  { 529,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #529 = ATOMIC_RMW_AND_I32_A64
  { 530,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #530 = ATOMIC_RMW_AND_I32_A64_S
  { 531,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #531 = ATOMIC_RMW_AND_I64_A32
  { 532,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #532 = ATOMIC_RMW_AND_I64_A32_S
  { 533,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #533 = ATOMIC_RMW_AND_I64_A64
  { 534,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #534 = ATOMIC_RMW_AND_I64_A64_S
  { 535,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo73 },  // Inst #535 = ATOMIC_RMW_CMPXCHG_I32_A32
  { 536,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #536 = ATOMIC_RMW_CMPXCHG_I32_A32_S
  { 537,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo74 },  // Inst #537 = ATOMIC_RMW_CMPXCHG_I32_A64
  { 538,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #538 = ATOMIC_RMW_CMPXCHG_I32_A64_S
  { 539,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo75 },  // Inst #539 = ATOMIC_RMW_CMPXCHG_I64_A32
  { 540,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #540 = ATOMIC_RMW_CMPXCHG_I64_A32_S
  { 541,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo76 },  // Inst #541 = ATOMIC_RMW_CMPXCHG_I64_A64
  { 542,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #542 = ATOMIC_RMW_CMPXCHG_I64_A64_S
  { 543,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #543 = ATOMIC_RMW_OR_I32_A32
  { 544,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #544 = ATOMIC_RMW_OR_I32_A32_S
  { 545,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #545 = ATOMIC_RMW_OR_I32_A64
  { 546,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #546 = ATOMIC_RMW_OR_I32_A64_S
  { 547,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #547 = ATOMIC_RMW_OR_I64_A32
  { 548,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #548 = ATOMIC_RMW_OR_I64_A32_S
  { 549,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #549 = ATOMIC_RMW_OR_I64_A64
  { 550,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #550 = ATOMIC_RMW_OR_I64_A64_S
  { 551,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #551 = ATOMIC_RMW_SUB_I32_A32
  { 552,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #552 = ATOMIC_RMW_SUB_I32_A32_S
  { 553,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #553 = ATOMIC_RMW_SUB_I32_A64
  { 554,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #554 = ATOMIC_RMW_SUB_I32_A64_S
  { 555,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #555 = ATOMIC_RMW_SUB_I64_A32
  { 556,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #556 = ATOMIC_RMW_SUB_I64_A32_S
  { 557,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #557 = ATOMIC_RMW_SUB_I64_A64
  { 558,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #558 = ATOMIC_RMW_SUB_I64_A64_S
  { 559,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #559 = ATOMIC_RMW_XCHG_I32_A32
  { 560,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #560 = ATOMIC_RMW_XCHG_I32_A32_S
  { 561,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #561 = ATOMIC_RMW_XCHG_I32_A64
  { 562,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #562 = ATOMIC_RMW_XCHG_I32_A64_S
  { 563,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #563 = ATOMIC_RMW_XCHG_I64_A32
  { 564,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #564 = ATOMIC_RMW_XCHG_I64_A32_S
  { 565,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #565 = ATOMIC_RMW_XCHG_I64_A64
  { 566,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #566 = ATOMIC_RMW_XCHG_I64_A64_S
  { 567,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #567 = ATOMIC_RMW_XOR_I32_A32
  { 568,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #568 = ATOMIC_RMW_XOR_I32_A32_S
  { 569,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #569 = ATOMIC_RMW_XOR_I32_A64
  { 570,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #570 = ATOMIC_RMW_XOR_I32_A64_S
  { 571,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #571 = ATOMIC_RMW_XOR_I64_A32
  { 572,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #572 = ATOMIC_RMW_XOR_I64_A32_S
  { 573,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #573 = ATOMIC_RMW_XOR_I64_A64
  { 574,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #574 = ATOMIC_RMW_XOR_I64_A64_S
  { 575,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #575 = ATOMIC_STORE16_I32_A32
  { 576,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #576 = ATOMIC_STORE16_I32_A32_S
  { 577,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #577 = ATOMIC_STORE16_I32_A64
  { 578,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #578 = ATOMIC_STORE16_I32_A64_S
  { 579,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #579 = ATOMIC_STORE16_I64_A32
  { 580,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #580 = ATOMIC_STORE16_I64_A32_S
  { 581,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo80 },  // Inst #581 = ATOMIC_STORE16_I64_A64
  { 582,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #582 = ATOMIC_STORE16_I64_A64_S
  { 583,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #583 = ATOMIC_STORE32_I64_A32
  { 584,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #584 = ATOMIC_STORE32_I64_A32_S
  { 585,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo80 },  // Inst #585 = ATOMIC_STORE32_I64_A64
  { 586,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #586 = ATOMIC_STORE32_I64_A64_S
  { 587,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #587 = ATOMIC_STORE8_I32_A32
  { 588,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #588 = ATOMIC_STORE8_I32_A32_S
  { 589,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #589 = ATOMIC_STORE8_I32_A64
  { 590,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #590 = ATOMIC_STORE8_I32_A64_S
  { 591,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #591 = ATOMIC_STORE8_I64_A32
  { 592,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #592 = ATOMIC_STORE8_I64_A32_S
  { 593,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo80 },  // Inst #593 = ATOMIC_STORE8_I64_A64
  { 594,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #594 = ATOMIC_STORE8_I64_A64_S
  { 595,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #595 = ATOMIC_STORE_I32_A32
  { 596,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #596 = ATOMIC_STORE_I32_A32_S
  { 597,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #597 = ATOMIC_STORE_I32_A64
  { 598,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #598 = ATOMIC_STORE_I32_A64_S
  { 599,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #599 = ATOMIC_STORE_I64_A32
  { 600,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #600 = ATOMIC_STORE_I64_A32_S
  { 601,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo80 },  // Inst #601 = ATOMIC_STORE_I64_A64
  { 602,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #602 = ATOMIC_STORE_I64_A64_S
  { 603,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #603 = AVGR_U_I16x8
  { 604,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #604 = AVGR_U_I16x8_S
  { 605,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #605 = AVGR_U_I8x16
  { 606,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #606 = AVGR_U_I8x16_S
  { 607,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo55 },  // Inst #607 = BITMASK_I16x8
  { 608,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #608 = BITMASK_I16x8_S
  { 609,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo55 },  // Inst #609 = BITMASK_I32x4
  { 610,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #610 = BITMASK_I32x4_S
  { 611,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo55 },  // Inst #611 = BITMASK_I64x2
  { 612,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #612 = BITMASK_I64x2_S
  { 613,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo55 },  // Inst #613 = BITMASK_I8x16
  { 614,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #614 = BITMASK_I8x16_S
  { 615,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #615 = BITSELECT
  { 616,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #616 = BITSELECT_S
  { 617,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo82 },  // Inst #617 = BLOCK
  { 618,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo82 },  // Inst #618 = BLOCK_S
  { 619,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo83 },  // Inst #619 = BR
  { 620,	2,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo84 },  // Inst #620 = BR_IF
  { 621,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo83 },  // Inst #621 = BR_IF_S
  { 622,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo83 },  // Inst #622 = BR_S
  { 623,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo85 },  // Inst #623 = BR_TABLE_I32
  { 624,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo86 },  // Inst #624 = BR_TABLE_I32_S
  { 625,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo87 },  // Inst #625 = BR_TABLE_I64
  { 626,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo86 },  // Inst #626 = BR_TABLE_I64_S
  { 627,	2,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo84 },  // Inst #627 = BR_UNLESS
  { 628,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo83 },  // Inst #628 = BR_UNLESS_S
  { 629,	1,	0,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo45 },  // Inst #629 = CALL
  { 630,	2,	0,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo88 },  // Inst #630 = CALL_INDIRECT
  { 631,	2,	0,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo88 },  // Inst #631 = CALL_INDIRECT_S
  { 632,	1,	0,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo45 },  // Inst #632 = CALL_S
  { 633,	1,	0,	0,	0,	0|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, nullptr, ImplicitList2, OperandInfo89 },  // Inst #633 = CATCH
  { 634,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #634 = CATCH_ALL
  { 635,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #635 = CATCH_ALL_S
  { 636,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, nullptr, ImplicitList2, OperandInfo89 },  // Inst #636 = CATCH_S
  { 637,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #637 = CEIL_F32
  { 638,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #638 = CEIL_F32_S
  { 639,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #639 = CEIL_F32x4
  { 640,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #640 = CEIL_F32x4_S
  { 641,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #641 = CEIL_F64
  { 642,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #642 = CEIL_F64_S
  { 643,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #643 = CEIL_F64x2
  { 644,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #644 = CEIL_F64x2_S
  { 645,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #645 = CLZ_I32
  { 646,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #646 = CLZ_I32_S
  { 647,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo91 },  // Inst #647 = CLZ_I64
  { 648,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #648 = CLZ_I64_S
  { 649,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo92 },  // Inst #649 = CONST_F32
  { 650,	1,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo93 },  // Inst #650 = CONST_F32_S
  { 651,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo94 },  // Inst #651 = CONST_F64
  { 652,	1,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo95 },  // Inst #652 = CONST_F64_S
  { 653,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo96 },  // Inst #653 = CONST_I32
  { 654,	1,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo97 },  // Inst #654 = CONST_I32_S
  { 655,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo98 },  // Inst #655 = CONST_I64
  { 656,	1,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo99 },  // Inst #656 = CONST_I64_S
  { 657,	5,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo100 },  // Inst #657 = CONST_V128_F32x4
  { 658,	4,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo101 },  // Inst #658 = CONST_V128_F32x4_S
  { 659,	3,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo102 },  // Inst #659 = CONST_V128_F64x2
  { 660,	2,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo103 },  // Inst #660 = CONST_V128_F64x2_S
  { 661,	9,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo104 },  // Inst #661 = CONST_V128_I16x8
  { 662,	8,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo105 },  // Inst #662 = CONST_V128_I16x8_S
  { 663,	5,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo106 },  // Inst #663 = CONST_V128_I32x4
  { 664,	4,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo107 },  // Inst #664 = CONST_V128_I32x4_S
  { 665,	3,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo108 },  // Inst #665 = CONST_V128_I64x2
  { 666,	2,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo109 },  // Inst #666 = CONST_V128_I64x2_S
  { 667,	17,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo110 },  // Inst #667 = CONST_V128_I8x16
  { 668,	16,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo111 },  // Inst #668 = CONST_V128_I8x16_S
  { 669,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #669 = COPYSIGN_F32
  { 670,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #670 = COPYSIGN_F32_S
  { 671,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #671 = COPYSIGN_F64
  { 672,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #672 = COPYSIGN_F64_S
  { 673,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo112 },  // Inst #673 = COPY_EXTERNREF
  { 674,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #674 = COPY_EXTERNREF_S
  { 675,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #675 = COPY_F32
  { 676,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #676 = COPY_F32_S
  { 677,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #677 = COPY_F64
  { 678,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #678 = COPY_F64_S
  { 679,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo113 },  // Inst #679 = COPY_FUNCREF
  { 680,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #680 = COPY_FUNCREF_S
  { 681,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #681 = COPY_I32
  { 682,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #682 = COPY_I32_S
  { 683,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo91 },  // Inst #683 = COPY_I64
  { 684,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #684 = COPY_I64_S
  { 685,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #685 = COPY_V128
  { 686,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #686 = COPY_V128_S
  { 687,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #687 = CTZ_I32
  { 688,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #688 = CTZ_I32_S
  { 689,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo91 },  // Inst #689 = CTZ_I64
  { 690,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #690 = CTZ_I64_S
  { 691,	0,	0,	0,	0,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #691 = DEBUG_UNREACHABLE
  { 692,	0,	0,	0,	0,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #692 = DEBUG_UNREACHABLE_S
  { 693,	1,	0,	0,	0,	0|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo83 },  // Inst #693 = DELEGATE
  { 694,	1,	0,	0,	0,	0|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo83 },  // Inst #694 = DELEGATE_S
  { 695,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #695 = DIV_F32
  { 696,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #696 = DIV_F32_S
  { 697,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #697 = DIV_F32x4
  { 698,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #698 = DIV_F32x4_S
  { 699,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #699 = DIV_F64
  { 700,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #700 = DIV_F64_S
  { 701,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #701 = DIV_F64x2
  { 702,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #702 = DIV_F64x2_S
  { 703,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #703 = DIV_S_I32
  { 704,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #704 = DIV_S_I32_S
  { 705,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #705 = DIV_S_I64
  { 706,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #706 = DIV_S_I64_S
  { 707,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #707 = DIV_U_I32
  { 708,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #708 = DIV_U_I32_S
  { 709,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #709 = DIV_U_I64
  { 710,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #710 = DIV_U_I64_S
  { 711,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #711 = DOT
  { 712,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #712 = DOT_S
  { 713,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo114 },  // Inst #713 = DROP_EXTERNREF
  { 714,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #714 = DROP_EXTERNREF_S
  { 715,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo115 },  // Inst #715 = DROP_F32
  { 716,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #716 = DROP_F32_S
  { 717,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo116 },  // Inst #717 = DROP_F64
  { 718,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #718 = DROP_F64_S
  { 719,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo117 },  // Inst #719 = DROP_FUNCREF
  { 720,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #720 = DROP_FUNCREF_S
  { 721,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo85 },  // Inst #721 = DROP_I32
  { 722,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #722 = DROP_I32_S
  { 723,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo87 },  // Inst #723 = DROP_I64
  { 724,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #724 = DROP_I64_S
  { 725,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo118 },  // Inst #725 = DROP_V128
  { 726,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #726 = DROP_V128_S
  { 727,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #727 = ELSE
  { 728,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #728 = ELSE_S
  { 729,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #729 = END
  { 730,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #730 = END_BLOCK
  { 731,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #731 = END_BLOCK_S
  { 732,	0,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #732 = END_FUNCTION
  { 733,	0,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #733 = END_FUNCTION_S
  { 734,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #734 = END_IF
  { 735,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #735 = END_IF_S
  { 736,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #736 = END_LOOP
  { 737,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #737 = END_LOOP_S
  { 738,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #738 = END_S
  { 739,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #739 = END_TRY
  { 740,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #740 = END_TRY_S
  { 741,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #741 = EQZ_I32
  { 742,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #742 = EQZ_I32_S
  { 743,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo119 },  // Inst #743 = EQZ_I64
  { 744,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #744 = EQZ_I64_S
  { 745,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #745 = EQ_F32
  { 746,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #746 = EQ_F32_S
  { 747,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #747 = EQ_F32x4
  { 748,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #748 = EQ_F32x4_S
  { 749,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #749 = EQ_F64
  { 750,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #750 = EQ_F64_S
  { 751,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #751 = EQ_F64x2
  { 752,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #752 = EQ_F64x2_S
  { 753,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #753 = EQ_I16x8
  { 754,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #754 = EQ_I16x8_S
  { 755,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #755 = EQ_I32
  { 756,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #756 = EQ_I32_S
  { 757,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #757 = EQ_I32x4
  { 758,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #758 = EQ_I32x4_S
  { 759,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo122 },  // Inst #759 = EQ_I64
  { 760,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #760 = EQ_I64_S
  { 761,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #761 = EQ_I64x2
  { 762,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #762 = EQ_I64x2_S
  { 763,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #763 = EQ_I8x16
  { 764,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #764 = EQ_I8x16_S
  { 765,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #765 = EXTMUL_HIGH_S_I16x8
  { 766,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #766 = EXTMUL_HIGH_S_I16x8_S
  { 767,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #767 = EXTMUL_HIGH_S_I32x4
  { 768,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #768 = EXTMUL_HIGH_S_I32x4_S
  { 769,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #769 = EXTMUL_HIGH_S_I64x2
  { 770,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #770 = EXTMUL_HIGH_S_I64x2_S
  { 771,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #771 = EXTMUL_HIGH_U_I16x8
  { 772,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #772 = EXTMUL_HIGH_U_I16x8_S
  { 773,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #773 = EXTMUL_HIGH_U_I32x4
  { 774,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #774 = EXTMUL_HIGH_U_I32x4_S
  { 775,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #775 = EXTMUL_HIGH_U_I64x2
  { 776,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #776 = EXTMUL_HIGH_U_I64x2_S
  { 777,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #777 = EXTMUL_LOW_S_I16x8
  { 778,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #778 = EXTMUL_LOW_S_I16x8_S
  { 779,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #779 = EXTMUL_LOW_S_I32x4
  { 780,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #780 = EXTMUL_LOW_S_I32x4_S
  { 781,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #781 = EXTMUL_LOW_S_I64x2
  { 782,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #782 = EXTMUL_LOW_S_I64x2_S
  { 783,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #783 = EXTMUL_LOW_U_I16x8
  { 784,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #784 = EXTMUL_LOW_U_I16x8_S
  { 785,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #785 = EXTMUL_LOW_U_I32x4
  { 786,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #786 = EXTMUL_LOW_U_I32x4_S
  { 787,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #787 = EXTMUL_LOW_U_I64x2
  { 788,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #788 = EXTMUL_LOW_U_I64x2_S
  { 789,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #789 = EXTRACT_LANE_F32x4
  { 790,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #790 = EXTRACT_LANE_F32x4_S
  { 791,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo125 },  // Inst #791 = EXTRACT_LANE_F64x2
  { 792,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #792 = EXTRACT_LANE_F64x2_S
  { 793,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo126 },  // Inst #793 = EXTRACT_LANE_I16x8_s
  { 794,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #794 = EXTRACT_LANE_I16x8_s_S
  { 795,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo126 },  // Inst #795 = EXTRACT_LANE_I16x8_u
  { 796,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #796 = EXTRACT_LANE_I16x8_u_S
  { 797,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo126 },  // Inst #797 = EXTRACT_LANE_I32x4
  { 798,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #798 = EXTRACT_LANE_I32x4_S
  { 799,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo127 },  // Inst #799 = EXTRACT_LANE_I64x2
  { 800,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #800 = EXTRACT_LANE_I64x2_S
  { 801,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo126 },  // Inst #801 = EXTRACT_LANE_I8x16_s
  { 802,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #802 = EXTRACT_LANE_I8x16_s_S
  { 803,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo126 },  // Inst #803 = EXTRACT_LANE_I8x16_u
  { 804,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #804 = EXTRACT_LANE_I8x16_u_S
  { 805,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo128 },  // Inst #805 = F32_CONVERT_S_I32
  { 806,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #806 = F32_CONVERT_S_I32_S
  { 807,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo129 },  // Inst #807 = F32_CONVERT_S_I64
  { 808,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #808 = F32_CONVERT_S_I64_S
  { 809,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo128 },  // Inst #809 = F32_CONVERT_U_I32
  { 810,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #810 = F32_CONVERT_U_I32_S
  { 811,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo129 },  // Inst #811 = F32_CONVERT_U_I64
  { 812,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #812 = F32_CONVERT_U_I64_S
  { 813,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo130 },  // Inst #813 = F32_DEMOTE_F64
  { 814,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #814 = F32_DEMOTE_F64_S
  { 815,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo128 },  // Inst #815 = F32_REINTERPRET_I32
  { 816,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #816 = F32_REINTERPRET_I32_S
  { 817,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo131 },  // Inst #817 = F64_CONVERT_S_I32
  { 818,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #818 = F64_CONVERT_S_I32_S
  { 819,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo132 },  // Inst #819 = F64_CONVERT_S_I64
  { 820,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #820 = F64_CONVERT_S_I64_S
  { 821,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo131 },  // Inst #821 = F64_CONVERT_U_I32
  { 822,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #822 = F64_CONVERT_U_I32_S
  { 823,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo132 },  // Inst #823 = F64_CONVERT_U_I64
  { 824,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #824 = F64_CONVERT_U_I64_S
  { 825,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo133 },  // Inst #825 = F64_PROMOTE_F32
  { 826,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #826 = F64_PROMOTE_F32_S
  { 827,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo132 },  // Inst #827 = F64_REINTERPRET_I64
  { 828,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #828 = F64_REINTERPRET_I64_S
  { 829,	0,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #829 = FALLTHROUGH_RETURN
  { 830,	0,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #830 = FALLTHROUGH_RETURN_S
  { 831,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #831 = FLOOR_F32
  { 832,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #832 = FLOOR_F32_S
  { 833,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #833 = FLOOR_F32x4
  { 834,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #834 = FLOOR_F32x4_S
  { 835,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #835 = FLOOR_F64
  { 836,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #836 = FLOOR_F64_S
  { 837,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #837 = FLOOR_F64x2
  { 838,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #838 = FLOOR_F64x2_S
  { 839,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #839 = FP_TO_SINT_I32_F32
  { 840,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #840 = FP_TO_SINT_I32_F32_S
  { 841,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #841 = FP_TO_SINT_I32_F64
  { 842,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #842 = FP_TO_SINT_I32_F64_S
  { 843,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #843 = FP_TO_SINT_I64_F32
  { 844,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #844 = FP_TO_SINT_I64_F32_S
  { 845,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo137 },  // Inst #845 = FP_TO_SINT_I64_F64
  { 846,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #846 = FP_TO_SINT_I64_F64_S
  { 847,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #847 = FP_TO_UINT_I32_F32
  { 848,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #848 = FP_TO_UINT_I32_F32_S
  { 849,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #849 = FP_TO_UINT_I32_F64
  { 850,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #850 = FP_TO_UINT_I32_F64_S
  { 851,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #851 = FP_TO_UINT_I64_F32
  { 852,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #852 = FP_TO_UINT_I64_F32_S
  { 853,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo137 },  // Inst #853 = FP_TO_UINT_I64_F64
  { 854,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #854 = FP_TO_UINT_I64_F64_S
  { 855,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #855 = GE_F32
  { 856,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #856 = GE_F32_S
  { 857,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #857 = GE_F32x4
  { 858,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #858 = GE_F32x4_S
  { 859,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #859 = GE_F64
  { 860,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #860 = GE_F64_S
  { 861,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #861 = GE_F64x2
  { 862,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #862 = GE_F64x2_S
  { 863,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #863 = GE_S_I16x8
  { 864,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #864 = GE_S_I16x8_S
  { 865,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #865 = GE_S_I32
  { 866,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #866 = GE_S_I32_S
  { 867,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #867 = GE_S_I32x4
  { 868,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #868 = GE_S_I32x4_S
  { 869,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo122 },  // Inst #869 = GE_S_I64
  { 870,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #870 = GE_S_I64_S
  { 871,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #871 = GE_S_I64x2
  { 872,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #872 = GE_S_I64x2_S
  { 873,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #873 = GE_S_I8x16
  { 874,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #874 = GE_S_I8x16_S
  { 875,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #875 = GE_U_I16x8
  { 876,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #876 = GE_U_I16x8_S
  { 877,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #877 = GE_U_I32
  { 878,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #878 = GE_U_I32_S
  { 879,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #879 = GE_U_I32x4
  { 880,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #880 = GE_U_I32x4_S
  { 881,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo122 },  // Inst #881 = GE_U_I64
  { 882,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #882 = GE_U_I64_S
  { 883,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #883 = GE_U_I8x16
  { 884,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #884 = GE_U_I8x16_S
  { 885,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #885 = GLOBAL_GET_EXTERNREF
  { 886,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #886 = GLOBAL_GET_EXTERNREF_S
  { 887,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo140 },  // Inst #887 = GLOBAL_GET_F32
  { 888,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #888 = GLOBAL_GET_F32_S
  { 889,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo141 },  // Inst #889 = GLOBAL_GET_F64
  { 890,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #890 = GLOBAL_GET_F64_S
  { 891,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo142 },  // Inst #891 = GLOBAL_GET_FUNCREF
  { 892,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #892 = GLOBAL_GET_FUNCREF_S
  { 893,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo143 },  // Inst #893 = GLOBAL_GET_I32
  { 894,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #894 = GLOBAL_GET_I32_S
  { 895,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo144 },  // Inst #895 = GLOBAL_GET_I64
  { 896,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #896 = GLOBAL_GET_I64_S
  { 897,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo145 },  // Inst #897 = GLOBAL_GET_V128
  { 898,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #898 = GLOBAL_GET_V128_S
  { 899,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo146 },  // Inst #899 = GLOBAL_SET_EXTERNREF
  { 900,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #900 = GLOBAL_SET_EXTERNREF_S
  { 901,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo147 },  // Inst #901 = GLOBAL_SET_F32
  { 902,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #902 = GLOBAL_SET_F32_S
  { 903,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo148 },  // Inst #903 = GLOBAL_SET_F64
  { 904,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #904 = GLOBAL_SET_F64_S
  { 905,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo149 },  // Inst #905 = GLOBAL_SET_FUNCREF
  { 906,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #906 = GLOBAL_SET_FUNCREF_S
  { 907,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo150 },  // Inst #907 = GLOBAL_SET_I32
  { 908,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #908 = GLOBAL_SET_I32_S
  { 909,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo151 },  // Inst #909 = GLOBAL_SET_I64
  { 910,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #910 = GLOBAL_SET_I64_S
  { 911,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo152 },  // Inst #911 = GLOBAL_SET_V128
  { 912,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #912 = GLOBAL_SET_V128_S
  { 913,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #913 = GT_F32
  { 914,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #914 = GT_F32_S
  { 915,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #915 = GT_F32x4
  { 916,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #916 = GT_F32x4_S
  { 917,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #917 = GT_F64
  { 918,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #918 = GT_F64_S
  { 919,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #919 = GT_F64x2
  { 920,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #920 = GT_F64x2_S
  { 921,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #921 = GT_S_I16x8
  { 922,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #922 = GT_S_I16x8_S
  { 923,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #923 = GT_S_I32
  { 924,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #924 = GT_S_I32_S
  { 925,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #925 = GT_S_I32x4
  { 926,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #926 = GT_S_I32x4_S
  { 927,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo122 },  // Inst #927 = GT_S_I64
  { 928,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #928 = GT_S_I64_S
  { 929,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #929 = GT_S_I64x2
  { 930,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #930 = GT_S_I64x2_S
  { 931,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #931 = GT_S_I8x16
  { 932,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #932 = GT_S_I8x16_S
  { 933,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #933 = GT_U_I16x8
  { 934,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #934 = GT_U_I16x8_S
  { 935,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #935 = GT_U_I32
  { 936,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #936 = GT_U_I32_S
  { 937,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #937 = GT_U_I32x4
  { 938,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #938 = GT_U_I32x4_S
  { 939,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo122 },  // Inst #939 = GT_U_I64
  { 940,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #940 = GT_U_I64_S
  { 941,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #941 = GT_U_I8x16
  { 942,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #942 = GT_U_I8x16_S
  { 943,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #943 = I32_EXTEND16_S_I32
  { 944,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #944 = I32_EXTEND16_S_I32_S
  { 945,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #945 = I32_EXTEND8_S_I32
  { 946,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #946 = I32_EXTEND8_S_I32_S
  { 947,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #947 = I32_REINTERPRET_F32
  { 948,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #948 = I32_REINTERPRET_F32_S
  { 949,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #949 = I32_TRUNC_S_F32
  { 950,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #950 = I32_TRUNC_S_F32_S
  { 951,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #951 = I32_TRUNC_S_F64
  { 952,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #952 = I32_TRUNC_S_F64_S
  { 953,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #953 = I32_TRUNC_S_SAT_F32
  { 954,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #954 = I32_TRUNC_S_SAT_F32_S
  { 955,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #955 = I32_TRUNC_S_SAT_F64
  { 956,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #956 = I32_TRUNC_S_SAT_F64_S
  { 957,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #957 = I32_TRUNC_U_F32
  { 958,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #958 = I32_TRUNC_U_F32_S
  { 959,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #959 = I32_TRUNC_U_F64
  { 960,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #960 = I32_TRUNC_U_F64_S
  { 961,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #961 = I32_TRUNC_U_SAT_F32
  { 962,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #962 = I32_TRUNC_U_SAT_F32_S
  { 963,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #963 = I32_TRUNC_U_SAT_F64
  { 964,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #964 = I32_TRUNC_U_SAT_F64_S
  { 965,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo119 },  // Inst #965 = I32_WRAP_I64
  { 966,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #966 = I32_WRAP_I64_S
  { 967,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo91 },  // Inst #967 = I64_EXTEND16_S_I64
  { 968,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #968 = I64_EXTEND16_S_I64_S
  { 969,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo91 },  // Inst #969 = I64_EXTEND32_S_I64
  { 970,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #970 = I64_EXTEND32_S_I64_S
  { 971,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo91 },  // Inst #971 = I64_EXTEND8_S_I64
  { 972,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #972 = I64_EXTEND8_S_I64_S
  { 973,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo153 },  // Inst #973 = I64_EXTEND_S_I32
  { 974,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #974 = I64_EXTEND_S_I32_S
  { 975,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo153 },  // Inst #975 = I64_EXTEND_U_I32
  { 976,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #976 = I64_EXTEND_U_I32_S
  { 977,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo137 },  // Inst #977 = I64_REINTERPRET_F64
  { 978,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #978 = I64_REINTERPRET_F64_S
  { 979,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #979 = I64_TRUNC_S_F32
  { 980,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #980 = I64_TRUNC_S_F32_S
  { 981,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo137 },  // Inst #981 = I64_TRUNC_S_F64
  { 982,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #982 = I64_TRUNC_S_F64_S
  { 983,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #983 = I64_TRUNC_S_SAT_F32
  { 984,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #984 = I64_TRUNC_S_SAT_F32_S
  { 985,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo137 },  // Inst #985 = I64_TRUNC_S_SAT_F64
  { 986,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #986 = I64_TRUNC_S_SAT_F64_S
  { 987,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #987 = I64_TRUNC_U_F32
  { 988,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #988 = I64_TRUNC_U_F32_S
  { 989,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo137 },  // Inst #989 = I64_TRUNC_U_F64
  { 990,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #990 = I64_TRUNC_U_F64_S
  { 991,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #991 = I64_TRUNC_U_SAT_F32
  { 992,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #992 = I64_TRUNC_U_SAT_F32_S
  { 993,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo137 },  // Inst #993 = I64_TRUNC_U_SAT_F64
  { 994,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #994 = I64_TRUNC_U_SAT_F64_S
  { 995,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo154 },  // Inst #995 = IF
  { 996,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo82 },  // Inst #996 = IF_S
  { 997,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #997 = LANESELECT_I16x8
  { 998,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #998 = LANESELECT_I16x8_S
  { 999,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #999 = LANESELECT_I32x4
  { 1000,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1000 = LANESELECT_I32x4_S
  { 1001,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #1001 = LANESELECT_I64x2
  { 1002,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1002 = LANESELECT_I64x2_S
  { 1003,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #1003 = LANESELECT_I8x16
  { 1004,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1004 = LANESELECT_I8x16_S
  { 1005,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #1005 = LE_F32
  { 1006,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1006 = LE_F32_S
  { 1007,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1007 = LE_F32x4
  { 1008,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1008 = LE_F32x4_S
  { 1009,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #1009 = LE_F64
  { 1010,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1010 = LE_F64_S
  { 1011,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1011 = LE_F64x2
  { 1012,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1012 = LE_F64x2_S
  { 1013,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1013 = LE_S_I16x8
  { 1014,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1014 = LE_S_I16x8_S
  { 1015,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1015 = LE_S_I32
  { 1016,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1016 = LE_S_I32_S
  { 1017,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1017 = LE_S_I32x4
  { 1018,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1018 = LE_S_I32x4_S
  { 1019,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo122 },  // Inst #1019 = LE_S_I64
  { 1020,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1020 = LE_S_I64_S
  { 1021,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1021 = LE_S_I64x2
  { 1022,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1022 = LE_S_I64x2_S
  { 1023,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1023 = LE_S_I8x16
  { 1024,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1024 = LE_S_I8x16_S
  { 1025,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1025 = LE_U_I16x8
  { 1026,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1026 = LE_U_I16x8_S
  { 1027,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1027 = LE_U_I32
  { 1028,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1028 = LE_U_I32_S
  { 1029,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1029 = LE_U_I32x4
  { 1030,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1030 = LE_U_I32x4_S
  { 1031,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo122 },  // Inst #1031 = LE_U_I64
  { 1032,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1032 = LE_U_I64_S
  { 1033,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1033 = LE_U_I8x16
  { 1034,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1034 = LE_U_I8x16_S
  { 1035,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1035 = LOAD16_SPLAT_A32
  { 1036,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1036 = LOAD16_SPLAT_A32_S
  { 1037,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1037 = LOAD16_SPLAT_A64
  { 1038,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1038 = LOAD16_SPLAT_A64_S
  { 1039,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #1039 = LOAD16_S_I32_A32
  { 1040,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1040 = LOAD16_S_I32_A32_S
  { 1041,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1041 = LOAD16_S_I32_A64
  { 1042,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1042 = LOAD16_S_I32_A64_S
  { 1043,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #1043 = LOAD16_S_I64_A32
  { 1044,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1044 = LOAD16_S_I64_A32_S
  { 1045,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #1045 = LOAD16_S_I64_A64
  { 1046,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1046 = LOAD16_S_I64_A64_S
  { 1047,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #1047 = LOAD16_U_I32_A32
  { 1048,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1048 = LOAD16_U_I32_A32_S
  { 1049,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1049 = LOAD16_U_I32_A64
  { 1050,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1050 = LOAD16_U_I32_A64_S
  { 1051,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #1051 = LOAD16_U_I64_A32
  { 1052,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1052 = LOAD16_U_I64_A32_S
  { 1053,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #1053 = LOAD16_U_I64_A64
  { 1054,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1054 = LOAD16_U_I64_A64_S
  { 1055,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1055 = LOAD32_SPLAT_A32
  { 1056,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1056 = LOAD32_SPLAT_A32_S
  { 1057,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1057 = LOAD32_SPLAT_A64
  { 1058,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1058 = LOAD32_SPLAT_A64_S
  { 1059,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #1059 = LOAD32_S_I64_A32
  { 1060,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1060 = LOAD32_S_I64_A32_S
  { 1061,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #1061 = LOAD32_S_I64_A64
  { 1062,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1062 = LOAD32_S_I64_A64_S
  { 1063,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #1063 = LOAD32_U_I64_A32
  { 1064,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1064 = LOAD32_U_I64_A32_S
  { 1065,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #1065 = LOAD32_U_I64_A64
  { 1066,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1066 = LOAD32_U_I64_A64_S
  { 1067,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1067 = LOAD64_SPLAT_A32
  { 1068,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1068 = LOAD64_SPLAT_A32_S
  { 1069,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1069 = LOAD64_SPLAT_A64
  { 1070,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1070 = LOAD64_SPLAT_A64_S
  { 1071,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1071 = LOAD8_SPLAT_A32
  { 1072,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1072 = LOAD8_SPLAT_A32_S
  { 1073,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1073 = LOAD8_SPLAT_A64
  { 1074,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1074 = LOAD8_SPLAT_A64_S
  { 1075,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #1075 = LOAD8_S_I32_A32
  { 1076,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1076 = LOAD8_S_I32_A32_S
  { 1077,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1077 = LOAD8_S_I32_A64
  { 1078,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1078 = LOAD8_S_I32_A64_S
  { 1079,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #1079 = LOAD8_S_I64_A32
  { 1080,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1080 = LOAD8_S_I64_A32_S
  { 1081,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #1081 = LOAD8_S_I64_A64
  { 1082,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1082 = LOAD8_S_I64_A64_S
  { 1083,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #1083 = LOAD8_U_I32_A32
  { 1084,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1084 = LOAD8_U_I32_A32_S
  { 1085,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1085 = LOAD8_U_I32_A64
  { 1086,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1086 = LOAD8_U_I32_A64_S
  { 1087,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #1087 = LOAD8_U_I64_A32
  { 1088,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1088 = LOAD8_U_I64_A32_S
  { 1089,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #1089 = LOAD8_U_I64_A64
  { 1090,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1090 = LOAD8_U_I64_A64_S
  { 1091,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1091 = LOAD_EXTEND_S_I16x8_A32
  { 1092,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1092 = LOAD_EXTEND_S_I16x8_A32_S
  { 1093,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1093 = LOAD_EXTEND_S_I16x8_A64
  { 1094,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1094 = LOAD_EXTEND_S_I16x8_A64_S
  { 1095,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1095 = LOAD_EXTEND_S_I32x4_A32
  { 1096,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1096 = LOAD_EXTEND_S_I32x4_A32_S
  { 1097,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1097 = LOAD_EXTEND_S_I32x4_A64
  { 1098,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1098 = LOAD_EXTEND_S_I32x4_A64_S
  { 1099,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1099 = LOAD_EXTEND_S_I64x2_A32
  { 1100,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1100 = LOAD_EXTEND_S_I64x2_A32_S
  { 1101,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1101 = LOAD_EXTEND_S_I64x2_A64
  { 1102,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1102 = LOAD_EXTEND_S_I64x2_A64_S
  { 1103,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1103 = LOAD_EXTEND_U_I16x8_A32
  { 1104,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1104 = LOAD_EXTEND_U_I16x8_A32_S
  { 1105,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1105 = LOAD_EXTEND_U_I16x8_A64
  { 1106,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1106 = LOAD_EXTEND_U_I16x8_A64_S
  { 1107,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1107 = LOAD_EXTEND_U_I32x4_A32
  { 1108,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1108 = LOAD_EXTEND_U_I32x4_A32_S
  { 1109,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1109 = LOAD_EXTEND_U_I32x4_A64
  { 1110,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1110 = LOAD_EXTEND_U_I32x4_A64_S
  { 1111,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1111 = LOAD_EXTEND_U_I64x2_A32
  { 1112,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1112 = LOAD_EXTEND_U_I64x2_A32_S
  { 1113,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1113 = LOAD_EXTEND_U_I64x2_A64
  { 1114,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1114 = LOAD_EXTEND_U_I64x2_A64_S
  { 1115,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo157 },  // Inst #1115 = LOAD_F32_A32
  { 1116,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1116 = LOAD_F32_A32_S
  { 1117,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo158 },  // Inst #1117 = LOAD_F32_A64
  { 1118,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1118 = LOAD_F32_A64_S
  { 1119,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo159 },  // Inst #1119 = LOAD_F64_A32
  { 1120,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1120 = LOAD_F64_A32_S
  { 1121,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo160 },  // Inst #1121 = LOAD_F64_A64
  { 1122,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1122 = LOAD_F64_A64_S
  { 1123,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #1123 = LOAD_I32_A32
  { 1124,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1124 = LOAD_I32_A32_S
  { 1125,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1125 = LOAD_I32_A64
  { 1126,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1126 = LOAD_I32_A64_S
  { 1127,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #1127 = LOAD_I64_A32
  { 1128,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1128 = LOAD_I64_A32_S
  { 1129,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #1129 = LOAD_I64_A64
  { 1130,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1130 = LOAD_I64_A64_S
  { 1131,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1131 = LOAD_LANE_I16x8_A32
  { 1132,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1132 = LOAD_LANE_I16x8_A32_S
  { 1133,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1133 = LOAD_LANE_I16x8_A64
  { 1134,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo164 },  // Inst #1134 = LOAD_LANE_I16x8_A64_S
  { 1135,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1135 = LOAD_LANE_I32x4_A32
  { 1136,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1136 = LOAD_LANE_I32x4_A32_S
  { 1137,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1137 = LOAD_LANE_I32x4_A64
  { 1138,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo164 },  // Inst #1138 = LOAD_LANE_I32x4_A64_S
  { 1139,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1139 = LOAD_LANE_I64x2_A32
  { 1140,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1140 = LOAD_LANE_I64x2_A32_S
  { 1141,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1141 = LOAD_LANE_I64x2_A64
  { 1142,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo164 },  // Inst #1142 = LOAD_LANE_I64x2_A64_S
  { 1143,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1143 = LOAD_LANE_I8x16_A32
  { 1144,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1144 = LOAD_LANE_I8x16_A32_S
  { 1145,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1145 = LOAD_LANE_I8x16_A64
  { 1146,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo164 },  // Inst #1146 = LOAD_LANE_I8x16_A64_S
  { 1147,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1147 = LOAD_V128_A32
  { 1148,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1148 = LOAD_V128_A32_S
  { 1149,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1149 = LOAD_V128_A64
  { 1150,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1150 = LOAD_V128_A64_S
  { 1151,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1151 = LOAD_ZERO_I32x4_A32
  { 1152,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1152 = LOAD_ZERO_I32x4_A32_S
  { 1153,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1153 = LOAD_ZERO_I32x4_A64
  { 1154,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1154 = LOAD_ZERO_I32x4_A64_S
  { 1155,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1155 = LOAD_ZERO_I64x2_A32
  { 1156,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1156 = LOAD_ZERO_I64x2_A32_S
  { 1157,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1157 = LOAD_ZERO_I64x2_A64
  { 1158,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1158 = LOAD_ZERO_I64x2_A64_S
  { 1159,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1159 = LOCAL_GET_EXTERNREF
  { 1160,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1160 = LOCAL_GET_EXTERNREF_S
  { 1161,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo167 },  // Inst #1161 = LOCAL_GET_F32
  { 1162,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1162 = LOCAL_GET_F32_S
  { 1163,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo168 },  // Inst #1163 = LOCAL_GET_F64
  { 1164,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1164 = LOCAL_GET_F64_S
  { 1165,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo169 },  // Inst #1165 = LOCAL_GET_FUNCREF
  { 1166,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1166 = LOCAL_GET_FUNCREF_S
  { 1167,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo170 },  // Inst #1167 = LOCAL_GET_I32
  { 1168,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1168 = LOCAL_GET_I32_S
  { 1169,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo171 },  // Inst #1169 = LOCAL_GET_I64
  { 1170,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1170 = LOCAL_GET_I64_S
  { 1171,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo172 },  // Inst #1171 = LOCAL_GET_V128
  { 1172,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1172 = LOCAL_GET_V128_S
  { 1173,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo173 },  // Inst #1173 = LOCAL_SET_EXTERNREF
  { 1174,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1174 = LOCAL_SET_EXTERNREF_S
  { 1175,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo174 },  // Inst #1175 = LOCAL_SET_F32
  { 1176,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1176 = LOCAL_SET_F32_S
  { 1177,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo175 },  // Inst #1177 = LOCAL_SET_F64
  { 1178,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1178 = LOCAL_SET_F64_S
  { 1179,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo176 },  // Inst #1179 = LOCAL_SET_FUNCREF
  { 1180,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1180 = LOCAL_SET_FUNCREF_S
  { 1181,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo177 },  // Inst #1181 = LOCAL_SET_I32
  { 1182,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1182 = LOCAL_SET_I32_S
  { 1183,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo178 },  // Inst #1183 = LOCAL_SET_I64
  { 1184,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1184 = LOCAL_SET_I64_S
  { 1185,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo179 },  // Inst #1185 = LOCAL_SET_V128
  { 1186,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1186 = LOCAL_SET_V128_S
  { 1187,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo180 },  // Inst #1187 = LOCAL_TEE_EXTERNREF
  { 1188,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1188 = LOCAL_TEE_EXTERNREF_S
  { 1189,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo181 },  // Inst #1189 = LOCAL_TEE_F32
  { 1190,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1190 = LOCAL_TEE_F32_S
  { 1191,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo182 },  // Inst #1191 = LOCAL_TEE_F64
  { 1192,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1192 = LOCAL_TEE_F64_S
  { 1193,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo183 },  // Inst #1193 = LOCAL_TEE_FUNCREF
  { 1194,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1194 = LOCAL_TEE_FUNCREF_S
  { 1195,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo184 },  // Inst #1195 = LOCAL_TEE_I32
  { 1196,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1196 = LOCAL_TEE_I32_S
  { 1197,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo185 },  // Inst #1197 = LOCAL_TEE_I64
  { 1198,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1198 = LOCAL_TEE_I64_S
  { 1199,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo186 },  // Inst #1199 = LOCAL_TEE_V128
  { 1200,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1200 = LOCAL_TEE_V128_S
  { 1201,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo82 },  // Inst #1201 = LOOP
  { 1202,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo82 },  // Inst #1202 = LOOP_S
  { 1203,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #1203 = LT_F32
  { 1204,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1204 = LT_F32_S
  { 1205,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1205 = LT_F32x4
  { 1206,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1206 = LT_F32x4_S
  { 1207,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #1207 = LT_F64
  { 1208,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1208 = LT_F64_S
  { 1209,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1209 = LT_F64x2
  { 1210,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1210 = LT_F64x2_S
  { 1211,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1211 = LT_S_I16x8
  { 1212,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1212 = LT_S_I16x8_S
  { 1213,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1213 = LT_S_I32
  { 1214,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1214 = LT_S_I32_S
  { 1215,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1215 = LT_S_I32x4
  { 1216,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1216 = LT_S_I32x4_S
  { 1217,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo122 },  // Inst #1217 = LT_S_I64
  { 1218,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1218 = LT_S_I64_S
  { 1219,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1219 = LT_S_I64x2
  { 1220,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1220 = LT_S_I64x2_S
  { 1221,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1221 = LT_S_I8x16
  { 1222,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1222 = LT_S_I8x16_S
  { 1223,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1223 = LT_U_I16x8
  { 1224,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1224 = LT_U_I16x8_S
  { 1225,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1225 = LT_U_I32
  { 1226,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1226 = LT_U_I32_S
  { 1227,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1227 = LT_U_I32x4
  { 1228,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1228 = LT_U_I32x4_S
  { 1229,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo122 },  // Inst #1229 = LT_U_I64
  { 1230,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1230 = LT_U_I64_S
  { 1231,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1231 = LT_U_I8x16
  { 1232,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1232 = LT_U_I8x16_S
  { 1233,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #1233 = MADD_F32x4
  { 1234,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1234 = MADD_F32x4_S
  { 1235,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #1235 = MADD_F64x2
  { 1236,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1236 = MADD_F64x2_S
  { 1237,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #1237 = MAX_F32
  { 1238,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1238 = MAX_F32_S
  { 1239,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1239 = MAX_F32x4
  { 1240,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1240 = MAX_F32x4_S
  { 1241,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1241 = MAX_F64
  { 1242,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1242 = MAX_F64_S
  { 1243,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1243 = MAX_F64x2
  { 1244,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1244 = MAX_F64x2_S
  { 1245,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1245 = MAX_S_I16x8
  { 1246,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1246 = MAX_S_I16x8_S
  { 1247,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1247 = MAX_S_I32x4
  { 1248,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1248 = MAX_S_I32x4_S
  { 1249,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1249 = MAX_S_I8x16
  { 1250,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1250 = MAX_S_I8x16_S
  { 1251,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1251 = MAX_U_I16x8
  { 1252,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1252 = MAX_U_I16x8_S
  { 1253,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1253 = MAX_U_I32x4
  { 1254,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1254 = MAX_U_I32x4_S
  { 1255,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1255 = MAX_U_I8x16
  { 1256,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1256 = MAX_U_I8x16_S
  { 1257,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #1257 = MEMORY_ATOMIC_NOTIFY_A32
  { 1258,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1258 = MEMORY_ATOMIC_NOTIFY_A32_S
  { 1259,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #1259 = MEMORY_ATOMIC_NOTIFY_A64
  { 1260,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1260 = MEMORY_ATOMIC_NOTIFY_A64_S
  { 1261,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo187 },  // Inst #1261 = MEMORY_ATOMIC_WAIT32_A32
  { 1262,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1262 = MEMORY_ATOMIC_WAIT32_A32_S
  { 1263,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo188 },  // Inst #1263 = MEMORY_ATOMIC_WAIT32_A64
  { 1264,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1264 = MEMORY_ATOMIC_WAIT32_A64_S
  { 1265,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo189 },  // Inst #1265 = MEMORY_ATOMIC_WAIT64_A32
  { 1266,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1266 = MEMORY_ATOMIC_WAIT64_A32_S
  { 1267,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo190 },  // Inst #1267 = MEMORY_ATOMIC_WAIT64_A64
  { 1268,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1268 = MEMORY_ATOMIC_WAIT64_A64_S
  { 1269,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #1269 = MIN_F32
  { 1270,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1270 = MIN_F32_S
  { 1271,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1271 = MIN_F32x4
  { 1272,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1272 = MIN_F32x4_S
  { 1273,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1273 = MIN_F64
  { 1274,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1274 = MIN_F64_S
  { 1275,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1275 = MIN_F64x2
  { 1276,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1276 = MIN_F64x2_S
  { 1277,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1277 = MIN_S_I16x8
  { 1278,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1278 = MIN_S_I16x8_S
  { 1279,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1279 = MIN_S_I32x4
  { 1280,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1280 = MIN_S_I32x4_S
  { 1281,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1281 = MIN_S_I8x16
  { 1282,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1282 = MIN_S_I8x16_S
  { 1283,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1283 = MIN_U_I16x8
  { 1284,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1284 = MIN_U_I16x8_S
  { 1285,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1285 = MIN_U_I32x4
  { 1286,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1286 = MIN_U_I32x4_S
  { 1287,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1287 = MIN_U_I8x16
  { 1288,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1288 = MIN_U_I8x16_S
  { 1289,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #1289 = MUL_F32
  { 1290,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1290 = MUL_F32_S
  { 1291,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1291 = MUL_F32x4
  { 1292,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1292 = MUL_F32x4_S
  { 1293,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1293 = MUL_F64
  { 1294,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1294 = MUL_F64_S
  { 1295,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1295 = MUL_F64x2
  { 1296,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1296 = MUL_F64x2_S
  { 1297,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1297 = MUL_I16x8
  { 1298,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1298 = MUL_I16x8_S
  { 1299,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1299 = MUL_I32
  { 1300,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1300 = MUL_I32_S
  { 1301,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1301 = MUL_I32x4
  { 1302,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1302 = MUL_I32x4_S
  { 1303,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1303 = MUL_I64
  { 1304,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1304 = MUL_I64_S
  { 1305,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1305 = MUL_I64x2
  { 1306,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1306 = MUL_I64x2_S
  { 1307,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1307 = NARROW_S_I16x8
  { 1308,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1308 = NARROW_S_I16x8_S
  { 1309,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1309 = NARROW_S_I8x16
  { 1310,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1310 = NARROW_S_I8x16_S
  { 1311,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1311 = NARROW_U_I16x8
  { 1312,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1312 = NARROW_U_I16x8_S
  { 1313,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1313 = NARROW_U_I8x16
  { 1314,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1314 = NARROW_U_I8x16_S
  { 1315,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #1315 = NEAREST_F32
  { 1316,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1316 = NEAREST_F32_S
  { 1317,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1317 = NEAREST_F32x4
  { 1318,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1318 = NEAREST_F32x4_S
  { 1319,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1319 = NEAREST_F64
  { 1320,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1320 = NEAREST_F64_S
  { 1321,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1321 = NEAREST_F64x2
  { 1322,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1322 = NEAREST_F64x2_S
  { 1323,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #1323 = NEG_F32
  { 1324,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1324 = NEG_F32_S
  { 1325,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1325 = NEG_F32x4
  { 1326,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1326 = NEG_F32x4_S
  { 1327,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1327 = NEG_F64
  { 1328,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1328 = NEG_F64_S
  { 1329,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1329 = NEG_F64x2
  { 1330,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1330 = NEG_F64x2_S
  { 1331,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1331 = NEG_I16x8
  { 1332,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1332 = NEG_I16x8_S
  { 1333,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1333 = NEG_I32x4
  { 1334,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1334 = NEG_I32x4_S
  { 1335,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1335 = NEG_I64x2
  { 1336,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1336 = NEG_I64x2_S
  { 1337,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1337 = NEG_I8x16
  { 1338,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1338 = NEG_I8x16_S
  { 1339,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #1339 = NE_F32
  { 1340,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1340 = NE_F32_S
  { 1341,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1341 = NE_F32x4
  { 1342,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1342 = NE_F32x4_S
  { 1343,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #1343 = NE_F64
  { 1344,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1344 = NE_F64_S
  { 1345,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1345 = NE_F64x2
  { 1346,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1346 = NE_F64x2_S
  { 1347,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1347 = NE_I16x8
  { 1348,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1348 = NE_I16x8_S
  { 1349,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1349 = NE_I32
  { 1350,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1350 = NE_I32_S
  { 1351,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1351 = NE_I32x4
  { 1352,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1352 = NE_I32x4_S
  { 1353,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo122 },  // Inst #1353 = NE_I64
  { 1354,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1354 = NE_I64_S
  { 1355,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1355 = NE_I64x2
  { 1356,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1356 = NE_I64x2_S
  { 1357,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1357 = NE_I8x16
  { 1358,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1358 = NE_I8x16_S
  { 1359,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #1359 = NMADD_F32x4
  { 1360,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1360 = NMADD_F32x4_S
  { 1361,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #1361 = NMADD_F64x2
  { 1362,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1362 = NMADD_F64x2_S
  { 1363,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1363 = NOP
  { 1364,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1364 = NOP_S
  { 1365,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1365 = NOT
  { 1366,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1366 = NOT_S
  { 1367,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1367 = OR
  { 1368,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1368 = OR_I32
  { 1369,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1369 = OR_I32_S
  { 1370,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1370 = OR_I64
  { 1371,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1371 = OR_I64_S
  { 1372,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1372 = OR_S
  { 1373,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1373 = PMAX_F32x4
  { 1374,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1374 = PMAX_F32x4_S
  { 1375,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1375 = PMAX_F64x2
  { 1376,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1376 = PMAX_F64x2_S
  { 1377,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1377 = PMIN_F32x4
  { 1378,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1378 = PMIN_F32x4_S
  { 1379,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1379 = PMIN_F64x2
  { 1380,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1380 = PMIN_F64x2_S
  { 1381,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #1381 = POPCNT_I32
  { 1382,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1382 = POPCNT_I32_S
  { 1383,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo91 },  // Inst #1383 = POPCNT_I64
  { 1384,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1384 = POPCNT_I64_S
  { 1385,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1385 = POPCNT_I8x16
  { 1386,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1386 = POPCNT_I8x16_S
  { 1387,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1387 = Q15MULR_SAT_S_I16x8
  { 1388,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1388 = Q15MULR_SAT_S_I16x8_S
  { 1389,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo191 },  // Inst #1389 = REF_IS_NULL_EXTERNREF
  { 1390,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1390 = REF_IS_NULL_EXTERNREF_S
  { 1391,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo192 },  // Inst #1391 = REF_IS_NULL_FUNCREF
  { 1392,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1392 = REF_IS_NULL_FUNCREF_S
  { 1393,	1,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo114 },  // Inst #1393 = REF_NULL_EXTERNREF
  { 1394,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1394 = REF_NULL_EXTERNREF_S
  { 1395,	1,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo117 },  // Inst #1395 = REF_NULL_FUNCREF
  { 1396,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1396 = REF_NULL_FUNCREF_S
  { 1397,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1397 = RELAXED_DOT
  { 1398,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #1398 = RELAXED_DOT_ADD
  { 1399,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1399 = RELAXED_DOT_ADD_S
  { 1400,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #1400 = RELAXED_DOT_BFLOAT
  { 1401,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1401 = RELAXED_DOT_BFLOAT_S
  { 1402,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1402 = RELAXED_DOT_S
  { 1403,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1403 = RELAXED_Q15MULR_S_I16x8
  { 1404,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1404 = RELAXED_Q15MULR_S_I16x8_S
  { 1405,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1405 = RELAXED_SWIZZLE
  { 1406,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1406 = RELAXED_SWIZZLE_S
  { 1407,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1407 = REM_S_I32
  { 1408,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1408 = REM_S_I32_S
  { 1409,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1409 = REM_S_I64
  { 1410,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1410 = REM_S_I64_S
  { 1411,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1411 = REM_U_I32
  { 1412,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1412 = REM_U_I32_S
  { 1413,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1413 = REM_U_I64
  { 1414,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1414 = REM_U_I64_S
  { 1415,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo193 },  // Inst #1415 = REPLACE_LANE_F32x4
  { 1416,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #1416 = REPLACE_LANE_F32x4_S
  { 1417,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo194 },  // Inst #1417 = REPLACE_LANE_F64x2
  { 1418,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #1418 = REPLACE_LANE_F64x2_S
  { 1419,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo195 },  // Inst #1419 = REPLACE_LANE_I16x8
  { 1420,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #1420 = REPLACE_LANE_I16x8_S
  { 1421,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo195 },  // Inst #1421 = REPLACE_LANE_I32x4
  { 1422,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #1422 = REPLACE_LANE_I32x4_S
  { 1423,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo196 },  // Inst #1423 = REPLACE_LANE_I64x2
  { 1424,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #1424 = REPLACE_LANE_I64x2_S
  { 1425,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo195 },  // Inst #1425 = REPLACE_LANE_I8x16
  { 1426,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #1426 = REPLACE_LANE_I8x16_S
  { 1427,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1427 = RETHROW
  { 1428,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1428 = RETHROW_S
  { 1429,	0,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1429 = RETURN
  { 1430,	0,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1430 = RETURN_S
  { 1431,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo45 },  // Inst #1431 = RET_CALL
  { 1432,	2,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo88 },  // Inst #1432 = RET_CALL_INDIRECT
  { 1433,	2,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo88 },  // Inst #1433 = RET_CALL_INDIRECT_S
  { 1434,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo45 },  // Inst #1434 = RET_CALL_S
  { 1435,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1435 = ROTL_I32
  { 1436,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1436 = ROTL_I32_S
  { 1437,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1437 = ROTL_I64
  { 1438,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1438 = ROTL_I64_S
  { 1439,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1439 = ROTR_I32
  { 1440,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1440 = ROTR_I32_S
  { 1441,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1441 = ROTR_I64
  { 1442,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1442 = ROTR_I64_S
  { 1443,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo197 },  // Inst #1443 = SELECT_EXTERNREF
  { 1444,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1444 = SELECT_EXTERNREF_S
  { 1445,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo198 },  // Inst #1445 = SELECT_F32
  { 1446,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1446 = SELECT_F32_S
  { 1447,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo199 },  // Inst #1447 = SELECT_F64
  { 1448,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1448 = SELECT_F64_S
  { 1449,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo200 },  // Inst #1449 = SELECT_FUNCREF
  { 1450,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1450 = SELECT_FUNCREF_S
  { 1451,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo201 },  // Inst #1451 = SELECT_I32
  { 1452,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1452 = SELECT_I32_S
  { 1453,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo202 },  // Inst #1453 = SELECT_I64
  { 1454,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1454 = SELECT_I64_S
  { 1455,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo203 },  // Inst #1455 = SELECT_V128
  { 1456,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1456 = SELECT_V128_S
  { 1457,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1457 = SHL_I16x8
  { 1458,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1458 = SHL_I16x8_S
  { 1459,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1459 = SHL_I32
  { 1460,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1460 = SHL_I32_S
  { 1461,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1461 = SHL_I32x4
  { 1462,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1462 = SHL_I32x4_S
  { 1463,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1463 = SHL_I64
  { 1464,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1464 = SHL_I64_S
  { 1465,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1465 = SHL_I64x2
  { 1466,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1466 = SHL_I64x2_S
  { 1467,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1467 = SHL_I8x16
  { 1468,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1468 = SHL_I8x16_S
  { 1469,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1469 = SHR_S_I16x8
  { 1470,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1470 = SHR_S_I16x8_S
  { 1471,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1471 = SHR_S_I32
  { 1472,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1472 = SHR_S_I32_S
  { 1473,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1473 = SHR_S_I32x4
  { 1474,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1474 = SHR_S_I32x4_S
  { 1475,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1475 = SHR_S_I64
  { 1476,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1476 = SHR_S_I64_S
  { 1477,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1477 = SHR_S_I64x2
  { 1478,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1478 = SHR_S_I64x2_S
  { 1479,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1479 = SHR_S_I8x16
  { 1480,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1480 = SHR_S_I8x16_S
  { 1481,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1481 = SHR_U_I16x8
  { 1482,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1482 = SHR_U_I16x8_S
  { 1483,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1483 = SHR_U_I32
  { 1484,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1484 = SHR_U_I32_S
  { 1485,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1485 = SHR_U_I32x4
  { 1486,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1486 = SHR_U_I32x4_S
  { 1487,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1487 = SHR_U_I64
  { 1488,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1488 = SHR_U_I64_S
  { 1489,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1489 = SHR_U_I64x2
  { 1490,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1490 = SHR_U_I64x2_S
  { 1491,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1491 = SHR_U_I8x16
  { 1492,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1492 = SHR_U_I8x16_S
  { 1493,	19,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo205 },  // Inst #1493 = SHUFFLE
  { 1494,	16,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo111 },  // Inst #1494 = SHUFFLE_S
  { 1495,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1495 = SIMD_RELAXED_FMAX_F32x4
  { 1496,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1496 = SIMD_RELAXED_FMAX_F32x4_S
  { 1497,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1497 = SIMD_RELAXED_FMAX_F64x2
  { 1498,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1498 = SIMD_RELAXED_FMAX_F64x2_S
  { 1499,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1499 = SIMD_RELAXED_FMIN_F32x4
  { 1500,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1500 = SIMD_RELAXED_FMIN_F32x4_S
  { 1501,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1501 = SIMD_RELAXED_FMIN_F64x2
  { 1502,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1502 = SIMD_RELAXED_FMIN_F64x2_S
  { 1503,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1503 = SPLAT_F32x4
  { 1504,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1504 = SPLAT_F32x4_S
  { 1505,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo207 },  // Inst #1505 = SPLAT_F64x2
  { 1506,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1506 = SPLAT_F64x2_S
  { 1507,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo208 },  // Inst #1507 = SPLAT_I16x8
  { 1508,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1508 = SPLAT_I16x8_S
  { 1509,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo208 },  // Inst #1509 = SPLAT_I32x4
  { 1510,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1510 = SPLAT_I32x4_S
  { 1511,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo209 },  // Inst #1511 = SPLAT_I64x2
  { 1512,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1512 = SPLAT_I64x2_S
  { 1513,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo208 },  // Inst #1513 = SPLAT_I8x16
  { 1514,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1514 = SPLAT_I8x16_S
  { 1515,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #1515 = SQRT_F32
  { 1516,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1516 = SQRT_F32_S
  { 1517,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1517 = SQRT_F32x4
  { 1518,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1518 = SQRT_F32x4_S
  { 1519,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1519 = SQRT_F64
  { 1520,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1520 = SQRT_F64_S
  { 1521,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1521 = SQRT_F64x2
  { 1522,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1522 = SQRT_F64x2_S
  { 1523,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #1523 = STORE16_I32_A32
  { 1524,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1524 = STORE16_I32_A32_S
  { 1525,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #1525 = STORE16_I32_A64
  { 1526,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1526 = STORE16_I32_A64_S
  { 1527,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1527 = STORE16_I64_A32
  { 1528,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1528 = STORE16_I64_A32_S
  { 1529,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo80 },  // Inst #1529 = STORE16_I64_A64
  { 1530,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1530 = STORE16_I64_A64_S
  { 1531,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1531 = STORE32_I64_A32
  { 1532,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1532 = STORE32_I64_A32_S
  { 1533,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo80 },  // Inst #1533 = STORE32_I64_A64
  { 1534,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1534 = STORE32_I64_A64_S
  { 1535,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #1535 = STORE8_I32_A32
  { 1536,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1536 = STORE8_I32_A32_S
  { 1537,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #1537 = STORE8_I32_A64
  { 1538,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1538 = STORE8_I32_A64_S
  { 1539,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1539 = STORE8_I64_A32
  { 1540,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1540 = STORE8_I64_A32_S
  { 1541,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo80 },  // Inst #1541 = STORE8_I64_A64
  { 1542,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1542 = STORE8_I64_A64_S
  { 1543,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo210 },  // Inst #1543 = STORE_F32_A32
  { 1544,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1544 = STORE_F32_A32_S
  { 1545,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo211 },  // Inst #1545 = STORE_F32_A64
  { 1546,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1546 = STORE_F32_A64_S
  { 1547,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo212 },  // Inst #1547 = STORE_F64_A32
  { 1548,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1548 = STORE_F64_A32_S
  { 1549,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo213 },  // Inst #1549 = STORE_F64_A64
  { 1550,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1550 = STORE_F64_A64_S
  { 1551,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #1551 = STORE_I32_A32
  { 1552,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1552 = STORE_I32_A32_S
  { 1553,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #1553 = STORE_I32_A64
  { 1554,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1554 = STORE_I32_A64_S
  { 1555,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1555 = STORE_I64_A32
  { 1556,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1556 = STORE_I64_A32_S
  { 1557,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo80 },  // Inst #1557 = STORE_I64_A64
  { 1558,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1558 = STORE_I64_A64_S
  { 1559,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo214 },  // Inst #1559 = STORE_LANE_I16x8_A32
  { 1560,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1560 = STORE_LANE_I16x8_A32_S
  { 1561,	6,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1561 = STORE_LANE_I16x8_A64
  { 1562,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo164 },  // Inst #1562 = STORE_LANE_I16x8_A64_S
  { 1563,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo214 },  // Inst #1563 = STORE_LANE_I32x4_A32
  { 1564,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1564 = STORE_LANE_I32x4_A32_S
  { 1565,	6,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1565 = STORE_LANE_I32x4_A64
  { 1566,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo164 },  // Inst #1566 = STORE_LANE_I32x4_A64_S
  { 1567,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo214 },  // Inst #1567 = STORE_LANE_I64x2_A32
  { 1568,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1568 = STORE_LANE_I64x2_A32_S
  { 1569,	6,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1569 = STORE_LANE_I64x2_A64
  { 1570,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo164 },  // Inst #1570 = STORE_LANE_I64x2_A64_S
  { 1571,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo214 },  // Inst #1571 = STORE_LANE_I8x16_A32
  { 1572,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1572 = STORE_LANE_I8x16_A32_S
  { 1573,	6,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1573 = STORE_LANE_I8x16_A64
  { 1574,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo164 },  // Inst #1574 = STORE_LANE_I8x16_A64_S
  { 1575,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo215 },  // Inst #1575 = STORE_V128_A32
  { 1576,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1576 = STORE_V128_A32_S
  { 1577,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo216 },  // Inst #1577 = STORE_V128_A64
  { 1578,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1578 = STORE_V128_A64_S
  { 1579,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #1579 = SUB_F32
  { 1580,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1580 = SUB_F32_S
  { 1581,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1581 = SUB_F32x4
  { 1582,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1582 = SUB_F32x4_S
  { 1583,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1583 = SUB_F64
  { 1584,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1584 = SUB_F64_S
  { 1585,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1585 = SUB_F64x2
  { 1586,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1586 = SUB_F64x2_S
  { 1587,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1587 = SUB_I16x8
  { 1588,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1588 = SUB_I16x8_S
  { 1589,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1589 = SUB_I32
  { 1590,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1590 = SUB_I32_S
  { 1591,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1591 = SUB_I32x4
  { 1592,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1592 = SUB_I32x4_S
  { 1593,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1593 = SUB_I64
  { 1594,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1594 = SUB_I64_S
  { 1595,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1595 = SUB_I64x2
  { 1596,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1596 = SUB_I64x2_S
  { 1597,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1597 = SUB_I8x16
  { 1598,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1598 = SUB_I8x16_S
  { 1599,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1599 = SUB_SAT_S_I16x8
  { 1600,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1600 = SUB_SAT_S_I16x8_S
  { 1601,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1601 = SUB_SAT_S_I8x16
  { 1602,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1602 = SUB_SAT_S_I8x16_S
  { 1603,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1603 = SUB_SAT_U_I16x8
  { 1604,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1604 = SUB_SAT_U_I16x8_S
  { 1605,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1605 = SUB_SAT_U_I8x16
  { 1606,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1606 = SUB_SAT_U_I8x16_S
  { 1607,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1607 = SWIZZLE
  { 1608,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1608 = SWIZZLE_S
  { 1609,	5,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo217 },  // Inst #1609 = TABLE_COPY
  { 1610,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo218 },  // Inst #1610 = TABLE_COPY_S
  { 1611,	4,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo219 },  // Inst #1611 = TABLE_FILL_EXTERNREF
  { 1612,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo220 },  // Inst #1612 = TABLE_FILL_EXTERNREF_S
  { 1613,	4,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo221 },  // Inst #1613 = TABLE_FILL_FUNCREF
  { 1614,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo220 },  // Inst #1614 = TABLE_FILL_FUNCREF_S
  { 1615,	3,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo222 },  // Inst #1615 = TABLE_GET_EXTERNREF
  { 1616,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo220 },  // Inst #1616 = TABLE_GET_EXTERNREF_S
  { 1617,	3,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo223 },  // Inst #1617 = TABLE_GET_FUNCREF
  { 1618,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo220 },  // Inst #1618 = TABLE_GET_FUNCREF_S
  { 1619,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo224 },  // Inst #1619 = TABLE_GROW_EXTERNREF
  { 1620,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo220 },  // Inst #1620 = TABLE_GROW_EXTERNREF_S
  { 1621,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo225 },  // Inst #1621 = TABLE_GROW_FUNCREF
  { 1622,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo220 },  // Inst #1622 = TABLE_GROW_FUNCREF_S
  { 1623,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo226 },  // Inst #1623 = TABLE_SET_EXTERNREF
  { 1624,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo220 },  // Inst #1624 = TABLE_SET_EXTERNREF_S
  { 1625,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo227 },  // Inst #1625 = TABLE_SET_FUNCREF
  { 1626,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo220 },  // Inst #1626 = TABLE_SET_FUNCREF_S
  { 1627,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo228 },  // Inst #1627 = TABLE_SIZE
  { 1628,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo220 },  // Inst #1628 = TABLE_SIZE_S
  { 1629,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo229 },  // Inst #1629 = TEE_EXTERNREF
  { 1630,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1630 = TEE_EXTERNREF_S
  { 1631,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #1631 = TEE_F32
  { 1632,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1632 = TEE_F32_S
  { 1633,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1633 = TEE_F64
  { 1634,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1634 = TEE_F64_S
  { 1635,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo230 },  // Inst #1635 = TEE_FUNCREF
  { 1636,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1636 = TEE_FUNCREF_S
  { 1637,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1637 = TEE_I32
  { 1638,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1638 = TEE_I32_S
  { 1639,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1639 = TEE_I64
  { 1640,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1640 = TEE_I64_S
  { 1641,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1641 = TEE_V128
  { 1642,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1642 = TEE_V128_S
  { 1643,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo89 },  // Inst #1643 = THROW
  { 1644,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo89 },  // Inst #1644 = THROW_S
  { 1645,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #1645 = TRUNC_F32
  { 1646,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1646 = TRUNC_F32_S
  { 1647,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1647 = TRUNC_F32x4
  { 1648,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1648 = TRUNC_F32x4_S
  { 1649,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1649 = TRUNC_F64
  { 1650,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1650 = TRUNC_F64_S
  { 1651,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1651 = TRUNC_F64x2
  { 1652,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1652 = TRUNC_F64x2_S
  { 1653,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo82 },  // Inst #1653 = TRY
  { 1654,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo82 },  // Inst #1654 = TRY_S
  { 1655,	0,	0,	0,	0,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1655 = UNREACHABLE
  { 1656,	0,	0,	0,	0,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1656 = UNREACHABLE_S
  { 1657,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1657 = XOR
  { 1658,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #1658 = XOR_I32
  { 1659,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1659 = XOR_I32_S
  { 1660,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo54 },  // Inst #1660 = XOR_I64
  { 1661,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1661 = XOR_I64_S
  { 1662,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1662 = XOR_S
  { 1663,	3,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo231 },  // Inst #1663 = anonymous_4396MEMORY_GROW_A32
  { 1664,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1664 = anonymous_4396MEMORY_GROW_A32_S
  { 1665,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo60 },  // Inst #1665 = anonymous_4396MEMORY_SIZE_A32
  { 1666,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1666 = anonymous_4396MEMORY_SIZE_A32_S
  { 1667,	3,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo232 },  // Inst #1667 = anonymous_4397MEMORY_GROW_A64
  { 1668,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1668 = anonymous_4397MEMORY_GROW_A64_S
  { 1669,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo61 },  // Inst #1669 = anonymous_4397MEMORY_SIZE_A64
  { 1670,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1670 = anonymous_4397MEMORY_SIZE_A64_S
  { 1671,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo97 },  // Inst #1671 = anonymous_6249DATA_DROP
  { 1672,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo97 },  // Inst #1672 = anonymous_6249DATA_DROP_S
  { 1673,	5,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo233 },  // Inst #1673 = anonymous_6249MEMORY_COPY_A32
  { 1674,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo234 },  // Inst #1674 = anonymous_6249MEMORY_COPY_A32_S
  { 1675,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo235 },  // Inst #1675 = anonymous_6249MEMORY_FILL_A32
  { 1676,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo97 },  // Inst #1676 = anonymous_6249MEMORY_FILL_A32_S
  { 1677,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo233 },  // Inst #1677 = anonymous_6249MEMORY_INIT_A32
  { 1678,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo234 },  // Inst #1678 = anonymous_6249MEMORY_INIT_A32_S
  { 1679,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo97 },  // Inst #1679 = anonymous_6250DATA_DROP
  { 1680,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo97 },  // Inst #1680 = anonymous_6250DATA_DROP_S
  { 1681,	5,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo236 },  // Inst #1681 = anonymous_6250MEMORY_COPY_A64
  { 1682,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo234 },  // Inst #1682 = anonymous_6250MEMORY_COPY_A64_S
  { 1683,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo237 },  // Inst #1683 = anonymous_6250MEMORY_FILL_A64
  { 1684,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo97 },  // Inst #1684 = anonymous_6250MEMORY_FILL_A64_S
  { 1685,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo238 },  // Inst #1685 = anonymous_6250MEMORY_INIT_A64
  { 1686,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo234 },  // Inst #1686 = anonymous_6250MEMORY_INIT_A64_S
  { 1687,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1687 = convert_low_s_F64x2
  { 1688,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1688 = convert_low_s_F64x2_S
  { 1689,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1689 = convert_low_u_F64x2
  { 1690,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1690 = convert_low_u_F64x2_S
  { 1691,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1691 = demote_zero_F32x4
  { 1692,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1692 = demote_zero_F32x4_S
  { 1693,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1693 = extend_high_s_I16x8
  { 1694,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1694 = extend_high_s_I16x8_S
  { 1695,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1695 = extend_high_s_I32x4
  { 1696,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1696 = extend_high_s_I32x4_S
  { 1697,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1697 = extend_high_s_I64x2
  { 1698,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1698 = extend_high_s_I64x2_S
  { 1699,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1699 = extend_high_u_I16x8
  { 1700,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1700 = extend_high_u_I16x8_S
  { 1701,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1701 = extend_high_u_I32x4
  { 1702,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1702 = extend_high_u_I32x4_S
  { 1703,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1703 = extend_high_u_I64x2
  { 1704,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1704 = extend_high_u_I64x2_S
  { 1705,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1705 = extend_low_s_I16x8
  { 1706,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1706 = extend_low_s_I16x8_S
  { 1707,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1707 = extend_low_s_I32x4
  { 1708,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1708 = extend_low_s_I32x4_S
  { 1709,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1709 = extend_low_s_I64x2
  { 1710,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1710 = extend_low_s_I64x2_S
  { 1711,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1711 = extend_low_u_I16x8
  { 1712,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1712 = extend_low_u_I16x8_S
  { 1713,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1713 = extend_low_u_I32x4
  { 1714,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1714 = extend_low_u_I32x4_S
  { 1715,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1715 = extend_low_u_I64x2
  { 1716,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1716 = extend_low_u_I64x2_S
  { 1717,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1717 = fp_to_sint_I32x4
  { 1718,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1718 = fp_to_sint_I32x4_S
  { 1719,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1719 = fp_to_uint_I32x4
  { 1720,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1720 = fp_to_uint_I32x4_S
  { 1721,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1721 = int_wasm_extadd_pairwise_signed_I16x8
  { 1722,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1722 = int_wasm_extadd_pairwise_signed_I16x8_S
  { 1723,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1723 = int_wasm_extadd_pairwise_signed_I32x4
  { 1724,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1724 = int_wasm_extadd_pairwise_signed_I32x4_S
  { 1725,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1725 = int_wasm_extadd_pairwise_unsigned_I16x8
  { 1726,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1726 = int_wasm_extadd_pairwise_unsigned_I16x8_S
  { 1727,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1727 = int_wasm_extadd_pairwise_unsigned_I32x4
  { 1728,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1728 = int_wasm_extadd_pairwise_unsigned_I32x4_S
  { 1729,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1729 = int_wasm_relaxed_trunc_signed_I32x4
  { 1730,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1730 = int_wasm_relaxed_trunc_signed_I32x4_S
  { 1731,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1731 = int_wasm_relaxed_trunc_signed_zero_I32x4
  { 1732,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1732 = int_wasm_relaxed_trunc_signed_zero_I32x4_S
  { 1733,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1733 = int_wasm_relaxed_trunc_unsigned_I32x4
  { 1734,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1734 = int_wasm_relaxed_trunc_unsigned_I32x4_S
  { 1735,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1735 = int_wasm_relaxed_trunc_unsigned_zero_I32x4
  { 1736,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1736 = int_wasm_relaxed_trunc_unsigned_zero_I32x4_S
  { 1737,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1737 = promote_low_F64x2
  { 1738,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1738 = promote_low_F64x2_S
  { 1739,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1739 = sint_to_fp_F32x4
  { 1740,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1740 = sint_to_fp_F32x4_S
  { 1741,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1741 = trunc_sat_zero_s_I32x4
  { 1742,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1742 = trunc_sat_zero_s_I32x4_S
  { 1743,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1743 = trunc_sat_zero_u_I32x4
  { 1744,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1744 = trunc_sat_zero_u_I32x4_S
  { 1745,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1745 = uint_to_fp_F32x4
  { 1746,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1746 = uint_to_fp_F32x4_S
};


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
extern const char WebAssemblyInstrNameData[] = {
  /* 0 */ "G_FLOG10\0"
  /* 9 */ "LOAD_F32_A32\0"
  /* 22 */ "STORE_F32_A32\0"
  /* 36 */ "ATOMIC_STORE16_I32_A32\0"
  /* 59 */ "ATOMIC_STORE8_I32_A32\0"
  /* 81 */ "ATOMIC_RMW16_U_SUB_I32_A32\0"
  /* 108 */ "ATOMIC_RMW8_U_SUB_I32_A32\0"
  /* 134 */ "ATOMIC_RMW_SUB_I32_A32\0"
  /* 157 */ "ATOMIC_LOAD_I32_A32\0"
  /* 177 */ "ATOMIC_RMW16_U_ADD_I32_A32\0"
  /* 204 */ "ATOMIC_RMW8_U_ADD_I32_A32\0"
  /* 230 */ "ATOMIC_RMW_ADD_I32_A32\0"
  /* 253 */ "ATOMIC_RMW16_U_AND_I32_A32\0"
  /* 280 */ "ATOMIC_RMW8_U_AND_I32_A32\0"
  /* 306 */ "ATOMIC_RMW_AND_I32_A32\0"
  /* 329 */ "ATOMIC_STORE_I32_A32\0"
  /* 350 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A32\0"
  /* 381 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A32\0"
  /* 411 */ "ATOMIC_RMW_CMPXCHG_I32_A32\0"
  /* 438 */ "ATOMIC_RMW16_U_XCHG_I32_A32\0"
  /* 466 */ "ATOMIC_RMW8_U_XCHG_I32_A32\0"
  /* 493 */ "ATOMIC_RMW_XCHG_I32_A32\0"
  /* 517 */ "ATOMIC_RMW16_U_XOR_I32_A32\0"
  /* 544 */ "ATOMIC_RMW8_U_XOR_I32_A32\0"
  /* 570 */ "ATOMIC_RMW_XOR_I32_A32\0"
  /* 593 */ "ATOMIC_RMW16_U_OR_I32_A32\0"
  /* 619 */ "ATOMIC_RMW8_U_OR_I32_A32\0"
  /* 644 */ "ATOMIC_RMW_OR_I32_A32\0"
  /* 666 */ "LOAD16_S_I32_A32\0"
  /* 683 */ "LOAD8_S_I32_A32\0"
  /* 699 */ "ATOMIC_LOAD16_U_I32_A32\0"
  /* 723 */ "ATOMIC_LOAD8_U_I32_A32\0"
  /* 746 */ "MEMORY_ATOMIC_WAIT32_A32\0"
  /* 771 */ "LOAD_LANE_I64x2_A32\0"
  /* 791 */ "STORE_LANE_I64x2_A32\0"
  /* 812 */ "LOAD_ZERO_I64x2_A32\0"
  /* 832 */ "LOAD_EXTEND_S_I64x2_A32\0"
  /* 856 */ "LOAD_EXTEND_U_I64x2_A32\0"
  /* 880 */ "LOAD_F64_A32\0"
  /* 893 */ "STORE_F64_A32\0"
  /* 907 */ "ATOMIC_STORE32_I64_A32\0"
  /* 930 */ "ATOMIC_STORE16_I64_A32\0"
  /* 953 */ "ATOMIC_STORE8_I64_A32\0"
  /* 975 */ "ATOMIC_RMW32_U_SUB_I64_A32\0"
  /* 1002 */ "ATOMIC_RMW16_U_SUB_I64_A32\0"
  /* 1029 */ "ATOMIC_RMW8_U_SUB_I64_A32\0"
  /* 1055 */ "ATOMIC_RMW_SUB_I64_A32\0"
  /* 1078 */ "ATOMIC_LOAD_I64_A32\0"
  /* 1098 */ "ATOMIC_RMW32_U_ADD_I64_A32\0"
  /* 1125 */ "ATOMIC_RMW16_U_ADD_I64_A32\0"
  /* 1152 */ "ATOMIC_RMW8_U_ADD_I64_A32\0"
  /* 1178 */ "ATOMIC_RMW_ADD_I64_A32\0"
  /* 1201 */ "ATOMIC_RMW32_U_AND_I64_A32\0"
  /* 1228 */ "ATOMIC_RMW16_U_AND_I64_A32\0"
  /* 1255 */ "ATOMIC_RMW8_U_AND_I64_A32\0"
  /* 1281 */ "ATOMIC_RMW_AND_I64_A32\0"
  /* 1304 */ "ATOMIC_STORE_I64_A32\0"
  /* 1325 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A32\0"
  /* 1356 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A32\0"
  /* 1387 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A32\0"
  /* 1417 */ "ATOMIC_RMW_CMPXCHG_I64_A32\0"
  /* 1444 */ "ATOMIC_RMW32_U_XCHG_I64_A32\0"
  /* 1472 */ "ATOMIC_RMW16_U_XCHG_I64_A32\0"
  /* 1500 */ "ATOMIC_RMW8_U_XCHG_I64_A32\0"
  /* 1527 */ "ATOMIC_RMW_XCHG_I64_A32\0"
  /* 1551 */ "ATOMIC_RMW32_U_XOR_I64_A32\0"
  /* 1578 */ "ATOMIC_RMW16_U_XOR_I64_A32\0"
  /* 1605 */ "ATOMIC_RMW8_U_XOR_I64_A32\0"
  /* 1631 */ "ATOMIC_RMW_XOR_I64_A32\0"
  /* 1654 */ "ATOMIC_RMW32_U_OR_I64_A32\0"
  /* 1680 */ "ATOMIC_RMW16_U_OR_I64_A32\0"
  /* 1706 */ "ATOMIC_RMW8_U_OR_I64_A32\0"
  /* 1731 */ "ATOMIC_RMW_OR_I64_A32\0"
  /* 1753 */ "LOAD32_S_I64_A32\0"
  /* 1770 */ "LOAD16_S_I64_A32\0"
  /* 1787 */ "LOAD8_S_I64_A32\0"
  /* 1803 */ "ATOMIC_LOAD32_U_I64_A32\0"
  /* 1827 */ "ATOMIC_LOAD16_U_I64_A32\0"
  /* 1851 */ "ATOMIC_LOAD8_U_I64_A32\0"
  /* 1874 */ "MEMORY_ATOMIC_WAIT64_A32\0"
  /* 1899 */ "LOAD_LANE_I32x4_A32\0"
  /* 1919 */ "STORE_LANE_I32x4_A32\0"
  /* 1940 */ "LOAD_ZERO_I32x4_A32\0"
  /* 1960 */ "LOAD_EXTEND_S_I32x4_A32\0"
  /* 1984 */ "LOAD_EXTEND_U_I32x4_A32\0"
  /* 2008 */ "LOAD_LANE_I8x16_A32\0"
  /* 2028 */ "STORE_LANE_I8x16_A32\0"
  /* 2049 */ "LOAD_V128_A32\0"
  /* 2063 */ "STORE_V128_A32\0"
  /* 2078 */ "LOAD_LANE_I16x8_A32\0"
  /* 2098 */ "STORE_LANE_I16x8_A32\0"
  /* 2119 */ "LOAD_EXTEND_S_I16x8_A32\0"
  /* 2143 */ "LOAD_EXTEND_U_I16x8_A32\0"
  /* 2167 */ "anonymous_4396MEMORY_SIZE_A32\0"
  /* 2197 */ "anonymous_6249MEMORY_FILL_A32\0"
  /* 2227 */ "LOAD32_SPLAT_A32\0"
  /* 2244 */ "LOAD64_SPLAT_A32\0"
  /* 2261 */ "LOAD16_SPLAT_A32\0"
  /* 2278 */ "LOAD8_SPLAT_A32\0"
  /* 2294 */ "anonymous_6249MEMORY_INIT_A32\0"
  /* 2324 */ "anonymous_4396MEMORY_GROW_A32\0"
  /* 2354 */ "MEMORY_ATOMIC_NOTIFY_A32\0"
  /* 2379 */ "anonymous_6249MEMORY_COPY_A32\0"
  /* 2409 */ "FP_TO_SINT_I32_F32\0"
  /* 2428 */ "FP_TO_UINT_I32_F32\0"
  /* 2447 */ "FP_TO_SINT_I64_F32\0"
  /* 2466 */ "FP_TO_UINT_I64_F32\0"
  /* 2485 */ "SUB_F32\0"
  /* 2493 */ "TRUNC_F32\0"
  /* 2503 */ "ADD_F32\0"
  /* 2511 */ "LOCAL_TEE_F32\0"
  /* 2525 */ "GE_F32\0"
  /* 2532 */ "LE_F32\0"
  /* 2539 */ "NE_F32\0"
  /* 2546 */ "F64_PROMOTE_F32\0"
  /* 2562 */ "NEG_F32\0"
  /* 2570 */ "CEIL_F32\0"
  /* 2579 */ "MUL_F32\0"
  /* 2587 */ "COPYSIGN_F32\0"
  /* 2600 */ "MIN_F32\0"
  /* 2608 */ "DROP_F32\0"
  /* 2617 */ "EQ_F32\0"
  /* 2624 */ "FLOOR_F32\0"
  /* 2634 */ "ABS_F32\0"
  /* 2642 */ "I32_TRUNC_S_F32\0"
  /* 2658 */ "I64_TRUNC_S_F32\0"
  /* 2674 */ "I32_TRUNC_S_SAT_F32\0"
  /* 2694 */ "I64_TRUNC_S_SAT_F32\0"
  /* 2714 */ "I32_TRUNC_U_SAT_F32\0"
  /* 2734 */ "I64_TRUNC_U_SAT_F32\0"
  /* 2754 */ "SELECT_F32\0"
  /* 2765 */ "GLOBAL_GET_F32\0"
  /* 2780 */ "LOCAL_GET_F32\0"
  /* 2794 */ "I32_REINTERPRET_F32\0"
  /* 2814 */ "GLOBAL_SET_F32\0"
  /* 2829 */ "LOCAL_SET_F32\0"
  /* 2843 */ "GT_F32\0"
  /* 2850 */ "LT_F32\0"
  /* 2857 */ "SQRT_F32\0"
  /* 2866 */ "NEAREST_F32\0"
  /* 2878 */ "CONST_F32\0"
  /* 2888 */ "I32_TRUNC_U_F32\0"
  /* 2904 */ "I64_TRUNC_U_F32\0"
  /* 2920 */ "DIV_F32\0"
  /* 2928 */ "MAX_F32\0"
  /* 2936 */ "COPY_F32\0"
  /* 2945 */ "SUB_I32\0"
  /* 2953 */ "ADD_I32\0"
  /* 2961 */ "AND_I32\0"
  /* 2969 */ "LOCAL_TEE_I32\0"
  /* 2983 */ "BR_TABLE_I32\0"
  /* 2996 */ "NE_I32\0"
  /* 3003 */ "SHL_I32\0"
  /* 3011 */ "ROTL_I32\0"
  /* 3020 */ "MUL_I32\0"
  /* 3028 */ "DROP_I32\0"
  /* 3037 */ "EQ_I32\0"
  /* 3044 */ "XOR_I32\0"
  /* 3052 */ "ROTR_I32\0"
  /* 3061 */ "I32_EXTEND16_S_I32\0"
  /* 3080 */ "I32_EXTEND8_S_I32\0"
  /* 3098 */ "I64_EXTEND_S_I32\0"
  /* 3115 */ "GE_S_I32\0"
  /* 3124 */ "LE_S_I32\0"
  /* 3133 */ "REM_S_I32\0"
  /* 3143 */ "SHR_S_I32\0"
  /* 3153 */ "GT_S_I32\0"
  /* 3162 */ "LT_S_I32\0"
  /* 3171 */ "F32_CONVERT_S_I32\0"
  /* 3189 */ "F64_CONVERT_S_I32\0"
  /* 3207 */ "DIV_S_I32\0"
  /* 3217 */ "SELECT_I32\0"
  /* 3228 */ "GLOBAL_GET_I32\0"
  /* 3243 */ "LOCAL_GET_I32\0"
  /* 3257 */ "F32_REINTERPRET_I32\0"
  /* 3277 */ "GLOBAL_SET_I32\0"
  /* 3292 */ "LOCAL_SET_I32\0"
  /* 3306 */ "POPCNT_I32\0"
  /* 3317 */ "CONST_I32\0"
  /* 3327 */ "I64_EXTEND_U_I32\0"
  /* 3344 */ "GE_U_I32\0"
  /* 3353 */ "LE_U_I32\0"
  /* 3362 */ "REM_U_I32\0"
  /* 3372 */ "SHR_U_I32\0"
  /* 3382 */ "GT_U_I32\0"
  /* 3391 */ "LT_U_I32\0"
  /* 3400 */ "F32_CONVERT_U_I32\0"
  /* 3418 */ "F64_CONVERT_U_I32\0"
  /* 3436 */ "DIV_U_I32\0"
  /* 3446 */ "COPY_I32\0"
  /* 3455 */ "CLZ_I32\0"
  /* 3463 */ "EQZ_I32\0"
  /* 3471 */ "CTZ_I32\0"
  /* 3479 */ "ARGUMENT_v4f32\0"
  /* 3494 */ "ARGUMENT_f32\0"
  /* 3507 */ "ARGUMENT_v4i32\0"
  /* 3522 */ "ARGUMENT_i32\0"
  /* 3535 */ "G_FLOG2\0"
  /* 3543 */ "G_FEXP2\0"
  /* 3551 */ "CONST_V128_F64x2\0"
  /* 3568 */ "SUB_F64x2\0"
  /* 3578 */ "TRUNC_F64x2\0"
  /* 3590 */ "NMADD_F64x2\0"
  /* 3602 */ "GE_F64x2\0"
  /* 3611 */ "LE_F64x2\0"
  /* 3620 */ "REPLACE_LANE_F64x2\0"
  /* 3639 */ "EXTRACT_LANE_F64x2\0"
  /* 3658 */ "NEG_F64x2\0"
  /* 3668 */ "CEIL_F64x2\0"
  /* 3679 */ "MUL_F64x2\0"
  /* 3689 */ "SIMD_RELAXED_FMIN_F64x2\0"
  /* 3713 */ "PMIN_F64x2\0"
  /* 3724 */ "EQ_F64x2\0"
  /* 3733 */ "FLOOR_F64x2\0"
  /* 3745 */ "ABS_F64x2\0"
  /* 3755 */ "SPLAT_F64x2\0"
  /* 3767 */ "GT_F64x2\0"
  /* 3776 */ "LT_F64x2\0"
  /* 3785 */ "SQRT_F64x2\0"
  /* 3796 */ "NEAREST_F64x2\0"
  /* 3810 */ "DIV_F64x2\0"
  /* 3820 */ "SIMD_RELAXED_FMAX_F64x2\0"
  /* 3844 */ "PMAX_F64x2\0"
  /* 3855 */ "convert_low_s_F64x2\0"
  /* 3875 */ "convert_low_u_F64x2\0"
  /* 3895 */ "promote_low_F64x2\0"
  /* 3913 */ "CONST_V128_I64x2\0"
  /* 3930 */ "SUB_I64x2\0"
  /* 3940 */ "ADD_I64x2\0"
  /* 3950 */ "REPLACE_LANE_I64x2\0"
  /* 3969 */ "EXTRACT_LANE_I64x2\0"
  /* 3988 */ "ALLTRUE_I64x2\0"
  /* 4002 */ "NEG_I64x2\0"
  /* 4012 */ "BITMASK_I64x2\0"
  /* 4026 */ "SHL_I64x2\0"
  /* 4036 */ "MUL_I64x2\0"
  /* 4046 */ "EQ_I64x2\0"
  /* 4055 */ "ABS_I64x2\0"
  /* 4065 */ "GE_S_I64x2\0"
  /* 4076 */ "LE_S_I64x2\0"
  /* 4087 */ "EXTMUL_HIGH_S_I64x2\0"
  /* 4107 */ "SHR_S_I64x2\0"
  /* 4119 */ "GT_S_I64x2\0"
  /* 4130 */ "LT_S_I64x2\0"
  /* 4141 */ "EXTMUL_LOW_S_I64x2\0"
  /* 4160 */ "SPLAT_I64x2\0"
  /* 4172 */ "LANESELECT_I64x2\0"
  /* 4189 */ "EXTMUL_HIGH_U_I64x2\0"
  /* 4209 */ "SHR_U_I64x2\0"
  /* 4221 */ "EXTMUL_LOW_U_I64x2\0"
  /* 4240 */ "extend_high_s_I64x2\0"
  /* 4260 */ "extend_low_s_I64x2\0"
  /* 4279 */ "extend_high_u_I64x2\0"
  /* 4299 */ "extend_low_u_I64x2\0"
  /* 4318 */ "LOAD_F32_A64\0"
  /* 4331 */ "STORE_F32_A64\0"
  /* 4345 */ "ATOMIC_STORE16_I32_A64\0"
  /* 4368 */ "ATOMIC_STORE8_I32_A64\0"
  /* 4390 */ "ATOMIC_RMW16_U_SUB_I32_A64\0"
  /* 4417 */ "ATOMIC_RMW8_U_SUB_I32_A64\0"
  /* 4443 */ "ATOMIC_RMW_SUB_I32_A64\0"
  /* 4466 */ "ATOMIC_LOAD_I32_A64\0"
  /* 4486 */ "ATOMIC_RMW16_U_ADD_I32_A64\0"
  /* 4513 */ "ATOMIC_RMW8_U_ADD_I32_A64\0"
  /* 4539 */ "ATOMIC_RMW_ADD_I32_A64\0"
  /* 4562 */ "ATOMIC_RMW16_U_AND_I32_A64\0"
  /* 4589 */ "ATOMIC_RMW8_U_AND_I32_A64\0"
  /* 4615 */ "ATOMIC_RMW_AND_I32_A64\0"
  /* 4638 */ "ATOMIC_STORE_I32_A64\0"
  /* 4659 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A64\0"
  /* 4690 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A64\0"
  /* 4720 */ "ATOMIC_RMW_CMPXCHG_I32_A64\0"
  /* 4747 */ "ATOMIC_RMW16_U_XCHG_I32_A64\0"
  /* 4775 */ "ATOMIC_RMW8_U_XCHG_I32_A64\0"
  /* 4802 */ "ATOMIC_RMW_XCHG_I32_A64\0"
  /* 4826 */ "ATOMIC_RMW16_U_XOR_I32_A64\0"
  /* 4853 */ "ATOMIC_RMW8_U_XOR_I32_A64\0"
  /* 4879 */ "ATOMIC_RMW_XOR_I32_A64\0"
  /* 4902 */ "ATOMIC_RMW16_U_OR_I32_A64\0"
  /* 4928 */ "ATOMIC_RMW8_U_OR_I32_A64\0"
  /* 4953 */ "ATOMIC_RMW_OR_I32_A64\0"
  /* 4975 */ "LOAD16_S_I32_A64\0"
  /* 4992 */ "LOAD8_S_I32_A64\0"
  /* 5008 */ "ATOMIC_LOAD16_U_I32_A64\0"
  /* 5032 */ "ATOMIC_LOAD8_U_I32_A64\0"
  /* 5055 */ "MEMORY_ATOMIC_WAIT32_A64\0"
  /* 5080 */ "LOAD_LANE_I64x2_A64\0"
  /* 5100 */ "STORE_LANE_I64x2_A64\0"
  /* 5121 */ "LOAD_ZERO_I64x2_A64\0"
  /* 5141 */ "LOAD_EXTEND_S_I64x2_A64\0"
  /* 5165 */ "LOAD_EXTEND_U_I64x2_A64\0"
  /* 5189 */ "LOAD_F64_A64\0"
  /* 5202 */ "STORE_F64_A64\0"
  /* 5216 */ "ATOMIC_STORE32_I64_A64\0"
  /* 5239 */ "ATOMIC_STORE16_I64_A64\0"
  /* 5262 */ "ATOMIC_STORE8_I64_A64\0"
  /* 5284 */ "ATOMIC_RMW32_U_SUB_I64_A64\0"
  /* 5311 */ "ATOMIC_RMW16_U_SUB_I64_A64\0"
  /* 5338 */ "ATOMIC_RMW8_U_SUB_I64_A64\0"
  /* 5364 */ "ATOMIC_RMW_SUB_I64_A64\0"
  /* 5387 */ "ATOMIC_LOAD_I64_A64\0"
  /* 5407 */ "ATOMIC_RMW32_U_ADD_I64_A64\0"
  /* 5434 */ "ATOMIC_RMW16_U_ADD_I64_A64\0"
  /* 5461 */ "ATOMIC_RMW8_U_ADD_I64_A64\0"
  /* 5487 */ "ATOMIC_RMW_ADD_I64_A64\0"
  /* 5510 */ "ATOMIC_RMW32_U_AND_I64_A64\0"
  /* 5537 */ "ATOMIC_RMW16_U_AND_I64_A64\0"
  /* 5564 */ "ATOMIC_RMW8_U_AND_I64_A64\0"
  /* 5590 */ "ATOMIC_RMW_AND_I64_A64\0"
  /* 5613 */ "ATOMIC_STORE_I64_A64\0"
  /* 5634 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A64\0"
  /* 5665 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A64\0"
  /* 5696 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A64\0"
  /* 5726 */ "ATOMIC_RMW_CMPXCHG_I64_A64\0"
  /* 5753 */ "ATOMIC_RMW32_U_XCHG_I64_A64\0"
  /* 5781 */ "ATOMIC_RMW16_U_XCHG_I64_A64\0"
  /* 5809 */ "ATOMIC_RMW8_U_XCHG_I64_A64\0"
  /* 5836 */ "ATOMIC_RMW_XCHG_I64_A64\0"
  /* 5860 */ "ATOMIC_RMW32_U_XOR_I64_A64\0"
  /* 5887 */ "ATOMIC_RMW16_U_XOR_I64_A64\0"
  /* 5914 */ "ATOMIC_RMW8_U_XOR_I64_A64\0"
  /* 5940 */ "ATOMIC_RMW_XOR_I64_A64\0"
  /* 5963 */ "ATOMIC_RMW32_U_OR_I64_A64\0"
  /* 5989 */ "ATOMIC_RMW16_U_OR_I64_A64\0"
  /* 6015 */ "ATOMIC_RMW8_U_OR_I64_A64\0"
  /* 6040 */ "ATOMIC_RMW_OR_I64_A64\0"
  /* 6062 */ "LOAD32_S_I64_A64\0"
  /* 6079 */ "LOAD16_S_I64_A64\0"
  /* 6096 */ "LOAD8_S_I64_A64\0"
  /* 6112 */ "ATOMIC_LOAD32_U_I64_A64\0"
  /* 6136 */ "ATOMIC_LOAD16_U_I64_A64\0"
  /* 6160 */ "ATOMIC_LOAD8_U_I64_A64\0"
  /* 6183 */ "MEMORY_ATOMIC_WAIT64_A64\0"
  /* 6208 */ "LOAD_LANE_I32x4_A64\0"
  /* 6228 */ "STORE_LANE_I32x4_A64\0"
  /* 6249 */ "LOAD_ZERO_I32x4_A64\0"
  /* 6269 */ "LOAD_EXTEND_S_I32x4_A64\0"
  /* 6293 */ "LOAD_EXTEND_U_I32x4_A64\0"
  /* 6317 */ "LOAD_LANE_I8x16_A64\0"
  /* 6337 */ "STORE_LANE_I8x16_A64\0"
  /* 6358 */ "LOAD_V128_A64\0"
  /* 6372 */ "STORE_V128_A64\0"
  /* 6387 */ "LOAD_LANE_I16x8_A64\0"
  /* 6407 */ "STORE_LANE_I16x8_A64\0"
  /* 6428 */ "LOAD_EXTEND_S_I16x8_A64\0"
  /* 6452 */ "LOAD_EXTEND_U_I16x8_A64\0"
  /* 6476 */ "anonymous_4397MEMORY_SIZE_A64\0"
  /* 6506 */ "anonymous_6250MEMORY_FILL_A64\0"
  /* 6536 */ "LOAD32_SPLAT_A64\0"
  /* 6553 */ "LOAD64_SPLAT_A64\0"
  /* 6570 */ "LOAD16_SPLAT_A64\0"
  /* 6587 */ "LOAD8_SPLAT_A64\0"
  /* 6603 */ "anonymous_6250MEMORY_INIT_A64\0"
  /* 6633 */ "anonymous_4397MEMORY_GROW_A64\0"
  /* 6663 */ "MEMORY_ATOMIC_NOTIFY_A64\0"
  /* 6688 */ "anonymous_6250MEMORY_COPY_A64\0"
  /* 6718 */ "FP_TO_SINT_I32_F64\0"
  /* 6737 */ "FP_TO_UINT_I32_F64\0"
  /* 6756 */ "FP_TO_SINT_I64_F64\0"
  /* 6775 */ "FP_TO_UINT_I64_F64\0"
  /* 6794 */ "SUB_F64\0"
  /* 6802 */ "TRUNC_F64\0"
  /* 6812 */ "ADD_F64\0"
  /* 6820 */ "LOCAL_TEE_F64\0"
  /* 6834 */ "GE_F64\0"
  /* 6841 */ "LE_F64\0"
  /* 6848 */ "NE_F64\0"
  /* 6855 */ "F32_DEMOTE_F64\0"
  /* 6870 */ "NEG_F64\0"
  /* 6878 */ "CEIL_F64\0"
  /* 6887 */ "MUL_F64\0"
  /* 6895 */ "COPYSIGN_F64\0"
  /* 6908 */ "MIN_F64\0"
  /* 6916 */ "DROP_F64\0"
  /* 6925 */ "EQ_F64\0"
  /* 6932 */ "FLOOR_F64\0"
  /* 6942 */ "ABS_F64\0"
  /* 6950 */ "I32_TRUNC_S_F64\0"
  /* 6966 */ "I64_TRUNC_S_F64\0"
  /* 6982 */ "I32_TRUNC_S_SAT_F64\0"
  /* 7002 */ "I64_TRUNC_S_SAT_F64\0"
  /* 7022 */ "I32_TRUNC_U_SAT_F64\0"
  /* 7042 */ "I64_TRUNC_U_SAT_F64\0"
  /* 7062 */ "SELECT_F64\0"
  /* 7073 */ "GLOBAL_GET_F64\0"
  /* 7088 */ "LOCAL_GET_F64\0"
  /* 7102 */ "I64_REINTERPRET_F64\0"
  /* 7122 */ "GLOBAL_SET_F64\0"
  /* 7137 */ "LOCAL_SET_F64\0"
  /* 7151 */ "GT_F64\0"
  /* 7158 */ "LT_F64\0"
  /* 7165 */ "SQRT_F64\0"
  /* 7174 */ "NEAREST_F64\0"
  /* 7186 */ "CONST_F64\0"
  /* 7196 */ "I32_TRUNC_U_F64\0"
  /* 7212 */ "I64_TRUNC_U_F64\0"
  /* 7228 */ "DIV_F64\0"
  /* 7236 */ "MAX_F64\0"
  /* 7244 */ "COPY_F64\0"
  /* 7253 */ "SUB_I64\0"
  /* 7261 */ "ADD_I64\0"
  /* 7269 */ "AND_I64\0"
  /* 7277 */ "LOCAL_TEE_I64\0"
  /* 7291 */ "BR_TABLE_I64\0"
  /* 7304 */ "NE_I64\0"
  /* 7311 */ "SHL_I64\0"
  /* 7319 */ "ROTL_I64\0"
  /* 7328 */ "MUL_I64\0"
  /* 7336 */ "I32_WRAP_I64\0"
  /* 7349 */ "DROP_I64\0"
  /* 7358 */ "EQ_I64\0"
  /* 7365 */ "XOR_I64\0"
  /* 7373 */ "ROTR_I64\0"
  /* 7382 */ "I64_EXTEND32_S_I64\0"
  /* 7401 */ "I64_EXTEND16_S_I64\0"
  /* 7420 */ "I64_EXTEND8_S_I64\0"
  /* 7438 */ "GE_S_I64\0"
  /* 7447 */ "LE_S_I64\0"
  /* 7456 */ "REM_S_I64\0"
  /* 7466 */ "SHR_S_I64\0"
  /* 7476 */ "GT_S_I64\0"
  /* 7485 */ "LT_S_I64\0"
  /* 7494 */ "F32_CONVERT_S_I64\0"
  /* 7512 */ "F64_CONVERT_S_I64\0"
  /* 7530 */ "DIV_S_I64\0"
  /* 7540 */ "SELECT_I64\0"
  /* 7551 */ "GLOBAL_GET_I64\0"
  /* 7566 */ "LOCAL_GET_I64\0"
  /* 7580 */ "F64_REINTERPRET_I64\0"
  /* 7600 */ "GLOBAL_SET_I64\0"
  /* 7615 */ "LOCAL_SET_I64\0"
  /* 7629 */ "POPCNT_I64\0"
  /* 7640 */ "CONST_I64\0"
  /* 7650 */ "GE_U_I64\0"
  /* 7659 */ "LE_U_I64\0"
  /* 7668 */ "REM_U_I64\0"
  /* 7678 */ "SHR_U_I64\0"
  /* 7688 */ "GT_U_I64\0"
  /* 7697 */ "LT_U_I64\0"
  /* 7706 */ "F32_CONVERT_U_I64\0"
  /* 7724 */ "F64_CONVERT_U_I64\0"
  /* 7742 */ "DIV_U_I64\0"
  /* 7752 */ "COPY_I64\0"
  /* 7761 */ "CLZ_I64\0"
  /* 7769 */ "EQZ_I64\0"
  /* 7777 */ "CTZ_I64\0"
  /* 7785 */ "ARGUMENT_v2f64\0"
  /* 7800 */ "ARGUMENT_f64\0"
  /* 7813 */ "ARGUMENT_v2i64\0"
  /* 7828 */ "ARGUMENT_i64\0"
  /* 7841 */ "CONST_V128_F32x4\0"
  /* 7858 */ "SUB_F32x4\0"
  /* 7868 */ "TRUNC_F32x4\0"
  /* 7880 */ "NMADD_F32x4\0"
  /* 7892 */ "GE_F32x4\0"
  /* 7901 */ "LE_F32x4\0"
  /* 7910 */ "REPLACE_LANE_F32x4\0"
  /* 7929 */ "EXTRACT_LANE_F32x4\0"
  /* 7948 */ "NEG_F32x4\0"
  /* 7958 */ "CEIL_F32x4\0"
  /* 7969 */ "MUL_F32x4\0"
  /* 7979 */ "SIMD_RELAXED_FMIN_F32x4\0"
  /* 8003 */ "PMIN_F32x4\0"
  /* 8014 */ "EQ_F32x4\0"
  /* 8023 */ "FLOOR_F32x4\0"
  /* 8035 */ "ABS_F32x4\0"
  /* 8045 */ "SPLAT_F32x4\0"
  /* 8057 */ "GT_F32x4\0"
  /* 8066 */ "LT_F32x4\0"
  /* 8075 */ "SQRT_F32x4\0"
  /* 8086 */ "NEAREST_F32x4\0"
  /* 8100 */ "DIV_F32x4\0"
  /* 8110 */ "SIMD_RELAXED_FMAX_F32x4\0"
  /* 8134 */ "PMAX_F32x4\0"
  /* 8145 */ "demote_zero_F32x4\0"
  /* 8163 */ "sint_to_fp_F32x4\0"
  /* 8180 */ "uint_to_fp_F32x4\0"
  /* 8197 */ "CONST_V128_I32x4\0"
  /* 8214 */ "SUB_I32x4\0"
  /* 8224 */ "ADD_I32x4\0"
  /* 8234 */ "REPLACE_LANE_I32x4\0"
  /* 8253 */ "EXTRACT_LANE_I32x4\0"
  /* 8272 */ "ALLTRUE_I32x4\0"
  /* 8286 */ "NEG_I32x4\0"
  /* 8296 */ "BITMASK_I32x4\0"
  /* 8310 */ "SHL_I32x4\0"
  /* 8320 */ "MUL_I32x4\0"
  /* 8330 */ "EQ_I32x4\0"
  /* 8339 */ "ABS_I32x4\0"
  /* 8349 */ "GE_S_I32x4\0"
  /* 8360 */ "LE_S_I32x4\0"
  /* 8371 */ "EXTMUL_HIGH_S_I32x4\0"
  /* 8391 */ "MIN_S_I32x4\0"
  /* 8403 */ "SHR_S_I32x4\0"
  /* 8415 */ "GT_S_I32x4\0"
  /* 8426 */ "LT_S_I32x4\0"
  /* 8437 */ "EXTMUL_LOW_S_I32x4\0"
  /* 8456 */ "MAX_S_I32x4\0"
  /* 8468 */ "SPLAT_I32x4\0"
  /* 8480 */ "LANESELECT_I32x4\0"
  /* 8497 */ "GE_U_I32x4\0"
  /* 8508 */ "LE_U_I32x4\0"
  /* 8519 */ "EXTMUL_HIGH_U_I32x4\0"
  /* 8539 */ "MIN_U_I32x4\0"
  /* 8551 */ "SHR_U_I32x4\0"
  /* 8563 */ "GT_U_I32x4\0"
  /* 8574 */ "LT_U_I32x4\0"
  /* 8585 */ "EXTMUL_LOW_U_I32x4\0"
  /* 8604 */ "MAX_U_I32x4\0"
  /* 8616 */ "int_wasm_relaxed_trunc_signed_I32x4\0"
  /* 8652 */ "int_wasm_extadd_pairwise_signed_I32x4\0"
  /* 8690 */ "int_wasm_relaxed_trunc_unsigned_I32x4\0"
  /* 8728 */ "int_wasm_extadd_pairwise_unsigned_I32x4\0"
  /* 8768 */ "int_wasm_relaxed_trunc_signed_zero_I32x4\0"
  /* 8809 */ "int_wasm_relaxed_trunc_unsigned_zero_I32x4\0"
  /* 8852 */ "extend_high_s_I32x4\0"
  /* 8872 */ "trunc_sat_zero_s_I32x4\0"
  /* 8895 */ "extend_low_s_I32x4\0"
  /* 8914 */ "fp_to_sint_I32x4\0"
  /* 8931 */ "fp_to_uint_I32x4\0"
  /* 8948 */ "extend_high_u_I32x4\0"
  /* 8968 */ "trunc_sat_zero_u_I32x4\0"
  /* 8991 */ "extend_low_u_I32x4\0"
  /* 9010 */ "ARGUMENT_v8i16\0"
  /* 9025 */ "CONST_V128_I8x16\0"
  /* 9042 */ "SUB_I8x16\0"
  /* 9052 */ "ADD_I8x16\0"
  /* 9062 */ "REPLACE_LANE_I8x16\0"
  /* 9081 */ "ALLTRUE_I8x16\0"
  /* 9095 */ "NEG_I8x16\0"
  /* 9105 */ "BITMASK_I8x16\0"
  /* 9119 */ "SHL_I8x16\0"
  /* 9129 */ "EQ_I8x16\0"
  /* 9138 */ "ABS_I8x16\0"
  /* 9148 */ "GE_S_I8x16\0"
  /* 9159 */ "LE_S_I8x16\0"
  /* 9170 */ "MIN_S_I8x16\0"
  /* 9182 */ "SHR_S_I8x16\0"
  /* 9194 */ "SUB_SAT_S_I8x16\0"
  /* 9210 */ "ADD_SAT_S_I8x16\0"
  /* 9226 */ "GT_S_I8x16\0"
  /* 9237 */ "LT_S_I8x16\0"
  /* 9248 */ "NARROW_S_I8x16\0"
  /* 9263 */ "MAX_S_I8x16\0"
  /* 9275 */ "SPLAT_I8x16\0"
  /* 9287 */ "LANESELECT_I8x16\0"
  /* 9304 */ "POPCNT_I8x16\0"
  /* 9317 */ "GE_U_I8x16\0"
  /* 9328 */ "LE_U_I8x16\0"
  /* 9339 */ "MIN_U_I8x16\0"
  /* 9351 */ "AVGR_U_I8x16\0"
  /* 9364 */ "SHR_U_I8x16\0"
  /* 9376 */ "SUB_SAT_U_I8x16\0"
  /* 9392 */ "ADD_SAT_U_I8x16\0"
  /* 9408 */ "GT_U_I8x16\0"
  /* 9419 */ "LT_U_I8x16\0"
  /* 9430 */ "NARROW_U_I8x16\0"
  /* 9445 */ "MAX_U_I8x16\0"
  /* 9457 */ "LOCAL_TEE_V128\0"
  /* 9472 */ "DROP_V128\0"
  /* 9482 */ "SELECT_V128\0"
  /* 9494 */ "GLOBAL_GET_V128\0"
  /* 9510 */ "LOCAL_GET_V128\0"
  /* 9525 */ "GLOBAL_SET_V128\0"
  /* 9541 */ "LOCAL_SET_V128\0"
  /* 9556 */ "COPY_V128\0"
  /* 9566 */ "ARGUMENT_v16i8\0"
  /* 9581 */ "CONST_V128_I16x8\0"
  /* 9598 */ "SUB_I16x8\0"
  /* 9608 */ "ADD_I16x8\0"
  /* 9618 */ "REPLACE_LANE_I16x8\0"
  /* 9637 */ "ALLTRUE_I16x8\0"
  /* 9651 */ "NEG_I16x8\0"
  /* 9661 */ "BITMASK_I16x8\0"
  /* 9675 */ "SHL_I16x8\0"
  /* 9685 */ "MUL_I16x8\0"
  /* 9695 */ "EQ_I16x8\0"
  /* 9704 */ "ABS_I16x8\0"
  /* 9714 */ "GE_S_I16x8\0"
  /* 9725 */ "LE_S_I16x8\0"
  /* 9736 */ "EXTMUL_HIGH_S_I16x8\0"
  /* 9756 */ "MIN_S_I16x8\0"
  /* 9768 */ "SHR_S_I16x8\0"
  /* 9780 */ "RELAXED_Q15MULR_S_I16x8\0"
  /* 9804 */ "SUB_SAT_S_I16x8\0"
  /* 9820 */ "ADD_SAT_S_I16x8\0"
  /* 9836 */ "Q15MULR_SAT_S_I16x8\0"
  /* 9856 */ "GT_S_I16x8\0"
  /* 9867 */ "LT_S_I16x8\0"
  /* 9878 */ "EXTMUL_LOW_S_I16x8\0"
  /* 9897 */ "NARROW_S_I16x8\0"
  /* 9912 */ "MAX_S_I16x8\0"
  /* 9924 */ "SPLAT_I16x8\0"
  /* 9936 */ "LANESELECT_I16x8\0"
  /* 9953 */ "GE_U_I16x8\0"
  /* 9964 */ "LE_U_I16x8\0"
  /* 9975 */ "EXTMUL_HIGH_U_I16x8\0"
  /* 9995 */ "MIN_U_I16x8\0"
  /* 10007 */ "AVGR_U_I16x8\0"
  /* 10020 */ "SHR_U_I16x8\0"
  /* 10032 */ "SUB_SAT_U_I16x8\0"
  /* 10048 */ "ADD_SAT_U_I16x8\0"
  /* 10064 */ "GT_U_I16x8\0"
  /* 10075 */ "LT_U_I16x8\0"
  /* 10086 */ "EXTMUL_LOW_U_I16x8\0"
  /* 10105 */ "NARROW_U_I16x8\0"
  /* 10120 */ "MAX_U_I16x8\0"
  /* 10132 */ "int_wasm_extadd_pairwise_signed_I16x8\0"
  /* 10170 */ "int_wasm_extadd_pairwise_unsigned_I16x8\0"
  /* 10210 */ "extend_high_s_I16x8\0"
  /* 10230 */ "extend_low_s_I16x8\0"
  /* 10249 */ "extend_high_u_I16x8\0"
  /* 10269 */ "extend_low_u_I16x8\0"
  /* 10288 */ "G_FMA\0"
  /* 10294 */ "G_STRICT_FMA\0"
  /* 10307 */ "G_FSUB\0"
  /* 10314 */ "G_STRICT_FSUB\0"
  /* 10328 */ "G_ATOMICRMW_FSUB\0"
  /* 10345 */ "G_SUB\0"
  /* 10351 */ "G_ATOMICRMW_SUB\0"
  /* 10367 */ "G_INTRINSIC\0"
  /* 10379 */ "G_FPTRUNC\0"
  /* 10389 */ "G_INTRINSIC_TRUNC\0"
  /* 10407 */ "G_TRUNC\0"
  /* 10415 */ "G_BUILD_VECTOR_TRUNC\0"
  /* 10436 */ "G_DYN_STACKALLOC\0"
  /* 10453 */ "G_FMAD\0"
  /* 10460 */ "G_INDEXED_SEXTLOAD\0"
  /* 10479 */ "G_SEXTLOAD\0"
  /* 10490 */ "G_INDEXED_ZEXTLOAD\0"
  /* 10509 */ "G_ZEXTLOAD\0"
  /* 10520 */ "G_INDEXED_LOAD\0"
  /* 10535 */ "G_LOAD\0"
  /* 10542 */ "G_VECREDUCE_FADD\0"
  /* 10559 */ "G_FADD\0"
  /* 10566 */ "G_VECREDUCE_SEQ_FADD\0"
  /* 10587 */ "G_STRICT_FADD\0"
  /* 10601 */ "G_ATOMICRMW_FADD\0"
  /* 10618 */ "G_VECREDUCE_ADD\0"
  /* 10634 */ "G_ADD\0"
  /* 10640 */ "G_PTR_ADD\0"
  /* 10650 */ "RELAXED_DOT_ADD\0"
  /* 10666 */ "G_ATOMICRMW_ADD\0"
  /* 10682 */ "G_ATOMICRMW_NAND\0"
  /* 10699 */ "G_VECREDUCE_AND\0"
  /* 10715 */ "G_AND\0"
  /* 10721 */ "G_ATOMICRMW_AND\0"
  /* 10737 */ "LIFETIME_END\0"
  /* 10750 */ "G_BRCOND\0"
  /* 10759 */ "G_LLROUND\0"
  /* 10769 */ "G_LROUND\0"
  /* 10778 */ "G_INTRINSIC_ROUND\0"
  /* 10796 */ "G_INTRINSIC_FPTRUNC_ROUND\0"
  /* 10822 */ "LOAD_STACK_GUARD\0"
  /* 10839 */ "PSEUDO_PROBE\0"
  /* 10852 */ "G_SSUBE\0"
  /* 10860 */ "G_USUBE\0"
  /* 10868 */ "ATOMIC_FENCE\0"
  /* 10881 */ "G_FENCE\0"
  /* 10889 */ "ARITH_FENCE\0"
  /* 10901 */ "COMPILER_FENCE\0"
  /* 10916 */ "REG_SEQUENCE\0"
  /* 10929 */ "G_SADDE\0"
  /* 10937 */ "G_UADDE\0"
  /* 10945 */ "G_FMINNUM_IEEE\0"
  /* 10960 */ "G_FMAXNUM_IEEE\0"
  /* 10975 */ "DEBUG_UNREACHABLE\0"
  /* 10993 */ "G_JUMP_TABLE\0"
  /* 11006 */ "BUNDLE\0"
  /* 11013 */ "SHUFFLE\0"
  /* 11021 */ "RELAXED_SWIZZLE\0"
  /* 11037 */ "G_MEMCPY_INLINE\0"
  /* 11053 */ "LOCAL_ESCAPE\0"
  /* 11066 */ "G_INDEXED_STORE\0"
  /* 11082 */ "G_STORE\0"
  /* 11090 */ "ELSE\0"
  /* 11095 */ "G_BITREVERSE\0"
  /* 11108 */ "DELEGATE\0"
  /* 11117 */ "DBG_VALUE\0"
  /* 11127 */ "G_GLOBAL_VALUE\0"
  /* 11142 */ "ANYTRUE\0"
  /* 11150 */ "G_MEMMOVE\0"
  /* 11160 */ "G_FREEZE\0"
  /* 11169 */ "G_FCANONICALIZE\0"
  /* 11185 */ "TABLE_SIZE\0"
  /* 11196 */ "G_CTLZ_ZERO_UNDEF\0"
  /* 11214 */ "G_CTTZ_ZERO_UNDEF\0"
  /* 11232 */ "G_IMPLICIT_DEF\0"
  /* 11247 */ "LOCAL_TEE_FUNCREF\0"
  /* 11265 */ "TABLE_FILL_FUNCREF\0"
  /* 11284 */ "REF_NULL_FUNCREF\0"
  /* 11301 */ "REF_IS_NULL_FUNCREF\0"
  /* 11321 */ "DROP_FUNCREF\0"
  /* 11334 */ "SELECT_FUNCREF\0"
  /* 11349 */ "TABLE_GET_FUNCREF\0"
  /* 11367 */ "GLOBAL_GET_FUNCREF\0"
  /* 11386 */ "LOCAL_GET_FUNCREF\0"
  /* 11404 */ "TABLE_SET_FUNCREF\0"
  /* 11422 */ "GLOBAL_SET_FUNCREF\0"
  /* 11441 */ "LOCAL_SET_FUNCREF\0"
  /* 11459 */ "TABLE_GROW_FUNCREF\0"
  /* 11478 */ "COPY_FUNCREF\0"
  /* 11491 */ "LOCAL_TEE_EXTERNREF\0"
  /* 11511 */ "TABLE_FILL_EXTERNREF\0"
  /* 11532 */ "REF_NULL_EXTERNREF\0"
  /* 11551 */ "REF_IS_NULL_EXTERNREF\0"
  /* 11573 */ "DROP_EXTERNREF\0"
  /* 11588 */ "SELECT_EXTERNREF\0"
  /* 11605 */ "TABLE_GET_EXTERNREF\0"
  /* 11625 */ "GLOBAL_GET_EXTERNREF\0"
  /* 11646 */ "LOCAL_GET_EXTERNREF\0"
  /* 11666 */ "TABLE_SET_EXTERNREF\0"
  /* 11686 */ "GLOBAL_SET_EXTERNREF\0"
  /* 11707 */ "LOCAL_SET_EXTERNREF\0"
  /* 11727 */ "TABLE_GROW_EXTERNREF\0"
  /* 11748 */ "COPY_EXTERNREF\0"
  /* 11763 */ "DBG_INSTR_REF\0"
  /* 11777 */ "END_IF\0"
  /* 11784 */ "BR_IF\0"
  /* 11790 */ "G_FNEG\0"
  /* 11797 */ "EXTRACT_SUBREG\0"
  /* 11812 */ "INSERT_SUBREG\0"
  /* 11826 */ "G_SEXT_INREG\0"
  /* 11839 */ "SUBREG_TO_REG\0"
  /* 11853 */ "G_ATOMIC_CMPXCHG\0"
  /* 11870 */ "G_ATOMICRMW_XCHG\0"
  /* 11887 */ "G_FLOG\0"
  /* 11894 */ "G_VAARG\0"
  /* 11902 */ "PREALLOCATED_ARG\0"
  /* 11919 */ "CATCH\0"
  /* 11925 */ "G_SMULH\0"
  /* 11933 */ "G_UMULH\0"
  /* 11941 */ "DBG_PHI\0"
  /* 11949 */ "G_FPTOSI\0"
  /* 11958 */ "G_FPTOUI\0"
  /* 11967 */ "G_FPOWI\0"
  /* 11975 */ "END_BLOCK\0"
  /* 11985 */ "G_PTRMASK\0"
  /* 11995 */ "GC_LABEL\0"
  /* 12004 */ "DBG_LABEL\0"
  /* 12014 */ "EH_LABEL\0"
  /* 12023 */ "ANNOTATION_LABEL\0"
  /* 12040 */ "ICALL_BRANCH_FUNNEL\0"
  /* 12060 */ "G_FSHL\0"
  /* 12067 */ "G_SHL\0"
  /* 12073 */ "G_FCEIL\0"
  /* 12081 */ "PATCHABLE_TAIL_CALL\0"
  /* 12101 */ "RET_CALL\0"
  /* 12110 */ "PATCHABLE_TYPED_EVENT_CALL\0"
  /* 12137 */ "PATCHABLE_EVENT_CALL\0"
  /* 12158 */ "FENTRY_CALL\0"
  /* 12170 */ "CATCH_ALL\0"
  /* 12180 */ "KILL\0"
  /* 12185 */ "G_ROTL\0"
  /* 12192 */ "G_VECREDUCE_FMUL\0"
  /* 12209 */ "G_FMUL\0"
  /* 12216 */ "G_VECREDUCE_SEQ_FMUL\0"
  /* 12237 */ "G_STRICT_FMUL\0"
  /* 12251 */ "G_VECREDUCE_MUL\0"
  /* 12267 */ "G_MUL\0"
  /* 12273 */ "G_FREM\0"
  /* 12280 */ "G_STRICT_FREM\0"
  /* 12294 */ "G_SREM\0"
  /* 12301 */ "G_UREM\0"
  /* 12308 */ "G_SDIVREM\0"
  /* 12318 */ "G_UDIVREM\0"
  /* 12328 */ "INLINEASM\0"
  /* 12338 */ "G_FMINIMUM\0"
  /* 12349 */ "G_FMAXIMUM\0"
  /* 12360 */ "G_FMINNUM\0"
  /* 12370 */ "G_FMAXNUM\0"
  /* 12380 */ "G_INTRINSIC_ROUNDEVEN\0"
  /* 12402 */ "G_ASSERT_ALIGN\0"
  /* 12417 */ "G_FCOPYSIGN\0"
  /* 12429 */ "G_VECREDUCE_FMIN\0"
  /* 12446 */ "G_ATOMICRMW_FMIN\0"
  /* 12463 */ "G_VECREDUCE_SMIN\0"
  /* 12480 */ "G_SMIN\0"
  /* 12487 */ "G_VECREDUCE_UMIN\0"
  /* 12504 */ "G_UMIN\0"
  /* 12511 */ "G_ATOMICRMW_UMIN\0"
  /* 12528 */ "G_ATOMICRMW_MIN\0"
  /* 12544 */ "G_FSIN\0"
  /* 12551 */ "END_FUNCTION\0"
  /* 12564 */ "CFI_INSTRUCTION\0"
  /* 12580 */ "FALLTHROUGH_RETURN\0"
  /* 12599 */ "ADJCALLSTACKDOWN\0"
  /* 12616 */ "G_SSUBO\0"
  /* 12624 */ "G_USUBO\0"
  /* 12632 */ "G_SADDO\0"
  /* 12640 */ "G_UADDO\0"
  /* 12648 */ "G_SMULO\0"
  /* 12656 */ "G_UMULO\0"
  /* 12664 */ "G_BZERO\0"
  /* 12672 */ "STACKMAP\0"
  /* 12681 */ "G_BSWAP\0"
  /* 12689 */ "G_SITOFP\0"
  /* 12698 */ "G_UITOFP\0"
  /* 12707 */ "G_FCMP\0"
  /* 12714 */ "G_ICMP\0"
  /* 12721 */ "NOP\0"
  /* 12725 */ "END_LOOP\0"
  /* 12734 */ "G_CTPOP\0"
  /* 12742 */ "anonymous_6250DATA_DROP\0"
  /* 12766 */ "anonymous_6249DATA_DROP\0"
  /* 12790 */ "PATCHABLE_OP\0"
  /* 12803 */ "FAULTING_OP\0"
  /* 12815 */ "ADJCALLSTACKUP\0"
  /* 12830 */ "PREALLOCATED_SETUP\0"
  /* 12849 */ "G_FEXP\0"
  /* 12856 */ "G_BR\0"
  /* 12861 */ "INLINEASM_BR\0"
  /* 12874 */ "G_BLOCK_ADDR\0"
  /* 12887 */ "PATCHABLE_FUNCTION_ENTER\0"
  /* 12912 */ "G_READCYCLECOUNTER\0"
  /* 12931 */ "G_READ_REGISTER\0"
  /* 12947 */ "G_WRITE_REGISTER\0"
  /* 12964 */ "G_ASHR\0"
  /* 12971 */ "G_FSHR\0"
  /* 12978 */ "G_LSHR\0"
  /* 12985 */ "G_FFLOOR\0"
  /* 12994 */ "G_BUILD_VECTOR\0"
  /* 13009 */ "G_SHUFFLE_VECTOR\0"
  /* 13026 */ "G_VECREDUCE_XOR\0"
  /* 13042 */ "G_XOR\0"
  /* 13048 */ "G_ATOMICRMW_XOR\0"
  /* 13064 */ "G_VECREDUCE_OR\0"
  /* 13079 */ "G_OR\0"
  /* 13084 */ "G_ATOMICRMW_OR\0"
  /* 13099 */ "G_ROTR\0"
  /* 13106 */ "G_INTTOPTR\0"
  /* 13117 */ "G_FABS\0"
  /* 13124 */ "G_ABS\0"
  /* 13130 */ "G_UNMERGE_VALUES\0"
  /* 13147 */ "G_MERGE_VALUES\0"
  /* 13162 */ "CALL_PARAMS\0"
  /* 13174 */ "G_FCOS\0"
  /* 13181 */ "G_CONCAT_VECTORS\0"
  /* 13198 */ "COPY_TO_REGCLASS\0"
  /* 13215 */ "G_IS_FPCLASS\0"
  /* 13228 */ "G_ATOMIC_CMPXCHG_WITH_SUCCESS\0"
  /* 13258 */ "BR_UNLESS\0"
  /* 13268 */ "G_INTRINSIC_W_SIDE_EFFECTS\0"
  /* 13295 */ "RET_CALL_RESULTS\0"
  /* 13312 */ "LOAD_F32_A32_S\0"
  /* 13327 */ "STORE_F32_A32_S\0"
  /* 13343 */ "ATOMIC_STORE16_I32_A32_S\0"
  /* 13368 */ "ATOMIC_STORE8_I32_A32_S\0"
  /* 13392 */ "ATOMIC_RMW16_U_SUB_I32_A32_S\0"
  /* 13421 */ "ATOMIC_RMW8_U_SUB_I32_A32_S\0"
  /* 13449 */ "ATOMIC_RMW_SUB_I32_A32_S\0"
  /* 13474 */ "ATOMIC_LOAD_I32_A32_S\0"
  /* 13496 */ "ATOMIC_RMW16_U_ADD_I32_A32_S\0"
  /* 13525 */ "ATOMIC_RMW8_U_ADD_I32_A32_S\0"
  /* 13553 */ "ATOMIC_RMW_ADD_I32_A32_S\0"
  /* 13578 */ "ATOMIC_RMW16_U_AND_I32_A32_S\0"
  /* 13607 */ "ATOMIC_RMW8_U_AND_I32_A32_S\0"
  /* 13635 */ "ATOMIC_RMW_AND_I32_A32_S\0"
  /* 13660 */ "ATOMIC_STORE_I32_A32_S\0"
  /* 13683 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A32_S\0"
  /* 13716 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A32_S\0"
  /* 13748 */ "ATOMIC_RMW_CMPXCHG_I32_A32_S\0"
  /* 13777 */ "ATOMIC_RMW16_U_XCHG_I32_A32_S\0"
  /* 13807 */ "ATOMIC_RMW8_U_XCHG_I32_A32_S\0"
  /* 13836 */ "ATOMIC_RMW_XCHG_I32_A32_S\0"
  /* 13862 */ "ATOMIC_RMW16_U_XOR_I32_A32_S\0"
  /* 13891 */ "ATOMIC_RMW8_U_XOR_I32_A32_S\0"
  /* 13919 */ "ATOMIC_RMW_XOR_I32_A32_S\0"
  /* 13944 */ "ATOMIC_RMW16_U_OR_I32_A32_S\0"
  /* 13972 */ "ATOMIC_RMW8_U_OR_I32_A32_S\0"
  /* 13999 */ "ATOMIC_RMW_OR_I32_A32_S\0"
  /* 14023 */ "LOAD16_S_I32_A32_S\0"
  /* 14042 */ "LOAD8_S_I32_A32_S\0"
  /* 14060 */ "ATOMIC_LOAD16_U_I32_A32_S\0"
  /* 14086 */ "ATOMIC_LOAD8_U_I32_A32_S\0"
  /* 14111 */ "MEMORY_ATOMIC_WAIT32_A32_S\0"
  /* 14138 */ "LOAD_LANE_I64x2_A32_S\0"
  /* 14160 */ "STORE_LANE_I64x2_A32_S\0"
  /* 14183 */ "LOAD_ZERO_I64x2_A32_S\0"
  /* 14205 */ "LOAD_EXTEND_S_I64x2_A32_S\0"
  /* 14231 */ "LOAD_EXTEND_U_I64x2_A32_S\0"
  /* 14257 */ "LOAD_F64_A32_S\0"
  /* 14272 */ "STORE_F64_A32_S\0"
  /* 14288 */ "ATOMIC_STORE32_I64_A32_S\0"
  /* 14313 */ "ATOMIC_STORE16_I64_A32_S\0"
  /* 14338 */ "ATOMIC_STORE8_I64_A32_S\0"
  /* 14362 */ "ATOMIC_RMW32_U_SUB_I64_A32_S\0"
  /* 14391 */ "ATOMIC_RMW16_U_SUB_I64_A32_S\0"
  /* 14420 */ "ATOMIC_RMW8_U_SUB_I64_A32_S\0"
  /* 14448 */ "ATOMIC_RMW_SUB_I64_A32_S\0"
  /* 14473 */ "ATOMIC_LOAD_I64_A32_S\0"
  /* 14495 */ "ATOMIC_RMW32_U_ADD_I64_A32_S\0"
  /* 14524 */ "ATOMIC_RMW16_U_ADD_I64_A32_S\0"
  /* 14553 */ "ATOMIC_RMW8_U_ADD_I64_A32_S\0"
  /* 14581 */ "ATOMIC_RMW_ADD_I64_A32_S\0"
  /* 14606 */ "ATOMIC_RMW32_U_AND_I64_A32_S\0"
  /* 14635 */ "ATOMIC_RMW16_U_AND_I64_A32_S\0"
  /* 14664 */ "ATOMIC_RMW8_U_AND_I64_A32_S\0"
  /* 14692 */ "ATOMIC_RMW_AND_I64_A32_S\0"
  /* 14717 */ "ATOMIC_STORE_I64_A32_S\0"
  /* 14740 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A32_S\0"
  /* 14773 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A32_S\0"
  /* 14806 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A32_S\0"
  /* 14838 */ "ATOMIC_RMW_CMPXCHG_I64_A32_S\0"
  /* 14867 */ "ATOMIC_RMW32_U_XCHG_I64_A32_S\0"
  /* 14897 */ "ATOMIC_RMW16_U_XCHG_I64_A32_S\0"
  /* 14927 */ "ATOMIC_RMW8_U_XCHG_I64_A32_S\0"
  /* 14956 */ "ATOMIC_RMW_XCHG_I64_A32_S\0"
  /* 14982 */ "ATOMIC_RMW32_U_XOR_I64_A32_S\0"
  /* 15011 */ "ATOMIC_RMW16_U_XOR_I64_A32_S\0"
  /* 15040 */ "ATOMIC_RMW8_U_XOR_I64_A32_S\0"
  /* 15068 */ "ATOMIC_RMW_XOR_I64_A32_S\0"
  /* 15093 */ "ATOMIC_RMW32_U_OR_I64_A32_S\0"
  /* 15121 */ "ATOMIC_RMW16_U_OR_I64_A32_S\0"
  /* 15149 */ "ATOMIC_RMW8_U_OR_I64_A32_S\0"
  /* 15176 */ "ATOMIC_RMW_OR_I64_A32_S\0"
  /* 15200 */ "LOAD32_S_I64_A32_S\0"
  /* 15219 */ "LOAD16_S_I64_A32_S\0"
  /* 15238 */ "LOAD8_S_I64_A32_S\0"
  /* 15256 */ "ATOMIC_LOAD32_U_I64_A32_S\0"
  /* 15282 */ "ATOMIC_LOAD16_U_I64_A32_S\0"
  /* 15308 */ "ATOMIC_LOAD8_U_I64_A32_S\0"
  /* 15333 */ "MEMORY_ATOMIC_WAIT64_A32_S\0"
  /* 15360 */ "LOAD_LANE_I32x4_A32_S\0"
  /* 15382 */ "STORE_LANE_I32x4_A32_S\0"
  /* 15405 */ "LOAD_ZERO_I32x4_A32_S\0"
  /* 15427 */ "LOAD_EXTEND_S_I32x4_A32_S\0"
  /* 15453 */ "LOAD_EXTEND_U_I32x4_A32_S\0"
  /* 15479 */ "LOAD_LANE_I8x16_A32_S\0"
  /* 15501 */ "STORE_LANE_I8x16_A32_S\0"
  /* 15524 */ "LOAD_V128_A32_S\0"
  /* 15540 */ "STORE_V128_A32_S\0"
  /* 15557 */ "LOAD_LANE_I16x8_A32_S\0"
  /* 15579 */ "STORE_LANE_I16x8_A32_S\0"
  /* 15602 */ "LOAD_EXTEND_S_I16x8_A32_S\0"
  /* 15628 */ "LOAD_EXTEND_U_I16x8_A32_S\0"
  /* 15654 */ "anonymous_4396MEMORY_SIZE_A32_S\0"
  /* 15686 */ "anonymous_6249MEMORY_FILL_A32_S\0"
  /* 15718 */ "LOAD32_SPLAT_A32_S\0"
  /* 15737 */ "LOAD64_SPLAT_A32_S\0"
  /* 15756 */ "LOAD16_SPLAT_A32_S\0"
  /* 15775 */ "LOAD8_SPLAT_A32_S\0"
  /* 15793 */ "anonymous_6249MEMORY_INIT_A32_S\0"
  /* 15825 */ "anonymous_4396MEMORY_GROW_A32_S\0"
  /* 15857 */ "MEMORY_ATOMIC_NOTIFY_A32_S\0"
  /* 15884 */ "anonymous_6249MEMORY_COPY_A32_S\0"
  /* 15916 */ "FP_TO_SINT_I32_F32_S\0"
  /* 15937 */ "FP_TO_UINT_I32_F32_S\0"
  /* 15958 */ "FP_TO_SINT_I64_F32_S\0"
  /* 15979 */ "FP_TO_UINT_I64_F32_S\0"
  /* 16000 */ "SUB_F32_S\0"
  /* 16010 */ "TRUNC_F32_S\0"
  /* 16022 */ "ADD_F32_S\0"
  /* 16032 */ "LOCAL_TEE_F32_S\0"
  /* 16048 */ "GE_F32_S\0"
  /* 16057 */ "LE_F32_S\0"
  /* 16066 */ "NE_F32_S\0"
  /* 16075 */ "F64_PROMOTE_F32_S\0"
  /* 16093 */ "NEG_F32_S\0"
  /* 16103 */ "CEIL_F32_S\0"
  /* 16114 */ "MUL_F32_S\0"
  /* 16124 */ "COPYSIGN_F32_S\0"
  /* 16139 */ "MIN_F32_S\0"
  /* 16149 */ "DROP_F32_S\0"
  /* 16160 */ "EQ_F32_S\0"
  /* 16169 */ "FLOOR_F32_S\0"
  /* 16181 */ "ABS_F32_S\0"
  /* 16191 */ "I32_TRUNC_S_F32_S\0"
  /* 16209 */ "I64_TRUNC_S_F32_S\0"
  /* 16227 */ "I32_TRUNC_S_SAT_F32_S\0"
  /* 16249 */ "I64_TRUNC_S_SAT_F32_S\0"
  /* 16271 */ "I32_TRUNC_U_SAT_F32_S\0"
  /* 16293 */ "I64_TRUNC_U_SAT_F32_S\0"
  /* 16315 */ "SELECT_F32_S\0"
  /* 16328 */ "GLOBAL_GET_F32_S\0"
  /* 16345 */ "LOCAL_GET_F32_S\0"
  /* 16361 */ "I32_REINTERPRET_F32_S\0"
  /* 16383 */ "GLOBAL_SET_F32_S\0"
  /* 16400 */ "LOCAL_SET_F32_S\0"
  /* 16416 */ "GT_F32_S\0"
  /* 16425 */ "LT_F32_S\0"
  /* 16434 */ "SQRT_F32_S\0"
  /* 16445 */ "NEAREST_F32_S\0"
  /* 16459 */ "CONST_F32_S\0"
  /* 16471 */ "I32_TRUNC_U_F32_S\0"
  /* 16489 */ "I64_TRUNC_U_F32_S\0"
  /* 16507 */ "DIV_F32_S\0"
  /* 16517 */ "MAX_F32_S\0"
  /* 16527 */ "COPY_F32_S\0"
  /* 16538 */ "SUB_I32_S\0"
  /* 16548 */ "ADD_I32_S\0"
  /* 16558 */ "AND_I32_S\0"
  /* 16568 */ "LOCAL_TEE_I32_S\0"
  /* 16584 */ "BR_TABLE_I32_S\0"
  /* 16599 */ "NE_I32_S\0"
  /* 16608 */ "SHL_I32_S\0"
  /* 16618 */ "ROTL_I32_S\0"
  /* 16629 */ "MUL_I32_S\0"
  /* 16639 */ "DROP_I32_S\0"
  /* 16650 */ "EQ_I32_S\0"
  /* 16659 */ "XOR_I32_S\0"
  /* 16669 */ "ROTR_I32_S\0"
  /* 16680 */ "I32_EXTEND16_S_I32_S\0"
  /* 16701 */ "I32_EXTEND8_S_I32_S\0"
  /* 16721 */ "I64_EXTEND_S_I32_S\0"
  /* 16740 */ "GE_S_I32_S\0"
  /* 16751 */ "LE_S_I32_S\0"
  /* 16762 */ "REM_S_I32_S\0"
  /* 16774 */ "SHR_S_I32_S\0"
  /* 16786 */ "GT_S_I32_S\0"
  /* 16797 */ "LT_S_I32_S\0"
  /* 16808 */ "F32_CONVERT_S_I32_S\0"
  /* 16828 */ "F64_CONVERT_S_I32_S\0"
  /* 16848 */ "DIV_S_I32_S\0"
  /* 16860 */ "SELECT_I32_S\0"
  /* 16873 */ "GLOBAL_GET_I32_S\0"
  /* 16890 */ "LOCAL_GET_I32_S\0"
  /* 16906 */ "F32_REINTERPRET_I32_S\0"
  /* 16928 */ "GLOBAL_SET_I32_S\0"
  /* 16945 */ "LOCAL_SET_I32_S\0"
  /* 16961 */ "POPCNT_I32_S\0"
  /* 16974 */ "CONST_I32_S\0"
  /* 16986 */ "I64_EXTEND_U_I32_S\0"
  /* 17005 */ "GE_U_I32_S\0"
  /* 17016 */ "LE_U_I32_S\0"
  /* 17027 */ "REM_U_I32_S\0"
  /* 17039 */ "SHR_U_I32_S\0"
  /* 17051 */ "GT_U_I32_S\0"
  /* 17062 */ "LT_U_I32_S\0"
  /* 17073 */ "F32_CONVERT_U_I32_S\0"
  /* 17093 */ "F64_CONVERT_U_I32_S\0"
  /* 17113 */ "DIV_U_I32_S\0"
  /* 17125 */ "COPY_I32_S\0"
  /* 17136 */ "CLZ_I32_S\0"
  /* 17146 */ "EQZ_I32_S\0"
  /* 17156 */ "CTZ_I32_S\0"
  /* 17166 */ "ARGUMENT_v4f32_S\0"
  /* 17183 */ "ARGUMENT_f32_S\0"
  /* 17198 */ "ARGUMENT_v4i32_S\0"
  /* 17215 */ "ARGUMENT_i32_S\0"
  /* 17230 */ "CONST_V128_F64x2_S\0"
  /* 17249 */ "SUB_F64x2_S\0"
  /* 17261 */ "TRUNC_F64x2_S\0"
  /* 17275 */ "NMADD_F64x2_S\0"
  /* 17289 */ "GE_F64x2_S\0"
  /* 17300 */ "LE_F64x2_S\0"
  /* 17311 */ "REPLACE_LANE_F64x2_S\0"
  /* 17332 */ "EXTRACT_LANE_F64x2_S\0"
  /* 17353 */ "NEG_F64x2_S\0"
  /* 17365 */ "CEIL_F64x2_S\0"
  /* 17378 */ "MUL_F64x2_S\0"
  /* 17390 */ "SIMD_RELAXED_FMIN_F64x2_S\0"
  /* 17416 */ "PMIN_F64x2_S\0"
  /* 17429 */ "EQ_F64x2_S\0"
  /* 17440 */ "FLOOR_F64x2_S\0"
  /* 17454 */ "ABS_F64x2_S\0"
  /* 17466 */ "SPLAT_F64x2_S\0"
  /* 17480 */ "GT_F64x2_S\0"
  /* 17491 */ "LT_F64x2_S\0"
  /* 17502 */ "SQRT_F64x2_S\0"
  /* 17515 */ "NEAREST_F64x2_S\0"
  /* 17531 */ "DIV_F64x2_S\0"
  /* 17543 */ "SIMD_RELAXED_FMAX_F64x2_S\0"
  /* 17569 */ "PMAX_F64x2_S\0"
  /* 17582 */ "convert_low_s_F64x2_S\0"
  /* 17604 */ "convert_low_u_F64x2_S\0"
  /* 17626 */ "promote_low_F64x2_S\0"
  /* 17646 */ "CONST_V128_I64x2_S\0"
  /* 17665 */ "SUB_I64x2_S\0"
  /* 17677 */ "ADD_I64x2_S\0"
  /* 17689 */ "REPLACE_LANE_I64x2_S\0"
  /* 17710 */ "EXTRACT_LANE_I64x2_S\0"
  /* 17731 */ "ALLTRUE_I64x2_S\0"
  /* 17747 */ "NEG_I64x2_S\0"
  /* 17759 */ "BITMASK_I64x2_S\0"
  /* 17775 */ "SHL_I64x2_S\0"
  /* 17787 */ "MUL_I64x2_S\0"
  /* 17799 */ "EQ_I64x2_S\0"
  /* 17810 */ "ABS_I64x2_S\0"
  /* 17822 */ "GE_S_I64x2_S\0"
  /* 17835 */ "LE_S_I64x2_S\0"
  /* 17848 */ "EXTMUL_HIGH_S_I64x2_S\0"
  /* 17870 */ "SHR_S_I64x2_S\0"
  /* 17884 */ "GT_S_I64x2_S\0"
  /* 17897 */ "LT_S_I64x2_S\0"
  /* 17910 */ "EXTMUL_LOW_S_I64x2_S\0"
  /* 17931 */ "SPLAT_I64x2_S\0"
  /* 17945 */ "LANESELECT_I64x2_S\0"
  /* 17964 */ "EXTMUL_HIGH_U_I64x2_S\0"
  /* 17986 */ "SHR_U_I64x2_S\0"
  /* 18000 */ "EXTMUL_LOW_U_I64x2_S\0"
  /* 18021 */ "extend_high_s_I64x2_S\0"
  /* 18043 */ "extend_low_s_I64x2_S\0"
  /* 18064 */ "extend_high_u_I64x2_S\0"
  /* 18086 */ "extend_low_u_I64x2_S\0"
  /* 18107 */ "LOAD_F32_A64_S\0"
  /* 18122 */ "STORE_F32_A64_S\0"
  /* 18138 */ "ATOMIC_STORE16_I32_A64_S\0"
  /* 18163 */ "ATOMIC_STORE8_I32_A64_S\0"
  /* 18187 */ "ATOMIC_RMW16_U_SUB_I32_A64_S\0"
  /* 18216 */ "ATOMIC_RMW8_U_SUB_I32_A64_S\0"
  /* 18244 */ "ATOMIC_RMW_SUB_I32_A64_S\0"
  /* 18269 */ "ATOMIC_LOAD_I32_A64_S\0"
  /* 18291 */ "ATOMIC_RMW16_U_ADD_I32_A64_S\0"
  /* 18320 */ "ATOMIC_RMW8_U_ADD_I32_A64_S\0"
  /* 18348 */ "ATOMIC_RMW_ADD_I32_A64_S\0"
  /* 18373 */ "ATOMIC_RMW16_U_AND_I32_A64_S\0"
  /* 18402 */ "ATOMIC_RMW8_U_AND_I32_A64_S\0"
  /* 18430 */ "ATOMIC_RMW_AND_I32_A64_S\0"
  /* 18455 */ "ATOMIC_STORE_I32_A64_S\0"
  /* 18478 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A64_S\0"
  /* 18511 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A64_S\0"
  /* 18543 */ "ATOMIC_RMW_CMPXCHG_I32_A64_S\0"
  /* 18572 */ "ATOMIC_RMW16_U_XCHG_I32_A64_S\0"
  /* 18602 */ "ATOMIC_RMW8_U_XCHG_I32_A64_S\0"
  /* 18631 */ "ATOMIC_RMW_XCHG_I32_A64_S\0"
  /* 18657 */ "ATOMIC_RMW16_U_XOR_I32_A64_S\0"
  /* 18686 */ "ATOMIC_RMW8_U_XOR_I32_A64_S\0"
  /* 18714 */ "ATOMIC_RMW_XOR_I32_A64_S\0"
  /* 18739 */ "ATOMIC_RMW16_U_OR_I32_A64_S\0"
  /* 18767 */ "ATOMIC_RMW8_U_OR_I32_A64_S\0"
  /* 18794 */ "ATOMIC_RMW_OR_I32_A64_S\0"
  /* 18818 */ "LOAD16_S_I32_A64_S\0"
  /* 18837 */ "LOAD8_S_I32_A64_S\0"
  /* 18855 */ "ATOMIC_LOAD16_U_I32_A64_S\0"
  /* 18881 */ "ATOMIC_LOAD8_U_I32_A64_S\0"
  /* 18906 */ "MEMORY_ATOMIC_WAIT32_A64_S\0"
  /* 18933 */ "LOAD_LANE_I64x2_A64_S\0"
  /* 18955 */ "STORE_LANE_I64x2_A64_S\0"
  /* 18978 */ "LOAD_ZERO_I64x2_A64_S\0"
  /* 19000 */ "LOAD_EXTEND_S_I64x2_A64_S\0"
  /* 19026 */ "LOAD_EXTEND_U_I64x2_A64_S\0"
  /* 19052 */ "LOAD_F64_A64_S\0"
  /* 19067 */ "STORE_F64_A64_S\0"
  /* 19083 */ "ATOMIC_STORE32_I64_A64_S\0"
  /* 19108 */ "ATOMIC_STORE16_I64_A64_S\0"
  /* 19133 */ "ATOMIC_STORE8_I64_A64_S\0"
  /* 19157 */ "ATOMIC_RMW32_U_SUB_I64_A64_S\0"
  /* 19186 */ "ATOMIC_RMW16_U_SUB_I64_A64_S\0"
  /* 19215 */ "ATOMIC_RMW8_U_SUB_I64_A64_S\0"
  /* 19243 */ "ATOMIC_RMW_SUB_I64_A64_S\0"
  /* 19268 */ "ATOMIC_LOAD_I64_A64_S\0"
  /* 19290 */ "ATOMIC_RMW32_U_ADD_I64_A64_S\0"
  /* 19319 */ "ATOMIC_RMW16_U_ADD_I64_A64_S\0"
  /* 19348 */ "ATOMIC_RMW8_U_ADD_I64_A64_S\0"
  /* 19376 */ "ATOMIC_RMW_ADD_I64_A64_S\0"
  /* 19401 */ "ATOMIC_RMW32_U_AND_I64_A64_S\0"
  /* 19430 */ "ATOMIC_RMW16_U_AND_I64_A64_S\0"
  /* 19459 */ "ATOMIC_RMW8_U_AND_I64_A64_S\0"
  /* 19487 */ "ATOMIC_RMW_AND_I64_A64_S\0"
  /* 19512 */ "ATOMIC_STORE_I64_A64_S\0"
  /* 19535 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A64_S\0"
  /* 19568 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A64_S\0"
  /* 19601 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A64_S\0"
  /* 19633 */ "ATOMIC_RMW_CMPXCHG_I64_A64_S\0"
  /* 19662 */ "ATOMIC_RMW32_U_XCHG_I64_A64_S\0"
  /* 19692 */ "ATOMIC_RMW16_U_XCHG_I64_A64_S\0"
  /* 19722 */ "ATOMIC_RMW8_U_XCHG_I64_A64_S\0"
  /* 19751 */ "ATOMIC_RMW_XCHG_I64_A64_S\0"
  /* 19777 */ "ATOMIC_RMW32_U_XOR_I64_A64_S\0"
  /* 19806 */ "ATOMIC_RMW16_U_XOR_I64_A64_S\0"
  /* 19835 */ "ATOMIC_RMW8_U_XOR_I64_A64_S\0"
  /* 19863 */ "ATOMIC_RMW_XOR_I64_A64_S\0"
  /* 19888 */ "ATOMIC_RMW32_U_OR_I64_A64_S\0"
  /* 19916 */ "ATOMIC_RMW16_U_OR_I64_A64_S\0"
  /* 19944 */ "ATOMIC_RMW8_U_OR_I64_A64_S\0"
  /* 19971 */ "ATOMIC_RMW_OR_I64_A64_S\0"
  /* 19995 */ "LOAD32_S_I64_A64_S\0"
  /* 20014 */ "LOAD16_S_I64_A64_S\0"
  /* 20033 */ "LOAD8_S_I64_A64_S\0"
  /* 20051 */ "ATOMIC_LOAD32_U_I64_A64_S\0"
  /* 20077 */ "ATOMIC_LOAD16_U_I64_A64_S\0"
  /* 20103 */ "ATOMIC_LOAD8_U_I64_A64_S\0"
  /* 20128 */ "MEMORY_ATOMIC_WAIT64_A64_S\0"
  /* 20155 */ "LOAD_LANE_I32x4_A64_S\0"
  /* 20177 */ "STORE_LANE_I32x4_A64_S\0"
  /* 20200 */ "LOAD_ZERO_I32x4_A64_S\0"
  /* 20222 */ "LOAD_EXTEND_S_I32x4_A64_S\0"
  /* 20248 */ "LOAD_EXTEND_U_I32x4_A64_S\0"
  /* 20274 */ "LOAD_LANE_I8x16_A64_S\0"
  /* 20296 */ "STORE_LANE_I8x16_A64_S\0"
  /* 20319 */ "LOAD_V128_A64_S\0"
  /* 20335 */ "STORE_V128_A64_S\0"
  /* 20352 */ "LOAD_LANE_I16x8_A64_S\0"
  /* 20374 */ "STORE_LANE_I16x8_A64_S\0"
  /* 20397 */ "LOAD_EXTEND_S_I16x8_A64_S\0"
  /* 20423 */ "LOAD_EXTEND_U_I16x8_A64_S\0"
  /* 20449 */ "anonymous_4397MEMORY_SIZE_A64_S\0"
  /* 20481 */ "anonymous_6250MEMORY_FILL_A64_S\0"
  /* 20513 */ "LOAD32_SPLAT_A64_S\0"
  /* 20532 */ "LOAD64_SPLAT_A64_S\0"
  /* 20551 */ "LOAD16_SPLAT_A64_S\0"
  /* 20570 */ "LOAD8_SPLAT_A64_S\0"
  /* 20588 */ "anonymous_6250MEMORY_INIT_A64_S\0"
  /* 20620 */ "anonymous_4397MEMORY_GROW_A64_S\0"
  /* 20652 */ "MEMORY_ATOMIC_NOTIFY_A64_S\0"
  /* 20679 */ "anonymous_6250MEMORY_COPY_A64_S\0"
  /* 20711 */ "FP_TO_SINT_I32_F64_S\0"
  /* 20732 */ "FP_TO_UINT_I32_F64_S\0"
  /* 20753 */ "FP_TO_SINT_I64_F64_S\0"
  /* 20774 */ "FP_TO_UINT_I64_F64_S\0"
  /* 20795 */ "SUB_F64_S\0"
  /* 20805 */ "TRUNC_F64_S\0"
  /* 20817 */ "ADD_F64_S\0"
  /* 20827 */ "LOCAL_TEE_F64_S\0"
  /* 20843 */ "GE_F64_S\0"
  /* 20852 */ "LE_F64_S\0"
  /* 20861 */ "NE_F64_S\0"
  /* 20870 */ "F32_DEMOTE_F64_S\0"
  /* 20887 */ "NEG_F64_S\0"
  /* 20897 */ "CEIL_F64_S\0"
  /* 20908 */ "MUL_F64_S\0"
  /* 20918 */ "COPYSIGN_F64_S\0"
  /* 20933 */ "MIN_F64_S\0"
  /* 20943 */ "DROP_F64_S\0"
  /* 20954 */ "EQ_F64_S\0"
  /* 20963 */ "FLOOR_F64_S\0"
  /* 20975 */ "ABS_F64_S\0"
  /* 20985 */ "I32_TRUNC_S_F64_S\0"
  /* 21003 */ "I64_TRUNC_S_F64_S\0"
  /* 21021 */ "I32_TRUNC_S_SAT_F64_S\0"
  /* 21043 */ "I64_TRUNC_S_SAT_F64_S\0"
  /* 21065 */ "I32_TRUNC_U_SAT_F64_S\0"
  /* 21087 */ "I64_TRUNC_U_SAT_F64_S\0"
  /* 21109 */ "SELECT_F64_S\0"
  /* 21122 */ "GLOBAL_GET_F64_S\0"
  /* 21139 */ "LOCAL_GET_F64_S\0"
  /* 21155 */ "I64_REINTERPRET_F64_S\0"
  /* 21177 */ "GLOBAL_SET_F64_S\0"
  /* 21194 */ "LOCAL_SET_F64_S\0"
  /* 21210 */ "GT_F64_S\0"
  /* 21219 */ "LT_F64_S\0"
  /* 21228 */ "SQRT_F64_S\0"
  /* 21239 */ "NEAREST_F64_S\0"
  /* 21253 */ "CONST_F64_S\0"
  /* 21265 */ "I32_TRUNC_U_F64_S\0"
  /* 21283 */ "I64_TRUNC_U_F64_S\0"
  /* 21301 */ "DIV_F64_S\0"
  /* 21311 */ "MAX_F64_S\0"
  /* 21321 */ "COPY_F64_S\0"
  /* 21332 */ "SUB_I64_S\0"
  /* 21342 */ "ADD_I64_S\0"
  /* 21352 */ "AND_I64_S\0"
  /* 21362 */ "LOCAL_TEE_I64_S\0"
  /* 21378 */ "BR_TABLE_I64_S\0"
  /* 21393 */ "NE_I64_S\0"
  /* 21402 */ "SHL_I64_S\0"
  /* 21412 */ "ROTL_I64_S\0"
  /* 21423 */ "MUL_I64_S\0"
  /* 21433 */ "I32_WRAP_I64_S\0"
  /* 21448 */ "DROP_I64_S\0"
  /* 21459 */ "EQ_I64_S\0"
  /* 21468 */ "XOR_I64_S\0"
  /* 21478 */ "ROTR_I64_S\0"
  /* 21489 */ "I64_EXTEND32_S_I64_S\0"
  /* 21510 */ "I64_EXTEND16_S_I64_S\0"
  /* 21531 */ "I64_EXTEND8_S_I64_S\0"
  /* 21551 */ "GE_S_I64_S\0"
  /* 21562 */ "LE_S_I64_S\0"
  /* 21573 */ "REM_S_I64_S\0"
  /* 21585 */ "SHR_S_I64_S\0"
  /* 21597 */ "GT_S_I64_S\0"
  /* 21608 */ "LT_S_I64_S\0"
  /* 21619 */ "F32_CONVERT_S_I64_S\0"
  /* 21639 */ "F64_CONVERT_S_I64_S\0"
  /* 21659 */ "DIV_S_I64_S\0"
  /* 21671 */ "SELECT_I64_S\0"
  /* 21684 */ "GLOBAL_GET_I64_S\0"
  /* 21701 */ "LOCAL_GET_I64_S\0"
  /* 21717 */ "F64_REINTERPRET_I64_S\0"
  /* 21739 */ "GLOBAL_SET_I64_S\0"
  /* 21756 */ "LOCAL_SET_I64_S\0"
  /* 21772 */ "POPCNT_I64_S\0"
  /* 21785 */ "CONST_I64_S\0"
  /* 21797 */ "GE_U_I64_S\0"
  /* 21808 */ "LE_U_I64_S\0"
  /* 21819 */ "REM_U_I64_S\0"
  /* 21831 */ "SHR_U_I64_S\0"
  /* 21843 */ "GT_U_I64_S\0"
  /* 21854 */ "LT_U_I64_S\0"
  /* 21865 */ "F32_CONVERT_U_I64_S\0"
  /* 21885 */ "F64_CONVERT_U_I64_S\0"
  /* 21905 */ "DIV_U_I64_S\0"
  /* 21917 */ "COPY_I64_S\0"
  /* 21928 */ "CLZ_I64_S\0"
  /* 21938 */ "EQZ_I64_S\0"
  /* 21948 */ "CTZ_I64_S\0"
  /* 21958 */ "ARGUMENT_v2f64_S\0"
  /* 21975 */ "ARGUMENT_f64_S\0"
  /* 21990 */ "ARGUMENT_v2i64_S\0"
  /* 22007 */ "ARGUMENT_i64_S\0"
  /* 22022 */ "CONST_V128_F32x4_S\0"
  /* 22041 */ "SUB_F32x4_S\0"
  /* 22053 */ "TRUNC_F32x4_S\0"
  /* 22067 */ "NMADD_F32x4_S\0"
  /* 22081 */ "GE_F32x4_S\0"
  /* 22092 */ "LE_F32x4_S\0"
  /* 22103 */ "REPLACE_LANE_F32x4_S\0"
  /* 22124 */ "EXTRACT_LANE_F32x4_S\0"
  /* 22145 */ "NEG_F32x4_S\0"
  /* 22157 */ "CEIL_F32x4_S\0"
  /* 22170 */ "MUL_F32x4_S\0"
  /* 22182 */ "SIMD_RELAXED_FMIN_F32x4_S\0"
  /* 22208 */ "PMIN_F32x4_S\0"
  /* 22221 */ "EQ_F32x4_S\0"
  /* 22232 */ "FLOOR_F32x4_S\0"
  /* 22246 */ "ABS_F32x4_S\0"
  /* 22258 */ "SPLAT_F32x4_S\0"
  /* 22272 */ "GT_F32x4_S\0"
  /* 22283 */ "LT_F32x4_S\0"
  /* 22294 */ "SQRT_F32x4_S\0"
  /* 22307 */ "NEAREST_F32x4_S\0"
  /* 22323 */ "DIV_F32x4_S\0"
  /* 22335 */ "SIMD_RELAXED_FMAX_F32x4_S\0"
  /* 22361 */ "PMAX_F32x4_S\0"
  /* 22374 */ "demote_zero_F32x4_S\0"
  /* 22394 */ "sint_to_fp_F32x4_S\0"
  /* 22413 */ "uint_to_fp_F32x4_S\0"
  /* 22432 */ "CONST_V128_I32x4_S\0"
  /* 22451 */ "SUB_I32x4_S\0"
  /* 22463 */ "ADD_I32x4_S\0"
  /* 22475 */ "REPLACE_LANE_I32x4_S\0"
  /* 22496 */ "EXTRACT_LANE_I32x4_S\0"
  /* 22517 */ "ALLTRUE_I32x4_S\0"
  /* 22533 */ "NEG_I32x4_S\0"
  /* 22545 */ "BITMASK_I32x4_S\0"
  /* 22561 */ "SHL_I32x4_S\0"
  /* 22573 */ "MUL_I32x4_S\0"
  /* 22585 */ "EQ_I32x4_S\0"
  /* 22596 */ "ABS_I32x4_S\0"
  /* 22608 */ "GE_S_I32x4_S\0"
  /* 22621 */ "LE_S_I32x4_S\0"
  /* 22634 */ "EXTMUL_HIGH_S_I32x4_S\0"
  /* 22656 */ "MIN_S_I32x4_S\0"
  /* 22670 */ "SHR_S_I32x4_S\0"
  /* 22684 */ "GT_S_I32x4_S\0"
  /* 22697 */ "LT_S_I32x4_S\0"
  /* 22710 */ "EXTMUL_LOW_S_I32x4_S\0"
  /* 22731 */ "MAX_S_I32x4_S\0"
  /* 22745 */ "SPLAT_I32x4_S\0"
  /* 22759 */ "LANESELECT_I32x4_S\0"
  /* 22778 */ "GE_U_I32x4_S\0"
  /* 22791 */ "LE_U_I32x4_S\0"
  /* 22804 */ "EXTMUL_HIGH_U_I32x4_S\0"
  /* 22826 */ "MIN_U_I32x4_S\0"
  /* 22840 */ "SHR_U_I32x4_S\0"
  /* 22854 */ "GT_U_I32x4_S\0"
  /* 22867 */ "LT_U_I32x4_S\0"
  /* 22880 */ "EXTMUL_LOW_U_I32x4_S\0"
  /* 22901 */ "MAX_U_I32x4_S\0"
  /* 22915 */ "int_wasm_relaxed_trunc_signed_I32x4_S\0"
  /* 22953 */ "int_wasm_extadd_pairwise_signed_I32x4_S\0"
  /* 22993 */ "int_wasm_relaxed_trunc_unsigned_I32x4_S\0"
  /* 23033 */ "int_wasm_extadd_pairwise_unsigned_I32x4_S\0"
  /* 23075 */ "int_wasm_relaxed_trunc_signed_zero_I32x4_S\0"
  /* 23118 */ "int_wasm_relaxed_trunc_unsigned_zero_I32x4_S\0"
  /* 23163 */ "extend_high_s_I32x4_S\0"
  /* 23185 */ "trunc_sat_zero_s_I32x4_S\0"
  /* 23210 */ "extend_low_s_I32x4_S\0"
  /* 23231 */ "fp_to_sint_I32x4_S\0"
  /* 23250 */ "fp_to_uint_I32x4_S\0"
  /* 23269 */ "extend_high_u_I32x4_S\0"
  /* 23291 */ "trunc_sat_zero_u_I32x4_S\0"
  /* 23316 */ "extend_low_u_I32x4_S\0"
  /* 23337 */ "ARGUMENT_v8i16_S\0"
  /* 23354 */ "CONST_V128_I8x16_S\0"
  /* 23373 */ "SUB_I8x16_S\0"
  /* 23385 */ "ADD_I8x16_S\0"
  /* 23397 */ "REPLACE_LANE_I8x16_S\0"
  /* 23418 */ "ALLTRUE_I8x16_S\0"
  /* 23434 */ "NEG_I8x16_S\0"
  /* 23446 */ "BITMASK_I8x16_S\0"
  /* 23462 */ "SHL_I8x16_S\0"
  /* 23474 */ "EQ_I8x16_S\0"
  /* 23485 */ "ABS_I8x16_S\0"
  /* 23497 */ "GE_S_I8x16_S\0"
  /* 23510 */ "LE_S_I8x16_S\0"
  /* 23523 */ "MIN_S_I8x16_S\0"
  /* 23537 */ "SHR_S_I8x16_S\0"
  /* 23551 */ "SUB_SAT_S_I8x16_S\0"
  /* 23569 */ "ADD_SAT_S_I8x16_S\0"
  /* 23587 */ "GT_S_I8x16_S\0"
  /* 23600 */ "LT_S_I8x16_S\0"
  /* 23613 */ "NARROW_S_I8x16_S\0"
  /* 23630 */ "MAX_S_I8x16_S\0"
  /* 23644 */ "SPLAT_I8x16_S\0"
  /* 23658 */ "LANESELECT_I8x16_S\0"
  /* 23677 */ "POPCNT_I8x16_S\0"
  /* 23692 */ "GE_U_I8x16_S\0"
  /* 23705 */ "LE_U_I8x16_S\0"
  /* 23718 */ "MIN_U_I8x16_S\0"
  /* 23732 */ "AVGR_U_I8x16_S\0"
  /* 23747 */ "SHR_U_I8x16_S\0"
  /* 23761 */ "SUB_SAT_U_I8x16_S\0"
  /* 23779 */ "ADD_SAT_U_I8x16_S\0"
  /* 23797 */ "GT_U_I8x16_S\0"
  /* 23810 */ "LT_U_I8x16_S\0"
  /* 23823 */ "NARROW_U_I8x16_S\0"
  /* 23840 */ "MAX_U_I8x16_S\0"
  /* 23854 */ "LOCAL_TEE_V128_S\0"
  /* 23871 */ "DROP_V128_S\0"
  /* 23883 */ "SELECT_V128_S\0"
  /* 23897 */ "GLOBAL_GET_V128_S\0"
  /* 23915 */ "LOCAL_GET_V128_S\0"
  /* 23932 */ "GLOBAL_SET_V128_S\0"
  /* 23950 */ "LOCAL_SET_V128_S\0"
  /* 23967 */ "COPY_V128_S\0"
  /* 23979 */ "ARGUMENT_v16i8_S\0"
  /* 23996 */ "CONST_V128_I16x8_S\0"
  /* 24015 */ "SUB_I16x8_S\0"
  /* 24027 */ "ADD_I16x8_S\0"
  /* 24039 */ "REPLACE_LANE_I16x8_S\0"
  /* 24060 */ "ALLTRUE_I16x8_S\0"
  /* 24076 */ "NEG_I16x8_S\0"
  /* 24088 */ "BITMASK_I16x8_S\0"
  /* 24104 */ "SHL_I16x8_S\0"
  /* 24116 */ "MUL_I16x8_S\0"
  /* 24128 */ "EQ_I16x8_S\0"
  /* 24139 */ "ABS_I16x8_S\0"
  /* 24151 */ "GE_S_I16x8_S\0"
  /* 24164 */ "LE_S_I16x8_S\0"
  /* 24177 */ "EXTMUL_HIGH_S_I16x8_S\0"
  /* 24199 */ "MIN_S_I16x8_S\0"
  /* 24213 */ "SHR_S_I16x8_S\0"
  /* 24227 */ "RELAXED_Q15MULR_S_I16x8_S\0"
  /* 24253 */ "SUB_SAT_S_I16x8_S\0"
  /* 24271 */ "ADD_SAT_S_I16x8_S\0"
  /* 24289 */ "Q15MULR_SAT_S_I16x8_S\0"
  /* 24311 */ "GT_S_I16x8_S\0"
  /* 24324 */ "LT_S_I16x8_S\0"
  /* 24337 */ "EXTMUL_LOW_S_I16x8_S\0"
  /* 24358 */ "NARROW_S_I16x8_S\0"
  /* 24375 */ "MAX_S_I16x8_S\0"
  /* 24389 */ "SPLAT_I16x8_S\0"
  /* 24403 */ "LANESELECT_I16x8_S\0"
  /* 24422 */ "GE_U_I16x8_S\0"
  /* 24435 */ "LE_U_I16x8_S\0"
  /* 24448 */ "EXTMUL_HIGH_U_I16x8_S\0"
  /* 24470 */ "MIN_U_I16x8_S\0"
  /* 24484 */ "AVGR_U_I16x8_S\0"
  /* 24499 */ "SHR_U_I16x8_S\0"
  /* 24513 */ "SUB_SAT_U_I16x8_S\0"
  /* 24531 */ "ADD_SAT_U_I16x8_S\0"
  /* 24549 */ "GT_U_I16x8_S\0"
  /* 24562 */ "LT_U_I16x8_S\0"
  /* 24575 */ "EXTMUL_LOW_U_I16x8_S\0"
  /* 24596 */ "NARROW_U_I16x8_S\0"
  /* 24613 */ "MAX_U_I16x8_S\0"
  /* 24627 */ "int_wasm_extadd_pairwise_signed_I16x8_S\0"
  /* 24667 */ "int_wasm_extadd_pairwise_unsigned_I16x8_S\0"
  /* 24709 */ "extend_high_s_I16x8_S\0"
  /* 24731 */ "extend_low_s_I16x8_S\0"
  /* 24752 */ "extend_high_u_I16x8_S\0"
  /* 24774 */ "extend_low_u_I16x8_S\0"
  /* 24795 */ "RELAXED_DOT_ADD_S\0"
  /* 24813 */ "AND_S\0"
  /* 24819 */ "END_S\0"
  /* 24825 */ "ATOMIC_FENCE_S\0"
  /* 24840 */ "COMPILER_FENCE_S\0"
  /* 24857 */ "DEBUG_UNREACHABLE_S\0"
  /* 24877 */ "SHUFFLE_S\0"
  /* 24887 */ "RELAXED_SWIZZLE_S\0"
  /* 24905 */ "ELSE_S\0"
  /* 24912 */ "DELEGATE_S\0"
  /* 24923 */ "ANYTRUE_S\0"
  /* 24933 */ "TABLE_SIZE_S\0"
  /* 24946 */ "LOCAL_TEE_FUNCREF_S\0"
  /* 24966 */ "TABLE_FILL_FUNCREF_S\0"
  /* 24987 */ "REF_NULL_FUNCREF_S\0"
  /* 25006 */ "REF_IS_NULL_FUNCREF_S\0"
  /* 25028 */ "DROP_FUNCREF_S\0"
  /* 25043 */ "SELECT_FUNCREF_S\0"
  /* 25060 */ "TABLE_GET_FUNCREF_S\0"
  /* 25080 */ "GLOBAL_GET_FUNCREF_S\0"
  /* 25101 */ "LOCAL_GET_FUNCREF_S\0"
  /* 25121 */ "TABLE_SET_FUNCREF_S\0"
  /* 25141 */ "GLOBAL_SET_FUNCREF_S\0"
  /* 25162 */ "LOCAL_SET_FUNCREF_S\0"
  /* 25182 */ "TABLE_GROW_FUNCREF_S\0"
  /* 25203 */ "COPY_FUNCREF_S\0"
  /* 25218 */ "LOCAL_TEE_EXTERNREF_S\0"
  /* 25240 */ "TABLE_FILL_EXTERNREF_S\0"
  /* 25263 */ "REF_NULL_EXTERNREF_S\0"
  /* 25284 */ "REF_IS_NULL_EXTERNREF_S\0"
  /* 25308 */ "DROP_EXTERNREF_S\0"
  /* 25325 */ "SELECT_EXTERNREF_S\0"
  /* 25344 */ "TABLE_GET_EXTERNREF_S\0"
  /* 25366 */ "GLOBAL_GET_EXTERNREF_S\0"
  /* 25389 */ "LOCAL_GET_EXTERNREF_S\0"
  /* 25411 */ "TABLE_SET_EXTERNREF_S\0"
  /* 25433 */ "GLOBAL_SET_EXTERNREF_S\0"
  /* 25456 */ "LOCAL_SET_EXTERNREF_S\0"
  /* 25478 */ "TABLE_GROW_EXTERNREF_S\0"
  /* 25501 */ "COPY_EXTERNREF_S\0"
  /* 25518 */ "END_IF_S\0"
  /* 25527 */ "BR_IF_S\0"
  /* 25535 */ "CATCH_S\0"
  /* 25543 */ "END_BLOCK_S\0"
  /* 25555 */ "RET_CALL_S\0"
  /* 25566 */ "CATCH_ALL_S\0"
  /* 25578 */ "END_FUNCTION_S\0"
  /* 25593 */ "FALLTHROUGH_RETURN_S\0"
  /* 25614 */ "ADJCALLSTACKDOWN_S\0"
  /* 25633 */ "NOP_S\0"
  /* 25639 */ "END_LOOP_S\0"
  /* 25650 */ "anonymous_6250DATA_DROP_S\0"
  /* 25676 */ "anonymous_6249DATA_DROP_S\0"
  /* 25702 */ "ADJCALLSTACKUP_S\0"
  /* 25719 */ "BR_S\0"
  /* 25724 */ "XOR_S\0"
  /* 25730 */ "CALL_PARAMS_S\0"
  /* 25744 */ "BR_UNLESS_S\0"
  /* 25756 */ "RET_CALL_RESULTS_S\0"
  /* 25775 */ "RELAXED_DOT_BFLOAT_S\0"
  /* 25796 */ "BITSELECT_S\0"
  /* 25808 */ "RET_CALL_INDIRECT_S\0"
  /* 25828 */ "CATCHRET_S\0"
  /* 25839 */ "CLEANUPRET_S\0"
  /* 25852 */ "RELAXED_DOT_S\0"
  /* 25866 */ "ANDNOT_S\0"
  /* 25875 */ "RETHROW_S\0"
  /* 25885 */ "TABLE_COPY_S\0"
  /* 25898 */ "END_TRY_S\0"
  /* 25908 */ "ARGUMENT_funcref_S\0"
  /* 25927 */ "ARGUMENT_externref_S\0"
  /* 25948 */ "EXTRACT_LANE_I8x16_s_S\0"
  /* 25971 */ "EXTRACT_LANE_I16x8_s_S\0"
  /* 25994 */ "EXTRACT_LANE_I8x16_u_S\0"
  /* 26017 */ "EXTRACT_LANE_I16x8_u_S\0"
  /* 26040 */ "RELAXED_DOT_BFLOAT\0"
  /* 26059 */ "G_SSUBSAT\0"
  /* 26069 */ "G_USUBSAT\0"
  /* 26079 */ "G_SADDSAT\0"
  /* 26089 */ "G_UADDSAT\0"
  /* 26099 */ "G_SSHLSAT\0"
  /* 26109 */ "G_USHLSAT\0"
  /* 26119 */ "G_SMULFIXSAT\0"
  /* 26132 */ "G_UMULFIXSAT\0"
  /* 26145 */ "G_SDIVFIXSAT\0"
  /* 26158 */ "G_UDIVFIXSAT\0"
  /* 26171 */ "G_EXTRACT\0"
  /* 26181 */ "BITSELECT\0"
  /* 26191 */ "G_SELECT\0"
  /* 26200 */ "G_BRINDIRECT\0"
  /* 26213 */ "RET_CALL_INDIRECT\0"
  /* 26231 */ "CATCHRET\0"
  /* 26240 */ "CLEANUPRET\0"
  /* 26251 */ "PATCHABLE_RET\0"
  /* 26265 */ "G_MEMSET\0"
  /* 26274 */ "PATCHABLE_FUNCTION_EXIT\0"
  /* 26298 */ "G_BRJT\0"
  /* 26305 */ "G_EXTRACT_VECTOR_ELT\0"
  /* 26326 */ "G_INSERT_VECTOR_ELT\0"
  /* 26346 */ "G_FCONSTANT\0"
  /* 26358 */ "G_CONSTANT\0"
  /* 26369 */ "STATEPOINT\0"
  /* 26380 */ "PATCHPOINT\0"
  /* 26391 */ "G_PTRTOINT\0"
  /* 26402 */ "G_FRINT\0"
  /* 26410 */ "G_INTRINSIC_LRINT\0"
  /* 26428 */ "G_FNEARBYINT\0"
  /* 26441 */ "RELAXED_DOT\0"
  /* 26453 */ "ANDNOT\0"
  /* 26460 */ "G_VASTART\0"
  /* 26470 */ "LIFETIME_START\0"
  /* 26485 */ "G_INSERT\0"
  /* 26494 */ "G_FSQRT\0"
  /* 26502 */ "G_STRICT_FSQRT\0"
  /* 26517 */ "G_BITCAST\0"
  /* 26527 */ "G_ADDRSPACE_CAST\0"
  /* 26544 */ "DBG_VALUE_LIST\0"
  /* 26559 */ "G_FPEXT\0"
  /* 26567 */ "G_SEXT\0"
  /* 26574 */ "G_ASSERT_SEXT\0"
  /* 26588 */ "G_ANYEXT\0"
  /* 26597 */ "G_ZEXT\0"
  /* 26604 */ "G_ASSERT_ZEXT\0"
  /* 26618 */ "G_FDIV\0"
  /* 26625 */ "G_STRICT_FDIV\0"
  /* 26639 */ "G_SDIV\0"
  /* 26646 */ "G_UDIV\0"
  /* 26653 */ "G_FPOW\0"
  /* 26660 */ "RETHROW\0"
  /* 26668 */ "G_VECREDUCE_FMAX\0"
  /* 26685 */ "G_ATOMICRMW_FMAX\0"
  /* 26702 */ "G_VECREDUCE_SMAX\0"
  /* 26719 */ "G_SMAX\0"
  /* 26726 */ "G_VECREDUCE_UMAX\0"
  /* 26743 */ "G_UMAX\0"
  /* 26750 */ "G_ATOMICRMW_UMAX\0"
  /* 26767 */ "G_ATOMICRMW_MAX\0"
  /* 26783 */ "G_FRAME_INDEX\0"
  /* 26797 */ "G_SBFX\0"
  /* 26804 */ "G_UBFX\0"
  /* 26811 */ "G_SMULFIX\0"
  /* 26821 */ "G_UMULFIX\0"
  /* 26831 */ "G_SDIVFIX\0"
  /* 26841 */ "G_UDIVFIX\0"
  /* 26851 */ "G_MEMCPY\0"
  /* 26860 */ "TABLE_COPY\0"
  /* 26871 */ "END_TRY\0"
  /* 26879 */ "G_CTLZ\0"
  /* 26886 */ "G_CTTZ\0"
  /* 26893 */ "ARGUMENT_funcref\0"
  /* 26910 */ "ARGUMENT_externref\0"
  /* 26929 */ "EXTRACT_LANE_I8x16_s\0"
  /* 26950 */ "EXTRACT_LANE_I16x8_s\0"
  /* 26971 */ "EXTRACT_LANE_I8x16_u\0"
  /* 26992 */ "EXTRACT_LANE_I16x8_u\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

extern const unsigned WebAssemblyInstrNameIndices[] = {
    11945U, 12328U, 12861U, 12564U, 12014U, 11995U, 12023U, 12180U, 
    11797U, 11812U, 11234U, 11839U, 13198U, 11117U, 26544U, 11763U, 
    11941U, 12004U, 10916U, 26866U, 11006U, 26470U, 10737U, 10839U, 
    10889U, 12672U, 12158U, 26380U, 10822U, 12830U, 11902U, 26369U, 
    11053U, 12803U, 12790U, 12887U, 26251U, 26274U, 12081U, 12137U, 
    12110U, 12040U, 26574U, 26604U, 12402U, 10634U, 10345U, 12267U, 
    26639U, 26646U, 12294U, 12301U, 12308U, 12318U, 10715U, 13079U, 
    13042U, 11232U, 11943U, 26783U, 11127U, 26171U, 13130U, 26485U, 
    13147U, 12994U, 10415U, 13181U, 26391U, 13106U, 26517U, 11160U, 
    10796U, 10389U, 10778U, 26410U, 12380U, 12912U, 10535U, 10479U, 
    10509U, 10520U, 10460U, 10490U, 11082U, 11066U, 13228U, 11853U, 
    11870U, 10666U, 10351U, 10721U, 10682U, 13084U, 13048U, 26767U, 
    12528U, 26750U, 12511U, 10601U, 10328U, 26685U, 12446U, 10881U, 
    10750U, 26200U, 10367U, 13268U, 26588U, 10407U, 26358U, 26346U, 
    26460U, 11894U, 26567U, 11826U, 26597U, 12067U, 12978U, 12964U, 
    12060U, 12971U, 13099U, 12185U, 12714U, 12707U, 26191U, 12640U, 
    10937U, 12624U, 10860U, 12632U, 10929U, 12616U, 10852U, 12656U, 
    12648U, 11933U, 11925U, 26089U, 26079U, 26069U, 26059U, 26109U, 
    26099U, 26811U, 26821U, 26119U, 26132U, 26831U, 26841U, 26145U, 
    26158U, 10559U, 10307U, 12209U, 10288U, 10453U, 26618U, 12273U, 
    26653U, 11967U, 12849U, 3543U, 11887U, 3535U, 0U, 11790U, 
    26559U, 10379U, 11949U, 11958U, 12689U, 12698U, 13117U, 12417U, 
    13215U, 11169U, 12360U, 12370U, 10945U, 10960U, 12338U, 12349U, 
    10640U, 11985U, 12480U, 26719U, 12504U, 26743U, 13124U, 10769U, 
    10759U, 12856U, 26298U, 26326U, 26305U, 13009U, 26886U, 11214U, 
    26879U, 11196U, 12734U, 12681U, 11095U, 12073U, 13174U, 12544U, 
    26494U, 12985U, 26402U, 26428U, 26527U, 12874U, 10993U, 10436U, 
    10587U, 10314U, 12237U, 26625U, 12280U, 10294U, 26502U, 12931U, 
    12947U, 26851U, 11037U, 11150U, 26265U, 12664U, 10566U, 12216U, 
    10542U, 12192U, 26668U, 12429U, 10618U, 12251U, 10699U, 13064U, 
    13026U, 26702U, 12463U, 26726U, 12487U, 26797U, 26804U, 13162U, 
    25730U, 13299U, 25760U, 26231U, 25828U, 26240U, 25839U, 10901U, 
    24840U, 13295U, 25756U, 2634U, 16181U, 8035U, 22246U, 6942U, 
    20975U, 3745U, 17454U, 9704U, 24139U, 8339U, 22596U, 4055U, 
    17810U, 9138U, 23485U, 2503U, 16022U, 7882U, 22069U, 6812U, 
    20817U, 3592U, 17277U, 9608U, 24027U, 2953U, 16548U, 8224U, 
    22463U, 7261U, 21342U, 3940U, 17677U, 9052U, 23385U, 9820U, 
    24271U, 9210U, 23569U, 10048U, 24531U, 9392U, 23779U, 12599U, 
    25614U, 12815U, 25702U, 9637U, 24060U, 8272U, 22517U, 3988U, 
    17731U, 9081U, 23418U, 10695U, 26453U, 25866U, 2961U, 16558U, 
    7269U, 21352U, 24813U, 11142U, 24923U, 26910U, 25927U, 3494U, 
    17183U, 7800U, 21975U, 26893U, 25908U, 3522U, 17215U, 7828U, 
    22007U, 9566U, 23979U, 7785U, 21958U, 7813U, 21990U, 3479U, 
    17166U, 3507U, 17198U, 9010U, 23337U, 10868U, 24825U, 699U, 
    14060U, 5008U, 18855U, 1827U, 15282U, 6136U, 20077U, 1803U, 
    15256U, 6112U, 20051U, 723U, 14086U, 5032U, 18881U, 1851U, 
    15308U, 6160U, 20103U, 157U, 13474U, 4466U, 18269U, 1078U, 
    14473U, 5387U, 19268U, 177U, 13496U, 4486U, 18291U, 1125U, 
    14524U, 5434U, 19319U, 253U, 13578U, 4562U, 18373U, 1228U, 
    14635U, 5537U, 19430U, 350U, 13683U, 4659U, 18478U, 1356U, 
    14773U, 5665U, 19568U, 593U, 13944U, 4902U, 18739U, 1680U, 
    15121U, 5989U, 19916U, 81U, 13392U, 4390U, 18187U, 1002U, 
    14391U, 5311U, 19186U, 438U, 13777U, 4747U, 18572U, 1472U, 
    14897U, 5781U, 19692U, 517U, 13862U, 4826U, 18657U, 1578U, 
    15011U, 5887U, 19806U, 1098U, 14495U, 5407U, 19290U, 1201U, 
    14606U, 5510U, 19401U, 1325U, 14740U, 5634U, 19535U, 1654U, 
    15093U, 5963U, 19888U, 975U, 14362U, 5284U, 19157U, 1444U, 
    14867U, 5753U, 19662U, 1551U, 14982U, 5860U, 19777U, 204U, 
    13525U, 4513U, 18320U, 1152U, 14553U, 5461U, 19348U, 280U, 
    13607U, 4589U, 18402U, 1255U, 14664U, 5564U, 19459U, 381U, 
    13716U, 4690U, 18511U, 1387U, 14806U, 5696U, 19601U, 619U, 
    13972U, 4928U, 18767U, 1706U, 15149U, 6015U, 19944U, 108U, 
    13421U, 4417U, 18216U, 1029U, 14420U, 5338U, 19215U, 466U, 
    13807U, 4775U, 18602U, 1500U, 14927U, 5809U, 19722U, 544U, 
    13891U, 4853U, 18686U, 1605U, 15040U, 5914U, 19835U, 230U, 
    13553U, 4539U, 18348U, 1178U, 14581U, 5487U, 19376U, 306U, 
    13635U, 4615U, 18430U, 1281U, 14692U, 5590U, 19487U, 411U, 
    13748U, 4720U, 18543U, 1417U, 14838U, 5726U, 19633U, 644U, 
    13999U, 4953U, 18794U, 1731U, 15176U, 6040U, 19971U, 134U, 
    13449U, 4443U, 18244U, 1055U, 14448U, 5364U, 19243U, 493U, 
    13836U, 4802U, 18631U, 1527U, 14956U, 5836U, 19751U, 570U, 
    13919U, 4879U, 18714U, 1631U, 15068U, 5940U, 19863U, 36U, 
    13343U, 4345U, 18138U, 930U, 14313U, 5239U, 19108U, 907U, 
    14288U, 5216U, 19083U, 59U, 13368U, 4368U, 18163U, 953U, 
    14338U, 5262U, 19133U, 329U, 13660U, 4638U, 18455U, 1304U, 
    14717U, 5613U, 19512U, 10007U, 24484U, 9351U, 23732U, 9661U, 
    24088U, 8296U, 22545U, 4012U, 17759U, 9105U, 23446U, 26181U, 
    25796U, 11979U, 25547U, 12858U, 11784U, 25527U, 25719U, 2983U, 
    16584U, 7291U, 21378U, 13258U, 25744U, 12096U, 26217U, 25812U, 
    25559U, 11919U, 12170U, 25566U, 25535U, 2570U, 16103U, 7958U, 
    22157U, 6878U, 20897U, 3668U, 17365U, 3455U, 17136U, 7761U, 
    21928U, 2878U, 16459U, 7186U, 21253U, 3317U, 16974U, 7640U, 
    21785U, 7841U, 22022U, 3551U, 17230U, 9581U, 23996U, 8197U, 
    22432U, 3913U, 17646U, 9025U, 23354U, 2587U, 16124U, 6895U, 
    20918U, 11748U, 25501U, 2936U, 16527U, 7244U, 21321U, 11478U, 
    25203U, 3446U, 17125U, 7752U, 21917U, 9556U, 23967U, 3471U, 
    17156U, 7777U, 21948U, 10975U, 24857U, 11108U, 24912U, 2920U, 
    16507U, 8100U, 22323U, 7228U, 21301U, 3810U, 17531U, 3207U, 
    16848U, 7530U, 21659U, 3436U, 17113U, 7742U, 21905U, 26449U, 
    25860U, 11573U, 25308U, 2608U, 16149U, 6916U, 20943U, 11321U, 
    25028U, 3028U, 16639U, 7349U, 21448U, 9472U, 23871U, 11090U, 
    24905U, 10746U, 11975U, 25543U, 12551U, 25578U, 11777U, 25518U, 
    12725U, 25639U, 24819U, 26871U, 25898U, 3463U, 17146U, 7769U, 
    21938U, 2617U, 16160U, 8014U, 22221U, 6925U, 20954U, 3724U, 
    17429U, 9695U, 24128U, 3037U, 16650U, 8330U, 22585U, 7358U, 
    21459U, 4046U, 17799U, 9129U, 23474U, 9736U, 24177U, 8371U, 
    22634U, 4087U, 17848U, 9975U, 24448U, 8519U, 22804U, 4189U, 
    17964U, 9878U, 24337U, 8437U, 22710U, 4141U, 17910U, 10086U, 
    24575U, 8585U, 22880U, 4221U, 18000U, 7929U, 22124U, 3639U, 
    17332U, 26950U, 25971U, 26992U, 26017U, 8253U, 22496U, 3969U, 
    17710U, 26929U, 25948U, 26971U, 25994U, 3171U, 16808U, 7494U, 
    21619U, 3400U, 17073U, 7706U, 21865U, 6855U, 20870U, 3257U, 
    16906U, 3189U, 16828U, 7512U, 21639U, 3418U, 17093U, 7724U, 
    21885U, 2546U, 16075U, 7580U, 21717U, 12580U, 25593U, 2624U, 
    16169U, 8023U, 22232U, 6932U, 20963U, 3733U, 17440U, 2409U, 
    15916U, 6718U, 20711U, 2447U, 15958U, 6756U, 20753U, 2428U, 
    15937U, 6737U, 20732U, 2466U, 15979U, 6775U, 20774U, 2525U, 
    16048U, 7892U, 22081U, 6834U, 20843U, 3602U, 17289U, 9714U, 
    24151U, 3115U, 16740U, 8349U, 22608U, 7438U, 21551U, 4065U, 
    17822U, 9148U, 23497U, 9953U, 24422U, 3344U, 17005U, 8497U, 
    22778U, 7650U, 21797U, 9317U, 23692U, 11625U, 25366U, 2765U, 
    16328U, 7073U, 21122U, 11367U, 25080U, 3228U, 16873U, 7551U, 
    21684U, 9494U, 23897U, 11686U, 25433U, 2814U, 16383U, 7122U, 
    21177U, 11422U, 25141U, 3277U, 16928U, 7600U, 21739U, 9525U, 
    23932U, 2843U, 16416U, 8057U, 22272U, 7151U, 21210U, 3767U, 
    17480U, 9856U, 24311U, 3153U, 16786U, 8415U, 22684U, 7476U, 
    21597U, 4119U, 17884U, 9226U, 23587U, 10064U, 24549U, 3382U, 
    17051U, 8563U, 22854U, 7688U, 21843U, 9408U, 23797U, 3061U, 
    16680U, 3080U, 16701U, 2794U, 16361U, 2642U, 16191U, 6950U, 
    20985U, 2674U, 16227U, 6982U, 21021U, 2888U, 16471U, 7196U, 
    21265U, 2714U, 16271U, 7022U, 21065U, 7336U, 21433U, 7401U, 
    21510U, 7382U, 21489U, 7420U, 21531U, 3098U, 16721U, 3327U, 
    16986U, 7102U, 21155U, 2658U, 16209U, 6966U, 21003U, 2694U, 
    16249U, 7002U, 21043U, 2904U, 16489U, 7212U, 21283U, 2734U, 
    16293U, 7042U, 21087U, 11781U, 25522U, 9936U, 24403U, 8480U, 
    22759U, 4172U, 17945U, 9287U, 23658U, 2532U, 16057U, 7901U, 
    22092U, 6841U, 20852U, 3611U, 17300U, 9725U, 24164U, 3124U, 
    16751U, 8360U, 22621U, 7447U, 21562U, 4076U, 17835U, 9159U, 
    23510U, 9964U, 24435U, 3353U, 17016U, 8508U, 22791U, 7659U, 
    21808U, 9328U, 23705U, 2261U, 15756U, 6570U, 20551U, 666U, 
    14023U, 4975U, 18818U, 1770U, 15219U, 6079U, 20014U, 706U, 
    14067U, 5015U, 18862U, 1834U, 15289U, 6143U, 20084U, 2227U, 
    15718U, 6536U, 20513U, 1753U, 15200U, 6062U, 19995U, 1810U, 
    15263U, 6119U, 20058U, 2244U, 15737U, 6553U, 20532U, 2278U, 
    15775U, 6587U, 20570U, 683U, 14042U, 4992U, 18837U, 1787U, 
    15238U, 6096U, 20033U, 730U, 14093U, 5039U, 18888U, 1858U, 
    15315U, 6167U, 20110U, 2119U, 15602U, 6428U, 20397U, 1960U, 
    15427U, 6269U, 20222U, 832U, 14205U, 5141U, 19000U, 2143U, 
    15628U, 6452U, 20423U, 1984U, 15453U, 6293U, 20248U, 856U, 
    14231U, 5165U, 19026U, 9U, 13312U, 4318U, 18107U, 880U, 
    14257U, 5189U, 19052U, 164U, 13481U, 4473U, 18276U, 1085U, 
    14480U, 5394U, 19275U, 2078U, 15557U, 6387U, 20352U, 1899U, 
    15360U, 6208U, 20155U, 771U, 14138U, 5080U, 18933U, 2008U, 
    15479U, 6317U, 20274U, 2049U, 15524U, 6358U, 20319U, 1940U, 
    15405U, 6249U, 20200U, 812U, 14183U, 5121U, 18978U, 11646U, 
    25389U, 2780U, 16345U, 7088U, 21139U, 11386U, 25101U, 3243U, 
    16890U, 7566U, 21701U, 9510U, 23915U, 11707U, 25456U, 2829U, 
    16400U, 7137U, 21194U, 11441U, 25162U, 3292U, 16945U, 7615U, 
    21756U, 9541U, 23950U, 11491U, 25218U, 2511U, 16032U, 6820U, 
    20827U, 11247U, 24946U, 2969U, 16568U, 7277U, 21362U, 9457U, 
    23854U, 12729U, 25643U, 2850U, 16425U, 8066U, 22283U, 7158U, 
    21219U, 3776U, 17491U, 9867U, 24324U, 3162U, 16797U, 8426U, 
    22697U, 7485U, 21608U, 4130U, 17897U, 9237U, 23600U, 10075U, 
    24562U, 3391U, 17062U, 8574U, 22867U, 7697U, 21854U, 9419U, 
    23810U, 7881U, 22068U, 3591U, 17276U, 2928U, 16517U, 8124U, 
    22349U, 7236U, 21311U, 3834U, 17557U, 9912U, 24375U, 8456U, 
    22731U, 9263U, 23630U, 10120U, 24613U, 8604U, 22901U, 9445U, 
    23840U, 2354U, 15857U, 6663U, 20652U, 746U, 14111U, 5055U, 
    18906U, 1874U, 15333U, 6183U, 20128U, 2600U, 16139U, 7993U, 
    22196U, 6908U, 20933U, 3703U, 17404U, 9756U, 24199U, 8391U, 
    22656U, 9170U, 23523U, 9995U, 24470U, 8539U, 22826U, 9339U, 
    23718U, 2579U, 16114U, 7969U, 22170U, 6887U, 20908U, 3679U, 
    17378U, 9685U, 24116U, 3020U, 16629U, 8320U, 22573U, 7328U, 
    21423U, 4036U, 17787U, 9897U, 24358U, 9248U, 23613U, 10105U, 
    24596U, 9430U, 23823U, 2866U, 16445U, 8086U, 22307U, 7174U, 
    21239U, 3796U, 17515U, 2562U, 16093U, 7948U, 22145U, 6870U, 
    20887U, 3658U, 17353U, 9651U, 24076U, 8286U, 22533U, 4002U, 
    17747U, 9095U, 23434U, 2539U, 16066U, 7920U, 22113U, 6848U, 
    20861U, 3630U, 17321U, 9628U, 24049U, 2996U, 16599U, 8244U, 
    22485U, 7304U, 21393U, 3960U, 17699U, 9072U, 23407U, 7880U, 
    22067U, 3590U, 17275U, 12721U, 25633U, 26456U, 25869U, 12991U, 
    3045U, 16660U, 7366U, 21469U, 25725U, 8134U, 22361U, 3844U, 
    17569U, 8003U, 22208U, 3713U, 17416U, 3306U, 16961U, 7629U, 
    21772U, 9304U, 23677U, 9836U, 24289U, 11551U, 25284U, 11301U, 
    25006U, 11532U, 25263U, 11284U, 24987U, 26441U, 10650U, 24795U, 
    26040U, 25775U, 25852U, 9780U, 24227U, 11021U, 24887U, 3133U, 
    16762U, 7456U, 21573U, 3362U, 17027U, 7668U, 21819U, 7910U, 
    22103U, 3620U, 17311U, 9618U, 24039U, 8234U, 22475U, 3950U, 
    17689U, 9062U, 23397U, 26660U, 25875U, 12592U, 25605U, 12101U, 
    26213U, 25808U, 25555U, 3011U, 16618U, 7319U, 21412U, 3052U, 
    16669U, 7373U, 21478U, 11588U, 25325U, 2754U, 16315U, 7062U, 
    21109U, 11334U, 25043U, 3217U, 16860U, 7540U, 21671U, 9482U, 
    23883U, 9675U, 24104U, 3003U, 16608U, 8310U, 22561U, 7311U, 
    21402U, 4026U, 17775U, 9119U, 23462U, 9768U, 24213U, 3143U, 
    16774U, 8403U, 22670U, 7466U, 21585U, 4107U, 17870U, 9182U, 
    23537U, 10020U, 24499U, 3372U, 17039U, 8551U, 22840U, 7678U, 
    21831U, 4209U, 17986U, 9364U, 23747U, 11013U, 24877U, 8110U, 
    22335U, 3820U, 17543U, 7979U, 22182U, 3689U, 17390U, 8045U, 
    22258U, 3755U, 17466U, 9924U, 24389U, 8468U, 22745U, 4160U, 
    17931U, 9275U, 23644U, 2857U, 16434U, 8075U, 22294U, 7165U, 
    21228U, 3785U, 17502U, 43U, 13350U, 4352U, 18145U, 937U, 
    14320U, 5246U, 19115U, 914U, 14295U, 5223U, 19090U, 66U, 
    13375U, 4375U, 18170U, 960U, 14345U, 5269U, 19140U, 22U, 
    13327U, 4331U, 18122U, 893U, 14272U, 5202U, 19067U, 336U, 
    13667U, 4645U, 18462U, 1311U, 14724U, 5620U, 19519U, 2098U, 
    15579U, 6407U, 20374U, 1919U, 15382U, 6228U, 20177U, 791U, 
    14160U, 5100U, 18955U, 2028U, 15501U, 6337U, 20296U, 2063U, 
    15540U, 6372U, 20335U, 2485U, 16000U, 7858U, 22041U, 6794U, 
    20795U, 3568U, 17249U, 9598U, 24015U, 2945U, 16538U, 8214U, 
    22451U, 7253U, 21332U, 3930U, 17665U, 9042U, 23373U, 9804U, 
    24253U, 9194U, 23551U, 10032U, 24513U, 9376U, 23761U, 11029U, 
    24895U, 26860U, 25885U, 11511U, 25240U, 11265U, 24966U, 11605U, 
    25344U, 11349U, 25060U, 11727U, 25478U, 11459U, 25182U, 11666U, 
    25411U, 11404U, 25121U, 11185U, 24933U, 11497U, 25224U, 2517U, 
    16038U, 6826U, 20833U, 11253U, 24952U, 2975U, 16574U, 7283U, 
    21368U, 9463U, 23860U, 26662U, 25877U, 2493U, 16010U, 7868U, 
    22053U, 6802U, 20805U, 3578U, 17261U, 26875U, 25902U, 10981U, 
    24863U, 13038U, 3044U, 16659U, 7365U, 21468U, 25724U, 2324U, 
    15825U, 2167U, 15654U, 6633U, 20620U, 6476U, 20449U, 12766U, 
    25676U, 2379U, 15884U, 2197U, 15686U, 2294U, 15793U, 12742U, 
    25650U, 6688U, 20679U, 6506U, 20481U, 6603U, 20588U, 3855U, 
    17582U, 3875U, 17604U, 8145U, 22374U, 10210U, 24709U, 8852U, 
    23163U, 4240U, 18021U, 10249U, 24752U, 8948U, 23269U, 4279U, 
    18064U, 10230U, 24731U, 8895U, 23210U, 4260U, 18043U, 10269U, 
    24774U, 8991U, 23316U, 4299U, 18086U, 8914U, 23231U, 8931U, 
    23250U, 10132U, 24627U, 8652U, 22953U, 10170U, 24667U, 8728U, 
    23033U, 8616U, 22915U, 8768U, 23075U, 8690U, 22993U, 8809U, 
    23118U, 3895U, 17626U, 8163U, 22394U, 8872U, 23185U, 8968U, 
    23291U, 8180U, 22413U, 
};

static inline void InitWebAssemblyMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(WebAssemblyInsts, WebAssemblyInstrNameIndices, WebAssemblyInstrNameData, nullptr, nullptr, 1747);
}

} // end namespace llvm
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct WebAssemblyGenInstrInfo : public TargetInstrInfo {
  explicit WebAssemblyGenInstrInfo(unsigned CFSetupOpcode = ~0u, unsigned CFDestroyOpcode = ~0u, unsigned CatchRetOpcode = ~0u, unsigned ReturnOpcode = ~0u);
  ~WebAssemblyGenInstrInfo() override = default;

};
} // end namespace llvm
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_HELPER_DECLS
#undef GET_INSTRINFO_HELPER_DECLS


#endif // GET_INSTRINFO_HELPER_DECLS

#ifdef GET_INSTRINFO_HELPERS
#undef GET_INSTRINFO_HELPERS

#endif // GET_INSTRINFO_HELPERS

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc WebAssemblyInsts[];
extern const unsigned WebAssemblyInstrNameIndices[];
extern const char WebAssemblyInstrNameData[];
WebAssemblyGenInstrInfo::WebAssemblyGenInstrInfo(unsigned CFSetupOpcode, unsigned CFDestroyOpcode, unsigned CatchRetOpcode, unsigned ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(WebAssemblyInsts, WebAssemblyInstrNameIndices, WebAssemblyInstrNameData, nullptr, nullptr, 1747);
}
} // end namespace llvm
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace WebAssembly {
namespace OpName {
enum {
  addr = 3,
  count = 9,
  dst = 0,
  exp = 5,
  idx = 7,
  new_ = 6,
  off = 2,
  p2align = 1,
  timeout = 10,
  val = 4,
  vec = 8,
  OPERAND_LAST
};
} // end namespace OpName
} // end namespace WebAssembly
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  static const int16_t OperandMap [][11] = {
{0, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, },
{0, 1, 2, 3, 4, -1, -1, -1, -1, -1, -1, },
{0, 1, 2, 3, -1, 4, 5, -1, -1, -1, -1, },
{0, 1, 2, 3, -1, 4, -1, -1, -1, -1, 5, },
{0, 1, 2, 3, -1, -1, -1, -1, -1, 4, -1, },
{0, 1, 2, 4, -1, -1, -1, 3, 5, -1, -1, },
{-1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, 0, 1, 2, 3, -1, -1, -1, -1, -1, -1, },
{-1, 0, 1, 2, -1, -1, -1, -1, 3, -1, -1, },
{-1, 0, 1, 3, -1, -1, -1, 2, 4, -1, -1, },
{-1, 0, 1, -1, -1, -1, -1, 2, -1, -1, -1, },
};
  switch(Opcode) {
  case WebAssembly::ATOMIC_LOAD16_U_I32_A32:
  case WebAssembly::ATOMIC_LOAD16_U_I32_A64:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A32:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A64:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD_I32_A32:
  case WebAssembly::ATOMIC_LOAD_I32_A64:
  case WebAssembly::ATOMIC_LOAD_I64_A32:
  case WebAssembly::ATOMIC_LOAD_I64_A64:
  case WebAssembly::LOAD16_SPLAT_A32:
  case WebAssembly::LOAD16_SPLAT_A64:
  case WebAssembly::LOAD16_S_I32_A32:
  case WebAssembly::LOAD16_S_I32_A64:
  case WebAssembly::LOAD16_S_I64_A32:
  case WebAssembly::LOAD16_S_I64_A64:
  case WebAssembly::LOAD16_U_I32_A32:
  case WebAssembly::LOAD16_U_I32_A64:
  case WebAssembly::LOAD16_U_I64_A32:
  case WebAssembly::LOAD16_U_I64_A64:
  case WebAssembly::LOAD32_SPLAT_A32:
  case WebAssembly::LOAD32_SPLAT_A64:
  case WebAssembly::LOAD32_S_I64_A32:
  case WebAssembly::LOAD32_S_I64_A64:
  case WebAssembly::LOAD32_U_I64_A32:
  case WebAssembly::LOAD32_U_I64_A64:
  case WebAssembly::LOAD64_SPLAT_A32:
  case WebAssembly::LOAD64_SPLAT_A64:
  case WebAssembly::LOAD8_SPLAT_A32:
  case WebAssembly::LOAD8_SPLAT_A64:
  case WebAssembly::LOAD8_S_I32_A32:
  case WebAssembly::LOAD8_S_I32_A64:
  case WebAssembly::LOAD8_S_I64_A32:
  case WebAssembly::LOAD8_S_I64_A64:
  case WebAssembly::LOAD8_U_I32_A32:
  case WebAssembly::LOAD8_U_I32_A64:
  case WebAssembly::LOAD8_U_I64_A32:
  case WebAssembly::LOAD8_U_I64_A64:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A32:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A64:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A32:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A64:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A32:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A64:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A32:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A64:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A32:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A64:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A32:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A64:
  case WebAssembly::LOAD_F32_A32:
  case WebAssembly::LOAD_F32_A64:
  case WebAssembly::LOAD_F64_A32:
  case WebAssembly::LOAD_F64_A64:
  case WebAssembly::LOAD_I32_A32:
  case WebAssembly::LOAD_I32_A64:
  case WebAssembly::LOAD_I64_A32:
  case WebAssembly::LOAD_I64_A64:
  case WebAssembly::LOAD_V128_A32:
  case WebAssembly::LOAD_V128_A64:
  case WebAssembly::LOAD_ZERO_I32x4_A32:
  case WebAssembly::LOAD_ZERO_I32x4_A64:
  case WebAssembly::LOAD_ZERO_I64x2_A32:
  case WebAssembly::LOAD_ZERO_I64x2_A64:
    return OperandMap[0][NamedIdx];
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A64:
    return OperandMap[1][NamedIdx];
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64:
    return OperandMap[2][NamedIdx];
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A32:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A64:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A32:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A64:
    return OperandMap[3][NamedIdx];
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A32:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A64:
    return OperandMap[4][NamedIdx];
  case WebAssembly::LOAD_LANE_I16x8_A32:
  case WebAssembly::LOAD_LANE_I16x8_A64:
  case WebAssembly::LOAD_LANE_I32x4_A32:
  case WebAssembly::LOAD_LANE_I32x4_A64:
  case WebAssembly::LOAD_LANE_I64x2_A32:
  case WebAssembly::LOAD_LANE_I64x2_A64:
  case WebAssembly::LOAD_LANE_I8x16_A32:
  case WebAssembly::LOAD_LANE_I8x16_A64:
  case WebAssembly::STORE_LANE_I16x8_A64:
  case WebAssembly::STORE_LANE_I32x4_A64:
  case WebAssembly::STORE_LANE_I64x2_A64:
  case WebAssembly::STORE_LANE_I8x16_A64:
    return OperandMap[5][NamedIdx];
  case WebAssembly::ATOMIC_LOAD16_U_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD16_U_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_STORE16_I32_A32_S:
  case WebAssembly::ATOMIC_STORE16_I32_A64_S:
  case WebAssembly::ATOMIC_STORE16_I64_A32_S:
  case WebAssembly::ATOMIC_STORE16_I64_A64_S:
  case WebAssembly::ATOMIC_STORE32_I64_A32_S:
  case WebAssembly::ATOMIC_STORE32_I64_A64_S:
  case WebAssembly::ATOMIC_STORE8_I32_A32_S:
  case WebAssembly::ATOMIC_STORE8_I32_A64_S:
  case WebAssembly::ATOMIC_STORE8_I64_A32_S:
  case WebAssembly::ATOMIC_STORE8_I64_A64_S:
  case WebAssembly::ATOMIC_STORE_I32_A32_S:
  case WebAssembly::ATOMIC_STORE_I32_A64_S:
  case WebAssembly::ATOMIC_STORE_I64_A32_S:
  case WebAssembly::ATOMIC_STORE_I64_A64_S:
  case WebAssembly::LOAD16_SPLAT_A32_S:
  case WebAssembly::LOAD16_SPLAT_A64_S:
  case WebAssembly::LOAD16_S_I32_A32_S:
  case WebAssembly::LOAD16_S_I32_A64_S:
  case WebAssembly::LOAD16_S_I64_A32_S:
  case WebAssembly::LOAD16_S_I64_A64_S:
  case WebAssembly::LOAD16_U_I32_A32_S:
  case WebAssembly::LOAD16_U_I32_A64_S:
  case WebAssembly::LOAD16_U_I64_A32_S:
  case WebAssembly::LOAD16_U_I64_A64_S:
  case WebAssembly::LOAD32_SPLAT_A32_S:
  case WebAssembly::LOAD32_SPLAT_A64_S:
  case WebAssembly::LOAD32_S_I64_A32_S:
  case WebAssembly::LOAD32_S_I64_A64_S:
  case WebAssembly::LOAD32_U_I64_A32_S:
  case WebAssembly::LOAD32_U_I64_A64_S:
  case WebAssembly::LOAD64_SPLAT_A32_S:
  case WebAssembly::LOAD64_SPLAT_A64_S:
  case WebAssembly::LOAD8_SPLAT_A32_S:
  case WebAssembly::LOAD8_SPLAT_A64_S:
  case WebAssembly::LOAD8_S_I32_A32_S:
  case WebAssembly::LOAD8_S_I32_A64_S:
  case WebAssembly::LOAD8_S_I64_A32_S:
  case WebAssembly::LOAD8_S_I64_A64_S:
  case WebAssembly::LOAD8_U_I32_A32_S:
  case WebAssembly::LOAD8_U_I32_A64_S:
  case WebAssembly::LOAD8_U_I64_A32_S:
  case WebAssembly::LOAD8_U_I64_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A64_S:
  case WebAssembly::LOAD_F32_A32_S:
  case WebAssembly::LOAD_F32_A64_S:
  case WebAssembly::LOAD_F64_A32_S:
  case WebAssembly::LOAD_F64_A64_S:
  case WebAssembly::LOAD_I32_A32_S:
  case WebAssembly::LOAD_I32_A64_S:
  case WebAssembly::LOAD_I64_A32_S:
  case WebAssembly::LOAD_I64_A64_S:
  case WebAssembly::LOAD_V128_A32_S:
  case WebAssembly::LOAD_V128_A64_S:
  case WebAssembly::LOAD_ZERO_I32x4_A32_S:
  case WebAssembly::LOAD_ZERO_I32x4_A64_S:
  case WebAssembly::LOAD_ZERO_I64x2_A32_S:
  case WebAssembly::LOAD_ZERO_I64x2_A64_S:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S:
  case WebAssembly::STORE16_I32_A32_S:
  case WebAssembly::STORE16_I32_A64_S:
  case WebAssembly::STORE16_I64_A32_S:
  case WebAssembly::STORE16_I64_A64_S:
  case WebAssembly::STORE32_I64_A32_S:
  case WebAssembly::STORE32_I64_A64_S:
  case WebAssembly::STORE8_I32_A32_S:
  case WebAssembly::STORE8_I32_A64_S:
  case WebAssembly::STORE8_I64_A32_S:
  case WebAssembly::STORE8_I64_A64_S:
  case WebAssembly::STORE_F32_A32_S:
  case WebAssembly::STORE_F32_A64_S:
  case WebAssembly::STORE_F64_A32_S:
  case WebAssembly::STORE_F64_A64_S:
  case WebAssembly::STORE_I32_A32_S:
  case WebAssembly::STORE_I32_A64_S:
  case WebAssembly::STORE_I64_A32_S:
  case WebAssembly::STORE_I64_A64_S:
  case WebAssembly::STORE_V128_A32_S:
  case WebAssembly::STORE_V128_A64_S:
    return OperandMap[6][NamedIdx];
  case WebAssembly::ATOMIC_STORE16_I32_A32:
  case WebAssembly::ATOMIC_STORE16_I32_A64:
  case WebAssembly::ATOMIC_STORE16_I64_A32:
  case WebAssembly::ATOMIC_STORE16_I64_A64:
  case WebAssembly::ATOMIC_STORE32_I64_A32:
  case WebAssembly::ATOMIC_STORE32_I64_A64:
  case WebAssembly::ATOMIC_STORE8_I32_A32:
  case WebAssembly::ATOMIC_STORE8_I32_A64:
  case WebAssembly::ATOMIC_STORE8_I64_A32:
  case WebAssembly::ATOMIC_STORE8_I64_A64:
  case WebAssembly::ATOMIC_STORE_I32_A32:
  case WebAssembly::ATOMIC_STORE_I32_A64:
  case WebAssembly::ATOMIC_STORE_I64_A32:
  case WebAssembly::ATOMIC_STORE_I64_A64:
  case WebAssembly::STORE16_I32_A32:
  case WebAssembly::STORE16_I32_A64:
  case WebAssembly::STORE16_I64_A32:
  case WebAssembly::STORE16_I64_A64:
  case WebAssembly::STORE32_I64_A32:
  case WebAssembly::STORE32_I64_A64:
  case WebAssembly::STORE8_I32_A32:
  case WebAssembly::STORE8_I32_A64:
  case WebAssembly::STORE8_I64_A32:
  case WebAssembly::STORE8_I64_A64:
  case WebAssembly::STORE_F32_A32:
  case WebAssembly::STORE_F32_A64:
  case WebAssembly::STORE_F64_A32:
  case WebAssembly::STORE_F64_A64:
  case WebAssembly::STORE_I32_A32:
  case WebAssembly::STORE_I32_A64:
  case WebAssembly::STORE_I64_A32:
  case WebAssembly::STORE_I64_A64:
    return OperandMap[7][NamedIdx];
  case WebAssembly::STORE_V128_A32:
  case WebAssembly::STORE_V128_A64:
    return OperandMap[8][NamedIdx];
  case WebAssembly::STORE_LANE_I16x8_A32:
  case WebAssembly::STORE_LANE_I32x4_A32:
  case WebAssembly::STORE_LANE_I64x2_A32:
  case WebAssembly::STORE_LANE_I8x16_A32:
    return OperandMap[9][NamedIdx];
  case WebAssembly::LOAD_LANE_I16x8_A32_S:
  case WebAssembly::LOAD_LANE_I16x8_A64_S:
  case WebAssembly::LOAD_LANE_I32x4_A32_S:
  case WebAssembly::LOAD_LANE_I32x4_A64_S:
  case WebAssembly::LOAD_LANE_I64x2_A32_S:
  case WebAssembly::LOAD_LANE_I64x2_A64_S:
  case WebAssembly::LOAD_LANE_I8x16_A32_S:
  case WebAssembly::LOAD_LANE_I8x16_A64_S:
  case WebAssembly::STORE_LANE_I16x8_A32_S:
  case WebAssembly::STORE_LANE_I16x8_A64_S:
  case WebAssembly::STORE_LANE_I32x4_A32_S:
  case WebAssembly::STORE_LANE_I32x4_A64_S:
  case WebAssembly::STORE_LANE_I64x2_A32_S:
  case WebAssembly::STORE_LANE_I64x2_A64_S:
  case WebAssembly::STORE_LANE_I8x16_A32_S:
  case WebAssembly::STORE_LANE_I8x16_A64_S:
    return OperandMap[10][NamedIdx];
  default: return -1;
  }
}
} // end namespace WebAssembly
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace WebAssembly {
namespace OpTypes {
enum OperandType {
  P2Align = 0,
  Signature = 1,
  TypeIndex = 2,
  bb_op = 3,
  brlist = 4,
  f32imm = 5,
  f32imm_op = 6,
  f64imm = 7,
  f64imm_op = 8,
  function32_op = 9,
  global_op32 = 10,
  global_op64 = 11,
  i16imm = 12,
  i1imm = 13,
  i32imm = 14,
  i32imm_op = 15,
  i64imm = 16,
  i64imm_op = 17,
  i8imm = 18,
  local_op = 19,
  offset32_op = 20,
  offset64_op = 21,
  ptype0 = 22,
  ptype1 = 23,
  ptype2 = 24,
  ptype3 = 25,
  ptype4 = 26,
  ptype5 = 27,
  table32_op = 28,
  tag_op = 29,
  type0 = 30,
  type1 = 31,
  type2 = 32,
  type3 = 33,
  type4 = 34,
  type5 = 35,
  untyped_imm_0 = 36,
  vec_i16imm_op = 37,
  vec_i32imm_op = 38,
  vec_i64imm_op = 39,
  vec_i8imm_op = 40,
  EXTERNREF = 41,
  F32 = 42,
  F64 = 43,
  FUNCREF = 44,
  I32 = 45,
  I64 = 46,
  V128 = 47,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRINFO_OPERAND_TYPE
#undef GET_INSTRINFO_OPERAND_TYPE
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
static int getOperandType(uint16_t Opcode, uint16_t OpIdx) {
  const uint16_t Offsets[] = {
    /* PHI */
    0,
    /* INLINEASM */
    1,
    /* INLINEASM_BR */
    1,
    /* CFI_INSTRUCTION */
    1,
    /* EH_LABEL */
    2,
    /* GC_LABEL */
    3,
    /* ANNOTATION_LABEL */
    4,
    /* KILL */
    5,
    /* EXTRACT_SUBREG */
    5,
    /* INSERT_SUBREG */
    8,
    /* IMPLICIT_DEF */
    12,
    /* SUBREG_TO_REG */
    13,
    /* COPY_TO_REGCLASS */
    17,
    /* DBG_VALUE */
    20,
    /* DBG_VALUE_LIST */
    20,
    /* DBG_INSTR_REF */
    20,
    /* DBG_PHI */
    20,
    /* DBG_LABEL */
    20,
    /* REG_SEQUENCE */
    21,
    /* COPY */
    23,
    /* BUNDLE */
    25,
    /* LIFETIME_START */
    25,
    /* LIFETIME_END */
    26,
    /* PSEUDO_PROBE */
    27,
    /* ARITH_FENCE */
    31,
    /* STACKMAP */
    33,
    /* FENTRY_CALL */
    35,
    /* PATCHPOINT */
    35,
    /* LOAD_STACK_GUARD */
    41,
    /* PREALLOCATED_SETUP */
    42,
    /* PREALLOCATED_ARG */
    43,
    /* STATEPOINT */
    46,
    /* LOCAL_ESCAPE */
    46,
    /* FAULTING_OP */
    48,
    /* PATCHABLE_OP */
    49,
    /* PATCHABLE_FUNCTION_ENTER */
    49,
    /* PATCHABLE_RET */
    49,
    /* PATCHABLE_FUNCTION_EXIT */
    49,
    /* PATCHABLE_TAIL_CALL */
    49,
    /* PATCHABLE_EVENT_CALL */
    49,
    /* PATCHABLE_TYPED_EVENT_CALL */
    51,
    /* ICALL_BRANCH_FUNNEL */
    54,
    /* G_ASSERT_SEXT */
    54,
    /* G_ASSERT_ZEXT */
    57,
    /* G_ASSERT_ALIGN */
    60,
    /* G_ADD */
    63,
    /* G_SUB */
    66,
    /* G_MUL */
    69,
    /* G_SDIV */
    72,
    /* G_UDIV */
    75,
    /* G_SREM */
    78,
    /* G_UREM */
    81,
    /* G_SDIVREM */
    84,
    /* G_UDIVREM */
    88,
    /* G_AND */
    92,
    /* G_OR */
    95,
    /* G_XOR */
    98,
    /* G_IMPLICIT_DEF */
    101,
    /* G_PHI */
    102,
    /* G_FRAME_INDEX */
    103,
    /* G_GLOBAL_VALUE */
    105,
    /* G_EXTRACT */
    107,
    /* G_UNMERGE_VALUES */
    110,
    /* G_INSERT */
    112,
    /* G_MERGE_VALUES */
    116,
    /* G_BUILD_VECTOR */
    118,
    /* G_BUILD_VECTOR_TRUNC */
    120,
    /* G_CONCAT_VECTORS */
    122,
    /* G_PTRTOINT */
    124,
    /* G_INTTOPTR */
    126,
    /* G_BITCAST */
    128,
    /* G_FREEZE */
    130,
    /* G_INTRINSIC_FPTRUNC_ROUND */
    132,
    /* G_INTRINSIC_TRUNC */
    135,
    /* G_INTRINSIC_ROUND */
    137,
    /* G_INTRINSIC_LRINT */
    139,
    /* G_INTRINSIC_ROUNDEVEN */
    141,
    /* G_READCYCLECOUNTER */
    143,
    /* G_LOAD */
    144,
    /* G_SEXTLOAD */
    146,
    /* G_ZEXTLOAD */
    148,
    /* G_INDEXED_LOAD */
    150,
    /* G_INDEXED_SEXTLOAD */
    155,
    /* G_INDEXED_ZEXTLOAD */
    160,
    /* G_STORE */
    165,
    /* G_INDEXED_STORE */
    167,
    /* G_ATOMIC_CMPXCHG_WITH_SUCCESS */
    172,
    /* G_ATOMIC_CMPXCHG */
    177,
    /* G_ATOMICRMW_XCHG */
    181,
    /* G_ATOMICRMW_ADD */
    184,
    /* G_ATOMICRMW_SUB */
    187,
    /* G_ATOMICRMW_AND */
    190,
    /* G_ATOMICRMW_NAND */
    193,
    /* G_ATOMICRMW_OR */
    196,
    /* G_ATOMICRMW_XOR */
    199,
    /* G_ATOMICRMW_MAX */
    202,
    /* G_ATOMICRMW_MIN */
    205,
    /* G_ATOMICRMW_UMAX */
    208,
    /* G_ATOMICRMW_UMIN */
    211,
    /* G_ATOMICRMW_FADD */
    214,
    /* G_ATOMICRMW_FSUB */
    217,
    /* G_ATOMICRMW_FMAX */
    220,
    /* G_ATOMICRMW_FMIN */
    223,
    /* G_FENCE */
    226,
    /* G_BRCOND */
    228,
    /* G_BRINDIRECT */
    230,
    /* G_INTRINSIC */
    231,
    /* G_INTRINSIC_W_SIDE_EFFECTS */
    232,
    /* G_ANYEXT */
    233,
    /* G_TRUNC */
    235,
    /* G_CONSTANT */
    237,
    /* G_FCONSTANT */
    239,
    /* G_VASTART */
    241,
    /* G_VAARG */
    242,
    /* G_SEXT */
    245,
    /* G_SEXT_INREG */
    247,
    /* G_ZEXT */
    250,
    /* G_SHL */
    252,
    /* G_LSHR */
    255,
    /* G_ASHR */
    258,
    /* G_FSHL */
    261,
    /* G_FSHR */
    265,
    /* G_ROTR */
    269,
    /* G_ROTL */
    272,
    /* G_ICMP */
    275,
    /* G_FCMP */
    279,
    /* G_SELECT */
    283,
    /* G_UADDO */
    287,
    /* G_UADDE */
    291,
    /* G_USUBO */
    296,
    /* G_USUBE */
    300,
    /* G_SADDO */
    305,
    /* G_SADDE */
    309,
    /* G_SSUBO */
    314,
    /* G_SSUBE */
    318,
    /* G_UMULO */
    323,
    /* G_SMULO */
    327,
    /* G_UMULH */
    331,
    /* G_SMULH */
    334,
    /* G_UADDSAT */
    337,
    /* G_SADDSAT */
    340,
    /* G_USUBSAT */
    343,
    /* G_SSUBSAT */
    346,
    /* G_USHLSAT */
    349,
    /* G_SSHLSAT */
    352,
    /* G_SMULFIX */
    355,
    /* G_UMULFIX */
    359,
    /* G_SMULFIXSAT */
    363,
    /* G_UMULFIXSAT */
    367,
    /* G_SDIVFIX */
    371,
    /* G_UDIVFIX */
    375,
    /* G_SDIVFIXSAT */
    379,
    /* G_UDIVFIXSAT */
    383,
    /* G_FADD */
    387,
    /* G_FSUB */
    390,
    /* G_FMUL */
    393,
    /* G_FMA */
    396,
    /* G_FMAD */
    400,
    /* G_FDIV */
    404,
    /* G_FREM */
    407,
    /* G_FPOW */
    410,
    /* G_FPOWI */
    413,
    /* G_FEXP */
    416,
    /* G_FEXP2 */
    418,
    /* G_FLOG */
    420,
    /* G_FLOG2 */
    422,
    /* G_FLOG10 */
    424,
    /* G_FNEG */
    426,
    /* G_FPEXT */
    428,
    /* G_FPTRUNC */
    430,
    /* G_FPTOSI */
    432,
    /* G_FPTOUI */
    434,
    /* G_SITOFP */
    436,
    /* G_UITOFP */
    438,
    /* G_FABS */
    440,
    /* G_FCOPYSIGN */
    442,
    /* G_IS_FPCLASS */
    445,
    /* G_FCANONICALIZE */
    448,
    /* G_FMINNUM */
    450,
    /* G_FMAXNUM */
    453,
    /* G_FMINNUM_IEEE */
    456,
    /* G_FMAXNUM_IEEE */
    459,
    /* G_FMINIMUM */
    462,
    /* G_FMAXIMUM */
    465,
    /* G_PTR_ADD */
    468,
    /* G_PTRMASK */
    471,
    /* G_SMIN */
    474,
    /* G_SMAX */
    477,
    /* G_UMIN */
    480,
    /* G_UMAX */
    483,
    /* G_ABS */
    486,
    /* G_LROUND */
    488,
    /* G_LLROUND */
    490,
    /* G_BR */
    492,
    /* G_BRJT */
    493,
    /* G_INSERT_VECTOR_ELT */
    496,
    /* G_EXTRACT_VECTOR_ELT */
    500,
    /* G_SHUFFLE_VECTOR */
    503,
    /* G_CTTZ */
    507,
    /* G_CTTZ_ZERO_UNDEF */
    509,
    /* G_CTLZ */
    511,
    /* G_CTLZ_ZERO_UNDEF */
    513,
    /* G_CTPOP */
    515,
    /* G_BSWAP */
    517,
    /* G_BITREVERSE */
    519,
    /* G_FCEIL */
    521,
    /* G_FCOS */
    523,
    /* G_FSIN */
    525,
    /* G_FSQRT */
    527,
    /* G_FFLOOR */
    529,
    /* G_FRINT */
    531,
    /* G_FNEARBYINT */
    533,
    /* G_ADDRSPACE_CAST */
    535,
    /* G_BLOCK_ADDR */
    537,
    /* G_JUMP_TABLE */
    539,
    /* G_DYN_STACKALLOC */
    541,
    /* G_STRICT_FADD */
    544,
    /* G_STRICT_FSUB */
    547,
    /* G_STRICT_FMUL */
    550,
    /* G_STRICT_FDIV */
    553,
    /* G_STRICT_FREM */
    556,
    /* G_STRICT_FMA */
    559,
    /* G_STRICT_FSQRT */
    563,
    /* G_READ_REGISTER */
    565,
    /* G_WRITE_REGISTER */
    567,
    /* G_MEMCPY */
    569,
    /* G_MEMCPY_INLINE */
    573,
    /* G_MEMMOVE */
    576,
    /* G_MEMSET */
    580,
    /* G_BZERO */
    584,
    /* G_VECREDUCE_SEQ_FADD */
    587,
    /* G_VECREDUCE_SEQ_FMUL */
    590,
    /* G_VECREDUCE_FADD */
    593,
    /* G_VECREDUCE_FMUL */
    595,
    /* G_VECREDUCE_FMAX */
    597,
    /* G_VECREDUCE_FMIN */
    599,
    /* G_VECREDUCE_ADD */
    601,
    /* G_VECREDUCE_MUL */
    603,
    /* G_VECREDUCE_AND */
    605,
    /* G_VECREDUCE_OR */
    607,
    /* G_VECREDUCE_XOR */
    609,
    /* G_VECREDUCE_SMAX */
    611,
    /* G_VECREDUCE_SMIN */
    613,
    /* G_VECREDUCE_UMAX */
    615,
    /* G_VECREDUCE_UMIN */
    617,
    /* G_SBFX */
    619,
    /* G_UBFX */
    623,
    /* CALL_PARAMS */
    627,
    /* CALL_PARAMS_S */
    628,
    /* CALL_RESULTS */
    629,
    /* CALL_RESULTS_S */
    629,
    /* CATCHRET */
    629,
    /* CATCHRET_S */
    631,
    /* CLEANUPRET */
    633,
    /* CLEANUPRET_S */
    633,
    /* COMPILER_FENCE */
    633,
    /* COMPILER_FENCE_S */
    633,
    /* RET_CALL_RESULTS */
    633,
    /* RET_CALL_RESULTS_S */
    633,
    /* ABS_F32 */
    633,
    /* ABS_F32_S */
    635,
    /* ABS_F32x4 */
    635,
    /* ABS_F32x4_S */
    637,
    /* ABS_F64 */
    637,
    /* ABS_F64_S */
    639,
    /* ABS_F64x2 */
    639,
    /* ABS_F64x2_S */
    641,
    /* ABS_I16x8 */
    641,
    /* ABS_I16x8_S */
    643,
    /* ABS_I32x4 */
    643,
    /* ABS_I32x4_S */
    645,
    /* ABS_I64x2 */
    645,
    /* ABS_I64x2_S */
    647,
    /* ABS_I8x16 */
    647,
    /* ABS_I8x16_S */
    649,
    /* ADD_F32 */
    649,
    /* ADD_F32_S */
    652,
    /* ADD_F32x4 */
    652,
    /* ADD_F32x4_S */
    655,
    /* ADD_F64 */
    655,
    /* ADD_F64_S */
    658,
    /* ADD_F64x2 */
    658,
    /* ADD_F64x2_S */
    661,
    /* ADD_I16x8 */
    661,
    /* ADD_I16x8_S */
    664,
    /* ADD_I32 */
    664,
    /* ADD_I32_S */
    667,
    /* ADD_I32x4 */
    667,
    /* ADD_I32x4_S */
    670,
    /* ADD_I64 */
    670,
    /* ADD_I64_S */
    673,
    /* ADD_I64x2 */
    673,
    /* ADD_I64x2_S */
    676,
    /* ADD_I8x16 */
    676,
    /* ADD_I8x16_S */
    679,
    /* ADD_SAT_S_I16x8 */
    679,
    /* ADD_SAT_S_I16x8_S */
    682,
    /* ADD_SAT_S_I8x16 */
    682,
    /* ADD_SAT_S_I8x16_S */
    685,
    /* ADD_SAT_U_I16x8 */
    685,
    /* ADD_SAT_U_I16x8_S */
    688,
    /* ADD_SAT_U_I8x16 */
    688,
    /* ADD_SAT_U_I8x16_S */
    691,
    /* ADJCALLSTACKDOWN */
    691,
    /* ADJCALLSTACKDOWN_S */
    693,
    /* ADJCALLSTACKUP */
    695,
    /* ADJCALLSTACKUP_S */
    697,
    /* ALLTRUE_I16x8 */
    699,
    /* ALLTRUE_I16x8_S */
    701,
    /* ALLTRUE_I32x4 */
    701,
    /* ALLTRUE_I32x4_S */
    703,
    /* ALLTRUE_I64x2 */
    703,
    /* ALLTRUE_I64x2_S */
    705,
    /* ALLTRUE_I8x16 */
    705,
    /* ALLTRUE_I8x16_S */
    707,
    /* AND */
    707,
    /* ANDNOT */
    710,
    /* ANDNOT_S */
    713,
    /* AND_I32 */
    713,
    /* AND_I32_S */
    716,
    /* AND_I64 */
    716,
    /* AND_I64_S */
    719,
    /* AND_S */
    719,
    /* ANYTRUE */
    719,
    /* ANYTRUE_S */
    721,
    /* ARGUMENT_externref */
    721,
    /* ARGUMENT_externref_S */
    723,
    /* ARGUMENT_f32 */
    724,
    /* ARGUMENT_f32_S */
    726,
    /* ARGUMENT_f64 */
    727,
    /* ARGUMENT_f64_S */
    729,
    /* ARGUMENT_funcref */
    730,
    /* ARGUMENT_funcref_S */
    732,
    /* ARGUMENT_i32 */
    733,
    /* ARGUMENT_i32_S */
    735,
    /* ARGUMENT_i64 */
    736,
    /* ARGUMENT_i64_S */
    738,
    /* ARGUMENT_v16i8 */
    739,
    /* ARGUMENT_v16i8_S */
    741,
    /* ARGUMENT_v2f64 */
    742,
    /* ARGUMENT_v2f64_S */
    744,
    /* ARGUMENT_v2i64 */
    745,
    /* ARGUMENT_v2i64_S */
    747,
    /* ARGUMENT_v4f32 */
    748,
    /* ARGUMENT_v4f32_S */
    750,
    /* ARGUMENT_v4i32 */
    751,
    /* ARGUMENT_v4i32_S */
    753,
    /* ARGUMENT_v8i16 */
    754,
    /* ARGUMENT_v8i16_S */
    756,
    /* ATOMIC_FENCE */
    757,
    /* ATOMIC_FENCE_S */
    758,
    /* ATOMIC_LOAD16_U_I32_A32 */
    759,
    /* ATOMIC_LOAD16_U_I32_A32_S */
    763,
    /* ATOMIC_LOAD16_U_I32_A64 */
    765,
    /* ATOMIC_LOAD16_U_I32_A64_S */
    769,
    /* ATOMIC_LOAD16_U_I64_A32 */
    771,
    /* ATOMIC_LOAD16_U_I64_A32_S */
    775,
    /* ATOMIC_LOAD16_U_I64_A64 */
    777,
    /* ATOMIC_LOAD16_U_I64_A64_S */
    781,
    /* ATOMIC_LOAD32_U_I64_A32 */
    783,
    /* ATOMIC_LOAD32_U_I64_A32_S */
    787,
    /* ATOMIC_LOAD32_U_I64_A64 */
    789,
    /* ATOMIC_LOAD32_U_I64_A64_S */
    793,
    /* ATOMIC_LOAD8_U_I32_A32 */
    795,
    /* ATOMIC_LOAD8_U_I32_A32_S */
    799,
    /* ATOMIC_LOAD8_U_I32_A64 */
    801,
    /* ATOMIC_LOAD8_U_I32_A64_S */
    805,
    /* ATOMIC_LOAD8_U_I64_A32 */
    807,
    /* ATOMIC_LOAD8_U_I64_A32_S */
    811,
    /* ATOMIC_LOAD8_U_I64_A64 */
    813,
    /* ATOMIC_LOAD8_U_I64_A64_S */
    817,
    /* ATOMIC_LOAD_I32_A32 */
    819,
    /* ATOMIC_LOAD_I32_A32_S */
    823,
    /* ATOMIC_LOAD_I32_A64 */
    825,
    /* ATOMIC_LOAD_I32_A64_S */
    829,
    /* ATOMIC_LOAD_I64_A32 */
    831,
    /* ATOMIC_LOAD_I64_A32_S */
    835,
    /* ATOMIC_LOAD_I64_A64 */
    837,
    /* ATOMIC_LOAD_I64_A64_S */
    841,
    /* ATOMIC_RMW16_U_ADD_I32_A32 */
    843,
    /* ATOMIC_RMW16_U_ADD_I32_A32_S */
    848,
    /* ATOMIC_RMW16_U_ADD_I32_A64 */
    850,
    /* ATOMIC_RMW16_U_ADD_I32_A64_S */
    855,
    /* ATOMIC_RMW16_U_ADD_I64_A32 */
    857,
    /* ATOMIC_RMW16_U_ADD_I64_A32_S */
    862,
    /* ATOMIC_RMW16_U_ADD_I64_A64 */
    864,
    /* ATOMIC_RMW16_U_ADD_I64_A64_S */
    869,
    /* ATOMIC_RMW16_U_AND_I32_A32 */
    871,
    /* ATOMIC_RMW16_U_AND_I32_A32_S */
    876,
    /* ATOMIC_RMW16_U_AND_I32_A64 */
    878,
    /* ATOMIC_RMW16_U_AND_I32_A64_S */
    883,
    /* ATOMIC_RMW16_U_AND_I64_A32 */
    885,
    /* ATOMIC_RMW16_U_AND_I64_A32_S */
    890,
    /* ATOMIC_RMW16_U_AND_I64_A64 */
    892,
    /* ATOMIC_RMW16_U_AND_I64_A64_S */
    897,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32 */
    899,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32_S */
    905,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64 */
    907,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64_S */
    913,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32 */
    915,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32_S */
    921,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64 */
    923,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64_S */
    929,
    /* ATOMIC_RMW16_U_OR_I32_A32 */
    931,
    /* ATOMIC_RMW16_U_OR_I32_A32_S */
    936,
    /* ATOMIC_RMW16_U_OR_I32_A64 */
    938,
    /* ATOMIC_RMW16_U_OR_I32_A64_S */
    943,
    /* ATOMIC_RMW16_U_OR_I64_A32 */
    945,
    /* ATOMIC_RMW16_U_OR_I64_A32_S */
    950,
    /* ATOMIC_RMW16_U_OR_I64_A64 */
    952,
    /* ATOMIC_RMW16_U_OR_I64_A64_S */
    957,
    /* ATOMIC_RMW16_U_SUB_I32_A32 */
    959,
    /* ATOMIC_RMW16_U_SUB_I32_A32_S */
    964,
    /* ATOMIC_RMW16_U_SUB_I32_A64 */
    966,
    /* ATOMIC_RMW16_U_SUB_I32_A64_S */
    971,
    /* ATOMIC_RMW16_U_SUB_I64_A32 */
    973,
    /* ATOMIC_RMW16_U_SUB_I64_A32_S */
    978,
    /* ATOMIC_RMW16_U_SUB_I64_A64 */
    980,
    /* ATOMIC_RMW16_U_SUB_I64_A64_S */
    985,
    /* ATOMIC_RMW16_U_XCHG_I32_A32 */
    987,
    /* ATOMIC_RMW16_U_XCHG_I32_A32_S */
    992,
    /* ATOMIC_RMW16_U_XCHG_I32_A64 */
    994,
    /* ATOMIC_RMW16_U_XCHG_I32_A64_S */
    999,
    /* ATOMIC_RMW16_U_XCHG_I64_A32 */
    1001,
    /* ATOMIC_RMW16_U_XCHG_I64_A32_S */
    1006,
    /* ATOMIC_RMW16_U_XCHG_I64_A64 */
    1008,
    /* ATOMIC_RMW16_U_XCHG_I64_A64_S */
    1013,
    /* ATOMIC_RMW16_U_XOR_I32_A32 */
    1015,
    /* ATOMIC_RMW16_U_XOR_I32_A32_S */
    1020,
    /* ATOMIC_RMW16_U_XOR_I32_A64 */
    1022,
    /* ATOMIC_RMW16_U_XOR_I32_A64_S */
    1027,
    /* ATOMIC_RMW16_U_XOR_I64_A32 */
    1029,
    /* ATOMIC_RMW16_U_XOR_I64_A32_S */
    1034,
    /* ATOMIC_RMW16_U_XOR_I64_A64 */
    1036,
    /* ATOMIC_RMW16_U_XOR_I64_A64_S */
    1041,
    /* ATOMIC_RMW32_U_ADD_I64_A32 */
    1043,
    /* ATOMIC_RMW32_U_ADD_I64_A32_S */
    1048,
    /* ATOMIC_RMW32_U_ADD_I64_A64 */
    1050,
    /* ATOMIC_RMW32_U_ADD_I64_A64_S */
    1055,
    /* ATOMIC_RMW32_U_AND_I64_A32 */
    1057,
    /* ATOMIC_RMW32_U_AND_I64_A32_S */
    1062,
    /* ATOMIC_RMW32_U_AND_I64_A64 */
    1064,
    /* ATOMIC_RMW32_U_AND_I64_A64_S */
    1069,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32 */
    1071,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32_S */
    1077,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64 */
    1079,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64_S */
    1085,
    /* ATOMIC_RMW32_U_OR_I64_A32 */
    1087,
    /* ATOMIC_RMW32_U_OR_I64_A32_S */
    1092,
    /* ATOMIC_RMW32_U_OR_I64_A64 */
    1094,
    /* ATOMIC_RMW32_U_OR_I64_A64_S */
    1099,
    /* ATOMIC_RMW32_U_SUB_I64_A32 */
    1101,
    /* ATOMIC_RMW32_U_SUB_I64_A32_S */
    1106,
    /* ATOMIC_RMW32_U_SUB_I64_A64 */
    1108,
    /* ATOMIC_RMW32_U_SUB_I64_A64_S */
    1113,
    /* ATOMIC_RMW32_U_XCHG_I64_A32 */
    1115,
    /* ATOMIC_RMW32_U_XCHG_I64_A32_S */
    1120,
    /* ATOMIC_RMW32_U_XCHG_I64_A64 */
    1122,
    /* ATOMIC_RMW32_U_XCHG_I64_A64_S */
    1127,
    /* ATOMIC_RMW32_U_XOR_I64_A32 */
    1129,
    /* ATOMIC_RMW32_U_XOR_I64_A32_S */
    1134,
    /* ATOMIC_RMW32_U_XOR_I64_A64 */
    1136,
    /* ATOMIC_RMW32_U_XOR_I64_A64_S */
    1141,
    /* ATOMIC_RMW8_U_ADD_I32_A32 */
    1143,
    /* ATOMIC_RMW8_U_ADD_I32_A32_S */
    1148,
    /* ATOMIC_RMW8_U_ADD_I32_A64 */
    1150,
    /* ATOMIC_RMW8_U_ADD_I32_A64_S */
    1155,
    /* ATOMIC_RMW8_U_ADD_I64_A32 */
    1157,
    /* ATOMIC_RMW8_U_ADD_I64_A32_S */
    1162,
    /* ATOMIC_RMW8_U_ADD_I64_A64 */
    1164,
    /* ATOMIC_RMW8_U_ADD_I64_A64_S */
    1169,
    /* ATOMIC_RMW8_U_AND_I32_A32 */
    1171,
    /* ATOMIC_RMW8_U_AND_I32_A32_S */
    1176,
    /* ATOMIC_RMW8_U_AND_I32_A64 */
    1178,
    /* ATOMIC_RMW8_U_AND_I32_A64_S */
    1183,
    /* ATOMIC_RMW8_U_AND_I64_A32 */
    1185,
    /* ATOMIC_RMW8_U_AND_I64_A32_S */
    1190,
    /* ATOMIC_RMW8_U_AND_I64_A64 */
    1192,
    /* ATOMIC_RMW8_U_AND_I64_A64_S */
    1197,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32 */
    1199,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32_S */
    1205,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64 */
    1207,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64_S */
    1213,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32 */
    1215,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32_S */
    1221,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64 */
    1223,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64_S */
    1229,
    /* ATOMIC_RMW8_U_OR_I32_A32 */
    1231,
    /* ATOMIC_RMW8_U_OR_I32_A32_S */
    1236,
    /* ATOMIC_RMW8_U_OR_I32_A64 */
    1238,
    /* ATOMIC_RMW8_U_OR_I32_A64_S */
    1243,
    /* ATOMIC_RMW8_U_OR_I64_A32 */
    1245,
    /* ATOMIC_RMW8_U_OR_I64_A32_S */
    1250,
    /* ATOMIC_RMW8_U_OR_I64_A64 */
    1252,
    /* ATOMIC_RMW8_U_OR_I64_A64_S */
    1257,
    /* ATOMIC_RMW8_U_SUB_I32_A32 */
    1259,
    /* ATOMIC_RMW8_U_SUB_I32_A32_S */
    1264,
    /* ATOMIC_RMW8_U_SUB_I32_A64 */
    1266,
    /* ATOMIC_RMW8_U_SUB_I32_A64_S */
    1271,
    /* ATOMIC_RMW8_U_SUB_I64_A32 */
    1273,
    /* ATOMIC_RMW8_U_SUB_I64_A32_S */
    1278,
    /* ATOMIC_RMW8_U_SUB_I64_A64 */
    1280,
    /* ATOMIC_RMW8_U_SUB_I64_A64_S */
    1285,
    /* ATOMIC_RMW8_U_XCHG_I32_A32 */
    1287,
    /* ATOMIC_RMW8_U_XCHG_I32_A32_S */
    1292,
    /* ATOMIC_RMW8_U_XCHG_I32_A64 */
    1294,
    /* ATOMIC_RMW8_U_XCHG_I32_A64_S */
    1299,
    /* ATOMIC_RMW8_U_XCHG_I64_A32 */
    1301,
    /* ATOMIC_RMW8_U_XCHG_I64_A32_S */
    1306,
    /* ATOMIC_RMW8_U_XCHG_I64_A64 */
    1308,
    /* ATOMIC_RMW8_U_XCHG_I64_A64_S */
    1313,
    /* ATOMIC_RMW8_U_XOR_I32_A32 */
    1315,
    /* ATOMIC_RMW8_U_XOR_I32_A32_S */
    1320,
    /* ATOMIC_RMW8_U_XOR_I32_A64 */
    1322,
    /* ATOMIC_RMW8_U_XOR_I32_A64_S */
    1327,
    /* ATOMIC_RMW8_U_XOR_I64_A32 */
    1329,
    /* ATOMIC_RMW8_U_XOR_I64_A32_S */
    1334,
    /* ATOMIC_RMW8_U_XOR_I64_A64 */
    1336,
    /* ATOMIC_RMW8_U_XOR_I64_A64_S */
    1341,
    /* ATOMIC_RMW_ADD_I32_A32 */
    1343,
    /* ATOMIC_RMW_ADD_I32_A32_S */
    1348,
    /* ATOMIC_RMW_ADD_I32_A64 */
    1350,
    /* ATOMIC_RMW_ADD_I32_A64_S */
    1355,
    /* ATOMIC_RMW_ADD_I64_A32 */
    1357,
    /* ATOMIC_RMW_ADD_I64_A32_S */
    1362,
    /* ATOMIC_RMW_ADD_I64_A64 */
    1364,
    /* ATOMIC_RMW_ADD_I64_A64_S */
    1369,
    /* ATOMIC_RMW_AND_I32_A32 */
    1371,
    /* ATOMIC_RMW_AND_I32_A32_S */
    1376,
    /* ATOMIC_RMW_AND_I32_A64 */
    1378,
    /* ATOMIC_RMW_AND_I32_A64_S */
    1383,
    /* ATOMIC_RMW_AND_I64_A32 */
    1385,
    /* ATOMIC_RMW_AND_I64_A32_S */
    1390,
    /* ATOMIC_RMW_AND_I64_A64 */
    1392,
    /* ATOMIC_RMW_AND_I64_A64_S */
    1397,
    /* ATOMIC_RMW_CMPXCHG_I32_A32 */
    1399,
    /* ATOMIC_RMW_CMPXCHG_I32_A32_S */
    1405,
    /* ATOMIC_RMW_CMPXCHG_I32_A64 */
    1407,
    /* ATOMIC_RMW_CMPXCHG_I32_A64_S */
    1413,
    /* ATOMIC_RMW_CMPXCHG_I64_A32 */
    1415,
    /* ATOMIC_RMW_CMPXCHG_I64_A32_S */
    1421,
    /* ATOMIC_RMW_CMPXCHG_I64_A64 */
    1423,
    /* ATOMIC_RMW_CMPXCHG_I64_A64_S */
    1429,
    /* ATOMIC_RMW_OR_I32_A32 */
    1431,
    /* ATOMIC_RMW_OR_I32_A32_S */
    1436,
    /* ATOMIC_RMW_OR_I32_A64 */
    1438,
    /* ATOMIC_RMW_OR_I32_A64_S */
    1443,
    /* ATOMIC_RMW_OR_I64_A32 */
    1445,
    /* ATOMIC_RMW_OR_I64_A32_S */
    1450,
    /* ATOMIC_RMW_OR_I64_A64 */
    1452,
    /* ATOMIC_RMW_OR_I64_A64_S */
    1457,
    /* ATOMIC_RMW_SUB_I32_A32 */
    1459,
    /* ATOMIC_RMW_SUB_I32_A32_S */
    1464,
    /* ATOMIC_RMW_SUB_I32_A64 */
    1466,
    /* ATOMIC_RMW_SUB_I32_A64_S */
    1471,
    /* ATOMIC_RMW_SUB_I64_A32 */
    1473,
    /* ATOMIC_RMW_SUB_I64_A32_S */
    1478,
    /* ATOMIC_RMW_SUB_I64_A64 */
    1480,
    /* ATOMIC_RMW_SUB_I64_A64_S */
    1485,
    /* ATOMIC_RMW_XCHG_I32_A32 */
    1487,
    /* ATOMIC_RMW_XCHG_I32_A32_S */
    1492,
    /* ATOMIC_RMW_XCHG_I32_A64 */
    1494,
    /* ATOMIC_RMW_XCHG_I32_A64_S */
    1499,
    /* ATOMIC_RMW_XCHG_I64_A32 */
    1501,
    /* ATOMIC_RMW_XCHG_I64_A32_S */
    1506,
    /* ATOMIC_RMW_XCHG_I64_A64 */
    1508,
    /* ATOMIC_RMW_XCHG_I64_A64_S */
    1513,
    /* ATOMIC_RMW_XOR_I32_A32 */
    1515,
    /* ATOMIC_RMW_XOR_I32_A32_S */
    1520,
    /* ATOMIC_RMW_XOR_I32_A64 */
    1522,
    /* ATOMIC_RMW_XOR_I32_A64_S */
    1527,
    /* ATOMIC_RMW_XOR_I64_A32 */
    1529,
    /* ATOMIC_RMW_XOR_I64_A32_S */
    1534,
    /* ATOMIC_RMW_XOR_I64_A64 */
    1536,
    /* ATOMIC_RMW_XOR_I64_A64_S */
    1541,
    /* ATOMIC_STORE16_I32_A32 */
    1543,
    /* ATOMIC_STORE16_I32_A32_S */
    1547,
    /* ATOMIC_STORE16_I32_A64 */
    1549,
    /* ATOMIC_STORE16_I32_A64_S */
    1553,
    /* ATOMIC_STORE16_I64_A32 */
    1555,
    /* ATOMIC_STORE16_I64_A32_S */
    1559,
    /* ATOMIC_STORE16_I64_A64 */
    1561,
    /* ATOMIC_STORE16_I64_A64_S */
    1565,
    /* ATOMIC_STORE32_I64_A32 */
    1567,
    /* ATOMIC_STORE32_I64_A32_S */
    1571,
    /* ATOMIC_STORE32_I64_A64 */
    1573,
    /* ATOMIC_STORE32_I64_A64_S */
    1577,
    /* ATOMIC_STORE8_I32_A32 */
    1579,
    /* ATOMIC_STORE8_I32_A32_S */
    1583,
    /* ATOMIC_STORE8_I32_A64 */
    1585,
    /* ATOMIC_STORE8_I32_A64_S */
    1589,
    /* ATOMIC_STORE8_I64_A32 */
    1591,
    /* ATOMIC_STORE8_I64_A32_S */
    1595,
    /* ATOMIC_STORE8_I64_A64 */
    1597,
    /* ATOMIC_STORE8_I64_A64_S */
    1601,
    /* ATOMIC_STORE_I32_A32 */
    1603,
    /* ATOMIC_STORE_I32_A32_S */
    1607,
    /* ATOMIC_STORE_I32_A64 */
    1609,
    /* ATOMIC_STORE_I32_A64_S */
    1613,
    /* ATOMIC_STORE_I64_A32 */
    1615,
    /* ATOMIC_STORE_I64_A32_S */
    1619,
    /* ATOMIC_STORE_I64_A64 */
    1621,
    /* ATOMIC_STORE_I64_A64_S */
    1625,
    /* AVGR_U_I16x8 */
    1627,
    /* AVGR_U_I16x8_S */
    1630,
    /* AVGR_U_I8x16 */
    1630,
    /* AVGR_U_I8x16_S */
    1633,
    /* BITMASK_I16x8 */
    1633,
    /* BITMASK_I16x8_S */
    1635,
    /* BITMASK_I32x4 */
    1635,
    /* BITMASK_I32x4_S */
    1637,
    /* BITMASK_I64x2 */
    1637,
    /* BITMASK_I64x2_S */
    1639,
    /* BITMASK_I8x16 */
    1639,
    /* BITMASK_I8x16_S */
    1641,
    /* BITSELECT */
    1641,
    /* BITSELECT_S */
    1645,
    /* BLOCK */
    1645,
    /* BLOCK_S */
    1646,
    /* BR */
    1647,
    /* BR_IF */
    1648,
    /* BR_IF_S */
    1650,
    /* BR_S */
    1651,
    /* BR_TABLE_I32 */
    1652,
    /* BR_TABLE_I32_S */
    1653,
    /* BR_TABLE_I64 */
    1654,
    /* BR_TABLE_I64_S */
    1655,
    /* BR_UNLESS */
    1656,
    /* BR_UNLESS_S */
    1658,
    /* CALL */
    1659,
    /* CALL_INDIRECT */
    1660,
    /* CALL_INDIRECT_S */
    1662,
    /* CALL_S */
    1664,
    /* CATCH */
    1665,
    /* CATCH_ALL */
    1666,
    /* CATCH_ALL_S */
    1666,
    /* CATCH_S */
    1666,
    /* CEIL_F32 */
    1667,
    /* CEIL_F32_S */
    1669,
    /* CEIL_F32x4 */
    1669,
    /* CEIL_F32x4_S */
    1671,
    /* CEIL_F64 */
    1671,
    /* CEIL_F64_S */
    1673,
    /* CEIL_F64x2 */
    1673,
    /* CEIL_F64x2_S */
    1675,
    /* CLZ_I32 */
    1675,
    /* CLZ_I32_S */
    1677,
    /* CLZ_I64 */
    1677,
    /* CLZ_I64_S */
    1679,
    /* CONST_F32 */
    1679,
    /* CONST_F32_S */
    1681,
    /* CONST_F64 */
    1682,
    /* CONST_F64_S */
    1684,
    /* CONST_I32 */
    1685,
    /* CONST_I32_S */
    1687,
    /* CONST_I64 */
    1688,
    /* CONST_I64_S */
    1690,
    /* CONST_V128_F32x4 */
    1691,
    /* CONST_V128_F32x4_S */
    1696,
    /* CONST_V128_F64x2 */
    1700,
    /* CONST_V128_F64x2_S */
    1703,
    /* CONST_V128_I16x8 */
    1705,
    /* CONST_V128_I16x8_S */
    1714,
    /* CONST_V128_I32x4 */
    1722,
    /* CONST_V128_I32x4_S */
    1727,
    /* CONST_V128_I64x2 */
    1731,
    /* CONST_V128_I64x2_S */
    1734,
    /* CONST_V128_I8x16 */
    1736,
    /* CONST_V128_I8x16_S */
    1753,
    /* COPYSIGN_F32 */
    1769,
    /* COPYSIGN_F32_S */
    1772,
    /* COPYSIGN_F64 */
    1772,
    /* COPYSIGN_F64_S */
    1775,
    /* COPY_EXTERNREF */
    1775,
    /* COPY_EXTERNREF_S */
    1777,
    /* COPY_F32 */
    1777,
    /* COPY_F32_S */
    1779,
    /* COPY_F64 */
    1779,
    /* COPY_F64_S */
    1781,
    /* COPY_FUNCREF */
    1781,
    /* COPY_FUNCREF_S */
    1783,
    /* COPY_I32 */
    1783,
    /* COPY_I32_S */
    1785,
    /* COPY_I64 */
    1785,
    /* COPY_I64_S */
    1787,
    /* COPY_V128 */
    1787,
    /* COPY_V128_S */
    1789,
    /* CTZ_I32 */
    1789,
    /* CTZ_I32_S */
    1791,
    /* CTZ_I64 */
    1791,
    /* CTZ_I64_S */
    1793,
    /* DEBUG_UNREACHABLE */
    1793,
    /* DEBUG_UNREACHABLE_S */
    1793,
    /* DELEGATE */
    1793,
    /* DELEGATE_S */
    1794,
    /* DIV_F32 */
    1795,
    /* DIV_F32_S */
    1798,
    /* DIV_F32x4 */
    1798,
    /* DIV_F32x4_S */
    1801,
    /* DIV_F64 */
    1801,
    /* DIV_F64_S */
    1804,
    /* DIV_F64x2 */
    1804,
    /* DIV_F64x2_S */
    1807,
    /* DIV_S_I32 */
    1807,
    /* DIV_S_I32_S */
    1810,
    /* DIV_S_I64 */
    1810,
    /* DIV_S_I64_S */
    1813,
    /* DIV_U_I32 */
    1813,
    /* DIV_U_I32_S */
    1816,
    /* DIV_U_I64 */
    1816,
    /* DIV_U_I64_S */
    1819,
    /* DOT */
    1819,
    /* DOT_S */
    1822,
    /* DROP_EXTERNREF */
    1822,
    /* DROP_EXTERNREF_S */
    1823,
    /* DROP_F32 */
    1823,
    /* DROP_F32_S */
    1824,
    /* DROP_F64 */
    1824,
    /* DROP_F64_S */
    1825,
    /* DROP_FUNCREF */
    1825,
    /* DROP_FUNCREF_S */
    1826,
    /* DROP_I32 */
    1826,
    /* DROP_I32_S */
    1827,
    /* DROP_I64 */
    1827,
    /* DROP_I64_S */
    1828,
    /* DROP_V128 */
    1828,
    /* DROP_V128_S */
    1829,
    /* ELSE */
    1829,
    /* ELSE_S */
    1829,
    /* END */
    1829,
    /* END_BLOCK */
    1829,
    /* END_BLOCK_S */
    1829,
    /* END_FUNCTION */
    1829,
    /* END_FUNCTION_S */
    1829,
    /* END_IF */
    1829,
    /* END_IF_S */
    1829,
    /* END_LOOP */
    1829,
    /* END_LOOP_S */
    1829,
    /* END_S */
    1829,
    /* END_TRY */
    1829,
    /* END_TRY_S */
    1829,
    /* EQZ_I32 */
    1829,
    /* EQZ_I32_S */
    1831,
    /* EQZ_I64 */
    1831,
    /* EQZ_I64_S */
    1833,
    /* EQ_F32 */
    1833,
    /* EQ_F32_S */
    1836,
    /* EQ_F32x4 */
    1836,
    /* EQ_F32x4_S */
    1839,
    /* EQ_F64 */
    1839,
    /* EQ_F64_S */
    1842,
    /* EQ_F64x2 */
    1842,
    /* EQ_F64x2_S */
    1845,
    /* EQ_I16x8 */
    1845,
    /* EQ_I16x8_S */
    1848,
    /* EQ_I32 */
    1848,
    /* EQ_I32_S */
    1851,
    /* EQ_I32x4 */
    1851,
    /* EQ_I32x4_S */
    1854,
    /* EQ_I64 */
    1854,
    /* EQ_I64_S */
    1857,
    /* EQ_I64x2 */
    1857,
    /* EQ_I64x2_S */
    1860,
    /* EQ_I8x16 */
    1860,
    /* EQ_I8x16_S */
    1863,
    /* EXTMUL_HIGH_S_I16x8 */
    1863,
    /* EXTMUL_HIGH_S_I16x8_S */
    1866,
    /* EXTMUL_HIGH_S_I32x4 */
    1866,
    /* EXTMUL_HIGH_S_I32x4_S */
    1869,
    /* EXTMUL_HIGH_S_I64x2 */
    1869,
    /* EXTMUL_HIGH_S_I64x2_S */
    1872,
    /* EXTMUL_HIGH_U_I16x8 */
    1872,
    /* EXTMUL_HIGH_U_I16x8_S */
    1875,
    /* EXTMUL_HIGH_U_I32x4 */
    1875,
    /* EXTMUL_HIGH_U_I32x4_S */
    1878,
    /* EXTMUL_HIGH_U_I64x2 */
    1878,
    /* EXTMUL_HIGH_U_I64x2_S */
    1881,
    /* EXTMUL_LOW_S_I16x8 */
    1881,
    /* EXTMUL_LOW_S_I16x8_S */
    1884,
    /* EXTMUL_LOW_S_I32x4 */
    1884,
    /* EXTMUL_LOW_S_I32x4_S */
    1887,
    /* EXTMUL_LOW_S_I64x2 */
    1887,
    /* EXTMUL_LOW_S_I64x2_S */
    1890,
    /* EXTMUL_LOW_U_I16x8 */
    1890,
    /* EXTMUL_LOW_U_I16x8_S */
    1893,
    /* EXTMUL_LOW_U_I32x4 */
    1893,
    /* EXTMUL_LOW_U_I32x4_S */
    1896,
    /* EXTMUL_LOW_U_I64x2 */
    1896,
    /* EXTMUL_LOW_U_I64x2_S */
    1899,
    /* EXTRACT_LANE_F32x4 */
    1899,
    /* EXTRACT_LANE_F32x4_S */
    1902,
    /* EXTRACT_LANE_F64x2 */
    1903,
    /* EXTRACT_LANE_F64x2_S */
    1906,
    /* EXTRACT_LANE_I16x8_s */
    1907,
    /* EXTRACT_LANE_I16x8_s_S */
    1910,
    /* EXTRACT_LANE_I16x8_u */
    1911,
    /* EXTRACT_LANE_I16x8_u_S */
    1914,
    /* EXTRACT_LANE_I32x4 */
    1915,
    /* EXTRACT_LANE_I32x4_S */
    1918,
    /* EXTRACT_LANE_I64x2 */
    1919,
    /* EXTRACT_LANE_I64x2_S */
    1922,
    /* EXTRACT_LANE_I8x16_s */
    1923,
    /* EXTRACT_LANE_I8x16_s_S */
    1926,
    /* EXTRACT_LANE_I8x16_u */
    1927,
    /* EXTRACT_LANE_I8x16_u_S */
    1930,
    /* F32_CONVERT_S_I32 */
    1931,
    /* F32_CONVERT_S_I32_S */
    1933,
    /* F32_CONVERT_S_I64 */
    1933,
    /* F32_CONVERT_S_I64_S */
    1935,
    /* F32_CONVERT_U_I32 */
    1935,
    /* F32_CONVERT_U_I32_S */
    1937,
    /* F32_CONVERT_U_I64 */
    1937,
    /* F32_CONVERT_U_I64_S */
    1939,
    /* F32_DEMOTE_F64 */
    1939,
    /* F32_DEMOTE_F64_S */
    1941,
    /* F32_REINTERPRET_I32 */
    1941,
    /* F32_REINTERPRET_I32_S */
    1943,
    /* F64_CONVERT_S_I32 */
    1943,
    /* F64_CONVERT_S_I32_S */
    1945,
    /* F64_CONVERT_S_I64 */
    1945,
    /* F64_CONVERT_S_I64_S */
    1947,
    /* F64_CONVERT_U_I32 */
    1947,
    /* F64_CONVERT_U_I32_S */
    1949,
    /* F64_CONVERT_U_I64 */
    1949,
    /* F64_CONVERT_U_I64_S */
    1951,
    /* F64_PROMOTE_F32 */
    1951,
    /* F64_PROMOTE_F32_S */
    1953,
    /* F64_REINTERPRET_I64 */
    1953,
    /* F64_REINTERPRET_I64_S */
    1955,
    /* FALLTHROUGH_RETURN */
    1955,
    /* FALLTHROUGH_RETURN_S */
    1955,
    /* FLOOR_F32 */
    1955,
    /* FLOOR_F32_S */
    1957,
    /* FLOOR_F32x4 */
    1957,
    /* FLOOR_F32x4_S */
    1959,
    /* FLOOR_F64 */
    1959,
    /* FLOOR_F64_S */
    1961,
    /* FLOOR_F64x2 */
    1961,
    /* FLOOR_F64x2_S */
    1963,
    /* FP_TO_SINT_I32_F32 */
    1963,
    /* FP_TO_SINT_I32_F32_S */
    1965,
    /* FP_TO_SINT_I32_F64 */
    1965,
    /* FP_TO_SINT_I32_F64_S */
    1967,
    /* FP_TO_SINT_I64_F32 */
    1967,
    /* FP_TO_SINT_I64_F32_S */
    1969,
    /* FP_TO_SINT_I64_F64 */
    1969,
    /* FP_TO_SINT_I64_F64_S */
    1971,
    /* FP_TO_UINT_I32_F32 */
    1971,
    /* FP_TO_UINT_I32_F32_S */
    1973,
    /* FP_TO_UINT_I32_F64 */
    1973,
    /* FP_TO_UINT_I32_F64_S */
    1975,
    /* FP_TO_UINT_I64_F32 */
    1975,
    /* FP_TO_UINT_I64_F32_S */
    1977,
    /* FP_TO_UINT_I64_F64 */
    1977,
    /* FP_TO_UINT_I64_F64_S */
    1979,
    /* GE_F32 */
    1979,
    /* GE_F32_S */
    1982,
    /* GE_F32x4 */
    1982,
    /* GE_F32x4_S */
    1985,
    /* GE_F64 */
    1985,
    /* GE_F64_S */
    1988,
    /* GE_F64x2 */
    1988,
    /* GE_F64x2_S */
    1991,
    /* GE_S_I16x8 */
    1991,
    /* GE_S_I16x8_S */
    1994,
    /* GE_S_I32 */
    1994,
    /* GE_S_I32_S */
    1997,
    /* GE_S_I32x4 */
    1997,
    /* GE_S_I32x4_S */
    2000,
    /* GE_S_I64 */
    2000,
    /* GE_S_I64_S */
    2003,
    /* GE_S_I64x2 */
    2003,
    /* GE_S_I64x2_S */
    2006,
    /* GE_S_I8x16 */
    2006,
    /* GE_S_I8x16_S */
    2009,
    /* GE_U_I16x8 */
    2009,
    /* GE_U_I16x8_S */
    2012,
    /* GE_U_I32 */
    2012,
    /* GE_U_I32_S */
    2015,
    /* GE_U_I32x4 */
    2015,
    /* GE_U_I32x4_S */
    2018,
    /* GE_U_I64 */
    2018,
    /* GE_U_I64_S */
    2021,
    /* GE_U_I8x16 */
    2021,
    /* GE_U_I8x16_S */
    2024,
    /* GLOBAL_GET_EXTERNREF */
    2024,
    /* GLOBAL_GET_EXTERNREF_S */
    2026,
    /* GLOBAL_GET_F32 */
    2027,
    /* GLOBAL_GET_F32_S */
    2029,
    /* GLOBAL_GET_F64 */
    2030,
    /* GLOBAL_GET_F64_S */
    2032,
    /* GLOBAL_GET_FUNCREF */
    2033,
    /* GLOBAL_GET_FUNCREF_S */
    2035,
    /* GLOBAL_GET_I32 */
    2036,
    /* GLOBAL_GET_I32_S */
    2038,
    /* GLOBAL_GET_I64 */
    2039,
    /* GLOBAL_GET_I64_S */
    2041,
    /* GLOBAL_GET_V128 */
    2042,
    /* GLOBAL_GET_V128_S */
    2044,
    /* GLOBAL_SET_EXTERNREF */
    2045,
    /* GLOBAL_SET_EXTERNREF_S */
    2047,
    /* GLOBAL_SET_F32 */
    2048,
    /* GLOBAL_SET_F32_S */
    2050,
    /* GLOBAL_SET_F64 */
    2051,
    /* GLOBAL_SET_F64_S */
    2053,
    /* GLOBAL_SET_FUNCREF */
    2054,
    /* GLOBAL_SET_FUNCREF_S */
    2056,
    /* GLOBAL_SET_I32 */
    2057,
    /* GLOBAL_SET_I32_S */
    2059,
    /* GLOBAL_SET_I64 */
    2060,
    /* GLOBAL_SET_I64_S */
    2062,
    /* GLOBAL_SET_V128 */
    2063,
    /* GLOBAL_SET_V128_S */
    2065,
    /* GT_F32 */
    2066,
    /* GT_F32_S */
    2069,
    /* GT_F32x4 */
    2069,
    /* GT_F32x4_S */
    2072,
    /* GT_F64 */
    2072,
    /* GT_F64_S */
    2075,
    /* GT_F64x2 */
    2075,
    /* GT_F64x2_S */
    2078,
    /* GT_S_I16x8 */
    2078,
    /* GT_S_I16x8_S */
    2081,
    /* GT_S_I32 */
    2081,
    /* GT_S_I32_S */
    2084,
    /* GT_S_I32x4 */
    2084,
    /* GT_S_I32x4_S */
    2087,
    /* GT_S_I64 */
    2087,
    /* GT_S_I64_S */
    2090,
    /* GT_S_I64x2 */
    2090,
    /* GT_S_I64x2_S */
    2093,
    /* GT_S_I8x16 */
    2093,
    /* GT_S_I8x16_S */
    2096,
    /* GT_U_I16x8 */
    2096,
    /* GT_U_I16x8_S */
    2099,
    /* GT_U_I32 */
    2099,
    /* GT_U_I32_S */
    2102,
    /* GT_U_I32x4 */
    2102,
    /* GT_U_I32x4_S */
    2105,
    /* GT_U_I64 */
    2105,
    /* GT_U_I64_S */
    2108,
    /* GT_U_I8x16 */
    2108,
    /* GT_U_I8x16_S */
    2111,
    /* I32_EXTEND16_S_I32 */
    2111,
    /* I32_EXTEND16_S_I32_S */
    2113,
    /* I32_EXTEND8_S_I32 */
    2113,
    /* I32_EXTEND8_S_I32_S */
    2115,
    /* I32_REINTERPRET_F32 */
    2115,
    /* I32_REINTERPRET_F32_S */
    2117,
    /* I32_TRUNC_S_F32 */
    2117,
    /* I32_TRUNC_S_F32_S */
    2119,
    /* I32_TRUNC_S_F64 */
    2119,
    /* I32_TRUNC_S_F64_S */
    2121,
    /* I32_TRUNC_S_SAT_F32 */
    2121,
    /* I32_TRUNC_S_SAT_F32_S */
    2123,
    /* I32_TRUNC_S_SAT_F64 */
    2123,
    /* I32_TRUNC_S_SAT_F64_S */
    2125,
    /* I32_TRUNC_U_F32 */
    2125,
    /* I32_TRUNC_U_F32_S */
    2127,
    /* I32_TRUNC_U_F64 */
    2127,
    /* I32_TRUNC_U_F64_S */
    2129,
    /* I32_TRUNC_U_SAT_F32 */
    2129,
    /* I32_TRUNC_U_SAT_F32_S */
    2131,
    /* I32_TRUNC_U_SAT_F64 */
    2131,
    /* I32_TRUNC_U_SAT_F64_S */
    2133,
    /* I32_WRAP_I64 */
    2133,
    /* I32_WRAP_I64_S */
    2135,
    /* I64_EXTEND16_S_I64 */
    2135,
    /* I64_EXTEND16_S_I64_S */
    2137,
    /* I64_EXTEND32_S_I64 */
    2137,
    /* I64_EXTEND32_S_I64_S */
    2139,
    /* I64_EXTEND8_S_I64 */
    2139,
    /* I64_EXTEND8_S_I64_S */
    2141,
    /* I64_EXTEND_S_I32 */
    2141,
    /* I64_EXTEND_S_I32_S */
    2143,
    /* I64_EXTEND_U_I32 */
    2143,
    /* I64_EXTEND_U_I32_S */
    2145,
    /* I64_REINTERPRET_F64 */
    2145,
    /* I64_REINTERPRET_F64_S */
    2147,
    /* I64_TRUNC_S_F32 */
    2147,
    /* I64_TRUNC_S_F32_S */
    2149,
    /* I64_TRUNC_S_F64 */
    2149,
    /* I64_TRUNC_S_F64_S */
    2151,
    /* I64_TRUNC_S_SAT_F32 */
    2151,
    /* I64_TRUNC_S_SAT_F32_S */
    2153,
    /* I64_TRUNC_S_SAT_F64 */
    2153,
    /* I64_TRUNC_S_SAT_F64_S */
    2155,
    /* I64_TRUNC_U_F32 */
    2155,
    /* I64_TRUNC_U_F32_S */
    2157,
    /* I64_TRUNC_U_F64 */
    2157,
    /* I64_TRUNC_U_F64_S */
    2159,
    /* I64_TRUNC_U_SAT_F32 */
    2159,
    /* I64_TRUNC_U_SAT_F32_S */
    2161,
    /* I64_TRUNC_U_SAT_F64 */
    2161,
    /* I64_TRUNC_U_SAT_F64_S */
    2163,
    /* IF */
    2163,
    /* IF_S */
    2165,
    /* LANESELECT_I16x8 */
    2166,
    /* LANESELECT_I16x8_S */
    2170,
    /* LANESELECT_I32x4 */
    2170,
    /* LANESELECT_I32x4_S */
    2174,
    /* LANESELECT_I64x2 */
    2174,
    /* LANESELECT_I64x2_S */
    2178,
    /* LANESELECT_I8x16 */
    2178,
    /* LANESELECT_I8x16_S */
    2182,
    /* LE_F32 */
    2182,
    /* LE_F32_S */
    2185,
    /* LE_F32x4 */
    2185,
    /* LE_F32x4_S */
    2188,
    /* LE_F64 */
    2188,
    /* LE_F64_S */
    2191,
    /* LE_F64x2 */
    2191,
    /* LE_F64x2_S */
    2194,
    /* LE_S_I16x8 */
    2194,
    /* LE_S_I16x8_S */
    2197,
    /* LE_S_I32 */
    2197,
    /* LE_S_I32_S */
    2200,
    /* LE_S_I32x4 */
    2200,
    /* LE_S_I32x4_S */
    2203,
    /* LE_S_I64 */
    2203,
    /* LE_S_I64_S */
    2206,
    /* LE_S_I64x2 */
    2206,
    /* LE_S_I64x2_S */
    2209,
    /* LE_S_I8x16 */
    2209,
    /* LE_S_I8x16_S */
    2212,
    /* LE_U_I16x8 */
    2212,
    /* LE_U_I16x8_S */
    2215,
    /* LE_U_I32 */
    2215,
    /* LE_U_I32_S */
    2218,
    /* LE_U_I32x4 */
    2218,
    /* LE_U_I32x4_S */
    2221,
    /* LE_U_I64 */
    2221,
    /* LE_U_I64_S */
    2224,
    /* LE_U_I8x16 */
    2224,
    /* LE_U_I8x16_S */
    2227,
    /* LOAD16_SPLAT_A32 */
    2227,
    /* LOAD16_SPLAT_A32_S */
    2231,
    /* LOAD16_SPLAT_A64 */
    2233,
    /* LOAD16_SPLAT_A64_S */
    2237,
    /* LOAD16_S_I32_A32 */
    2239,
    /* LOAD16_S_I32_A32_S */
    2243,
    /* LOAD16_S_I32_A64 */
    2245,
    /* LOAD16_S_I32_A64_S */
    2249,
    /* LOAD16_S_I64_A32 */
    2251,
    /* LOAD16_S_I64_A32_S */
    2255,
    /* LOAD16_S_I64_A64 */
    2257,
    /* LOAD16_S_I64_A64_S */
    2261,
    /* LOAD16_U_I32_A32 */
    2263,
    /* LOAD16_U_I32_A32_S */
    2267,
    /* LOAD16_U_I32_A64 */
    2269,
    /* LOAD16_U_I32_A64_S */
    2273,
    /* LOAD16_U_I64_A32 */
    2275,
    /* LOAD16_U_I64_A32_S */
    2279,
    /* LOAD16_U_I64_A64 */
    2281,
    /* LOAD16_U_I64_A64_S */
    2285,
    /* LOAD32_SPLAT_A32 */
    2287,
    /* LOAD32_SPLAT_A32_S */
    2291,
    /* LOAD32_SPLAT_A64 */
    2293,
    /* LOAD32_SPLAT_A64_S */
    2297,
    /* LOAD32_S_I64_A32 */
    2299,
    /* LOAD32_S_I64_A32_S */
    2303,
    /* LOAD32_S_I64_A64 */
    2305,
    /* LOAD32_S_I64_A64_S */
    2309,
    /* LOAD32_U_I64_A32 */
    2311,
    /* LOAD32_U_I64_A32_S */
    2315,
    /* LOAD32_U_I64_A64 */
    2317,
    /* LOAD32_U_I64_A64_S */
    2321,
    /* LOAD64_SPLAT_A32 */
    2323,
    /* LOAD64_SPLAT_A32_S */
    2327,
    /* LOAD64_SPLAT_A64 */
    2329,
    /* LOAD64_SPLAT_A64_S */
    2333,
    /* LOAD8_SPLAT_A32 */
    2335,
    /* LOAD8_SPLAT_A32_S */
    2339,
    /* LOAD8_SPLAT_A64 */
    2341,
    /* LOAD8_SPLAT_A64_S */
    2345,
    /* LOAD8_S_I32_A32 */
    2347,
    /* LOAD8_S_I32_A32_S */
    2351,
    /* LOAD8_S_I32_A64 */
    2353,
    /* LOAD8_S_I32_A64_S */
    2357,
    /* LOAD8_S_I64_A32 */
    2359,
    /* LOAD8_S_I64_A32_S */
    2363,
    /* LOAD8_S_I64_A64 */
    2365,
    /* LOAD8_S_I64_A64_S */
    2369,
    /* LOAD8_U_I32_A32 */
    2371,
    /* LOAD8_U_I32_A32_S */
    2375,
    /* LOAD8_U_I32_A64 */
    2377,
    /* LOAD8_U_I32_A64_S */
    2381,
    /* LOAD8_U_I64_A32 */
    2383,
    /* LOAD8_U_I64_A32_S */
    2387,
    /* LOAD8_U_I64_A64 */
    2389,
    /* LOAD8_U_I64_A64_S */
    2393,
    /* LOAD_EXTEND_S_I16x8_A32 */
    2395,
    /* LOAD_EXTEND_S_I16x8_A32_S */
    2399,
    /* LOAD_EXTEND_S_I16x8_A64 */
    2401,
    /* LOAD_EXTEND_S_I16x8_A64_S */
    2405,
    /* LOAD_EXTEND_S_I32x4_A32 */
    2407,
    /* LOAD_EXTEND_S_I32x4_A32_S */
    2411,
    /* LOAD_EXTEND_S_I32x4_A64 */
    2413,
    /* LOAD_EXTEND_S_I32x4_A64_S */
    2417,
    /* LOAD_EXTEND_S_I64x2_A32 */
    2419,
    /* LOAD_EXTEND_S_I64x2_A32_S */
    2423,
    /* LOAD_EXTEND_S_I64x2_A64 */
    2425,
    /* LOAD_EXTEND_S_I64x2_A64_S */
    2429,
    /* LOAD_EXTEND_U_I16x8_A32 */
    2431,
    /* LOAD_EXTEND_U_I16x8_A32_S */
    2435,
    /* LOAD_EXTEND_U_I16x8_A64 */
    2437,
    /* LOAD_EXTEND_U_I16x8_A64_S */
    2441,
    /* LOAD_EXTEND_U_I32x4_A32 */
    2443,
    /* LOAD_EXTEND_U_I32x4_A32_S */
    2447,
    /* LOAD_EXTEND_U_I32x4_A64 */
    2449,
    /* LOAD_EXTEND_U_I32x4_A64_S */
    2453,
    /* LOAD_EXTEND_U_I64x2_A32 */
    2455,
    /* LOAD_EXTEND_U_I64x2_A32_S */
    2459,
    /* LOAD_EXTEND_U_I64x2_A64 */
    2461,
    /* LOAD_EXTEND_U_I64x2_A64_S */
    2465,
    /* LOAD_F32_A32 */
    2467,
    /* LOAD_F32_A32_S */
    2471,
    /* LOAD_F32_A64 */
    2473,
    /* LOAD_F32_A64_S */
    2477,
    /* LOAD_F64_A32 */
    2479,
    /* LOAD_F64_A32_S */
    2483,
    /* LOAD_F64_A64 */
    2485,
    /* LOAD_F64_A64_S */
    2489,
    /* LOAD_I32_A32 */
    2491,
    /* LOAD_I32_A32_S */
    2495,
    /* LOAD_I32_A64 */
    2497,
    /* LOAD_I32_A64_S */
    2501,
    /* LOAD_I64_A32 */
    2503,
    /* LOAD_I64_A32_S */
    2507,
    /* LOAD_I64_A64 */
    2509,
    /* LOAD_I64_A64_S */
    2513,
    /* LOAD_LANE_I16x8_A32 */
    2515,
    /* LOAD_LANE_I16x8_A32_S */
    2521,
    /* LOAD_LANE_I16x8_A64 */
    2524,
    /* LOAD_LANE_I16x8_A64_S */
    2530,
    /* LOAD_LANE_I32x4_A32 */
    2533,
    /* LOAD_LANE_I32x4_A32_S */
    2539,
    /* LOAD_LANE_I32x4_A64 */
    2542,
    /* LOAD_LANE_I32x4_A64_S */
    2548,
    /* LOAD_LANE_I64x2_A32 */
    2551,
    /* LOAD_LANE_I64x2_A32_S */
    2557,
    /* LOAD_LANE_I64x2_A64 */
    2560,
    /* LOAD_LANE_I64x2_A64_S */
    2566,
    /* LOAD_LANE_I8x16_A32 */
    2569,
    /* LOAD_LANE_I8x16_A32_S */
    2575,
    /* LOAD_LANE_I8x16_A64 */
    2578,
    /* LOAD_LANE_I8x16_A64_S */
    2584,
    /* LOAD_V128_A32 */
    2587,
    /* LOAD_V128_A32_S */
    2591,
    /* LOAD_V128_A64 */
    2593,
    /* LOAD_V128_A64_S */
    2597,
    /* LOAD_ZERO_I32x4_A32 */
    2599,
    /* LOAD_ZERO_I32x4_A32_S */
    2603,
    /* LOAD_ZERO_I32x4_A64 */
    2605,
    /* LOAD_ZERO_I32x4_A64_S */
    2609,
    /* LOAD_ZERO_I64x2_A32 */
    2611,
    /* LOAD_ZERO_I64x2_A32_S */
    2615,
    /* LOAD_ZERO_I64x2_A64 */
    2617,
    /* LOAD_ZERO_I64x2_A64_S */
    2621,
    /* LOCAL_GET_EXTERNREF */
    2623,
    /* LOCAL_GET_EXTERNREF_S */
    2625,
    /* LOCAL_GET_F32 */
    2626,
    /* LOCAL_GET_F32_S */
    2628,
    /* LOCAL_GET_F64 */
    2629,
    /* LOCAL_GET_F64_S */
    2631,
    /* LOCAL_GET_FUNCREF */
    2632,
    /* LOCAL_GET_FUNCREF_S */
    2634,
    /* LOCAL_GET_I32 */
    2635,
    /* LOCAL_GET_I32_S */
    2637,
    /* LOCAL_GET_I64 */
    2638,
    /* LOCAL_GET_I64_S */
    2640,
    /* LOCAL_GET_V128 */
    2641,
    /* LOCAL_GET_V128_S */
    2643,
    /* LOCAL_SET_EXTERNREF */
    2644,
    /* LOCAL_SET_EXTERNREF_S */
    2646,
    /* LOCAL_SET_F32 */
    2647,
    /* LOCAL_SET_F32_S */
    2649,
    /* LOCAL_SET_F64 */
    2650,
    /* LOCAL_SET_F64_S */
    2652,
    /* LOCAL_SET_FUNCREF */
    2653,
    /* LOCAL_SET_FUNCREF_S */
    2655,
    /* LOCAL_SET_I32 */
    2656,
    /* LOCAL_SET_I32_S */
    2658,
    /* LOCAL_SET_I64 */
    2659,
    /* LOCAL_SET_I64_S */
    2661,
    /* LOCAL_SET_V128 */
    2662,
    /* LOCAL_SET_V128_S */
    2664,
    /* LOCAL_TEE_EXTERNREF */
    2665,
    /* LOCAL_TEE_EXTERNREF_S */
    2668,
    /* LOCAL_TEE_F32 */
    2669,
    /* LOCAL_TEE_F32_S */
    2672,
    /* LOCAL_TEE_F64 */
    2673,
    /* LOCAL_TEE_F64_S */
    2676,
    /* LOCAL_TEE_FUNCREF */
    2677,
    /* LOCAL_TEE_FUNCREF_S */
    2680,
    /* LOCAL_TEE_I32 */
    2681,
    /* LOCAL_TEE_I32_S */
    2684,
    /* LOCAL_TEE_I64 */
    2685,
    /* LOCAL_TEE_I64_S */
    2688,
    /* LOCAL_TEE_V128 */
    2689,
    /* LOCAL_TEE_V128_S */
    2692,
    /* LOOP */
    2693,
    /* LOOP_S */
    2694,
    /* LT_F32 */
    2695,
    /* LT_F32_S */
    2698,
    /* LT_F32x4 */
    2698,
    /* LT_F32x4_S */
    2701,
    /* LT_F64 */
    2701,
    /* LT_F64_S */
    2704,
    /* LT_F64x2 */
    2704,
    /* LT_F64x2_S */
    2707,
    /* LT_S_I16x8 */
    2707,
    /* LT_S_I16x8_S */
    2710,
    /* LT_S_I32 */
    2710,
    /* LT_S_I32_S */
    2713,
    /* LT_S_I32x4 */
    2713,
    /* LT_S_I32x4_S */
    2716,
    /* LT_S_I64 */
    2716,
    /* LT_S_I64_S */
    2719,
    /* LT_S_I64x2 */
    2719,
    /* LT_S_I64x2_S */
    2722,
    /* LT_S_I8x16 */
    2722,
    /* LT_S_I8x16_S */
    2725,
    /* LT_U_I16x8 */
    2725,
    /* LT_U_I16x8_S */
    2728,
    /* LT_U_I32 */
    2728,
    /* LT_U_I32_S */
    2731,
    /* LT_U_I32x4 */
    2731,
    /* LT_U_I32x4_S */
    2734,
    /* LT_U_I64 */
    2734,
    /* LT_U_I64_S */
    2737,
    /* LT_U_I8x16 */
    2737,
    /* LT_U_I8x16_S */
    2740,
    /* MADD_F32x4 */
    2740,
    /* MADD_F32x4_S */
    2744,
    /* MADD_F64x2 */
    2744,
    /* MADD_F64x2_S */
    2748,
    /* MAX_F32 */
    2748,
    /* MAX_F32_S */
    2751,
    /* MAX_F32x4 */
    2751,
    /* MAX_F32x4_S */
    2754,
    /* MAX_F64 */
    2754,
    /* MAX_F64_S */
    2757,
    /* MAX_F64x2 */
    2757,
    /* MAX_F64x2_S */
    2760,
    /* MAX_S_I16x8 */
    2760,
    /* MAX_S_I16x8_S */
    2763,
    /* MAX_S_I32x4 */
    2763,
    /* MAX_S_I32x4_S */
    2766,
    /* MAX_S_I8x16 */
    2766,
    /* MAX_S_I8x16_S */
    2769,
    /* MAX_U_I16x8 */
    2769,
    /* MAX_U_I16x8_S */
    2772,
    /* MAX_U_I32x4 */
    2772,
    /* MAX_U_I32x4_S */
    2775,
    /* MAX_U_I8x16 */
    2775,
    /* MAX_U_I8x16_S */
    2778,
    /* MEMORY_ATOMIC_NOTIFY_A32 */
    2778,
    /* MEMORY_ATOMIC_NOTIFY_A32_S */
    2783,
    /* MEMORY_ATOMIC_NOTIFY_A64 */
    2785,
    /* MEMORY_ATOMIC_NOTIFY_A64_S */
    2790,
    /* MEMORY_ATOMIC_WAIT32_A32 */
    2792,
    /* MEMORY_ATOMIC_WAIT32_A32_S */
    2798,
    /* MEMORY_ATOMIC_WAIT32_A64 */
    2800,
    /* MEMORY_ATOMIC_WAIT32_A64_S */
    2806,
    /* MEMORY_ATOMIC_WAIT64_A32 */
    2808,
    /* MEMORY_ATOMIC_WAIT64_A32_S */
    2814,
    /* MEMORY_ATOMIC_WAIT64_A64 */
    2816,
    /* MEMORY_ATOMIC_WAIT64_A64_S */
    2822,
    /* MIN_F32 */
    2824,
    /* MIN_F32_S */
    2827,
    /* MIN_F32x4 */
    2827,
    /* MIN_F32x4_S */
    2830,
    /* MIN_F64 */
    2830,
    /* MIN_F64_S */
    2833,
    /* MIN_F64x2 */
    2833,
    /* MIN_F64x2_S */
    2836,
    /* MIN_S_I16x8 */
    2836,
    /* MIN_S_I16x8_S */
    2839,
    /* MIN_S_I32x4 */
    2839,
    /* MIN_S_I32x4_S */
    2842,
    /* MIN_S_I8x16 */
    2842,
    /* MIN_S_I8x16_S */
    2845,
    /* MIN_U_I16x8 */
    2845,
    /* MIN_U_I16x8_S */
    2848,
    /* MIN_U_I32x4 */
    2848,
    /* MIN_U_I32x4_S */
    2851,
    /* MIN_U_I8x16 */
    2851,
    /* MIN_U_I8x16_S */
    2854,
    /* MUL_F32 */
    2854,
    /* MUL_F32_S */
    2857,
    /* MUL_F32x4 */
    2857,
    /* MUL_F32x4_S */
    2860,
    /* MUL_F64 */
    2860,
    /* MUL_F64_S */
    2863,
    /* MUL_F64x2 */
    2863,
    /* MUL_F64x2_S */
    2866,
    /* MUL_I16x8 */
    2866,
    /* MUL_I16x8_S */
    2869,
    /* MUL_I32 */
    2869,
    /* MUL_I32_S */
    2872,
    /* MUL_I32x4 */
    2872,
    /* MUL_I32x4_S */
    2875,
    /* MUL_I64 */
    2875,
    /* MUL_I64_S */
    2878,
    /* MUL_I64x2 */
    2878,
    /* MUL_I64x2_S */
    2881,
    /* NARROW_S_I16x8 */
    2881,
    /* NARROW_S_I16x8_S */
    2884,
    /* NARROW_S_I8x16 */
    2884,
    /* NARROW_S_I8x16_S */
    2887,
    /* NARROW_U_I16x8 */
    2887,
    /* NARROW_U_I16x8_S */
    2890,
    /* NARROW_U_I8x16 */
    2890,
    /* NARROW_U_I8x16_S */
    2893,
    /* NEAREST_F32 */
    2893,
    /* NEAREST_F32_S */
    2895,
    /* NEAREST_F32x4 */
    2895,
    /* NEAREST_F32x4_S */
    2897,
    /* NEAREST_F64 */
    2897,
    /* NEAREST_F64_S */
    2899,
    /* NEAREST_F64x2 */
    2899,
    /* NEAREST_F64x2_S */
    2901,
    /* NEG_F32 */
    2901,
    /* NEG_F32_S */
    2903,
    /* NEG_F32x4 */
    2903,
    /* NEG_F32x4_S */
    2905,
    /* NEG_F64 */
    2905,
    /* NEG_F64_S */
    2907,
    /* NEG_F64x2 */
    2907,
    /* NEG_F64x2_S */
    2909,
    /* NEG_I16x8 */
    2909,
    /* NEG_I16x8_S */
    2911,
    /* NEG_I32x4 */
    2911,
    /* NEG_I32x4_S */
    2913,
    /* NEG_I64x2 */
    2913,
    /* NEG_I64x2_S */
    2915,
    /* NEG_I8x16 */
    2915,
    /* NEG_I8x16_S */
    2917,
    /* NE_F32 */
    2917,
    /* NE_F32_S */
    2920,
    /* NE_F32x4 */
    2920,
    /* NE_F32x4_S */
    2923,
    /* NE_F64 */
    2923,
    /* NE_F64_S */
    2926,
    /* NE_F64x2 */
    2926,
    /* NE_F64x2_S */
    2929,
    /* NE_I16x8 */
    2929,
    /* NE_I16x8_S */
    2932,
    /* NE_I32 */
    2932,
    /* NE_I32_S */
    2935,
    /* NE_I32x4 */
    2935,
    /* NE_I32x4_S */
    2938,
    /* NE_I64 */
    2938,
    /* NE_I64_S */
    2941,
    /* NE_I64x2 */
    2941,
    /* NE_I64x2_S */
    2944,
    /* NE_I8x16 */
    2944,
    /* NE_I8x16_S */
    2947,
    /* NMADD_F32x4 */
    2947,
    /* NMADD_F32x4_S */
    2951,
    /* NMADD_F64x2 */
    2951,
    /* NMADD_F64x2_S */
    2955,
    /* NOP */
    2955,
    /* NOP_S */
    2955,
    /* NOT */
    2955,
    /* NOT_S */
    2957,
    /* OR */
    2957,
    /* OR_I32 */
    2960,
    /* OR_I32_S */
    2963,
    /* OR_I64 */
    2963,
    /* OR_I64_S */
    2966,
    /* OR_S */
    2966,
    /* PMAX_F32x4 */
    2966,
    /* PMAX_F32x4_S */
    2969,
    /* PMAX_F64x2 */
    2969,
    /* PMAX_F64x2_S */
    2972,
    /* PMIN_F32x4 */
    2972,
    /* PMIN_F32x4_S */
    2975,
    /* PMIN_F64x2 */
    2975,
    /* PMIN_F64x2_S */
    2978,
    /* POPCNT_I32 */
    2978,
    /* POPCNT_I32_S */
    2980,
    /* POPCNT_I64 */
    2980,
    /* POPCNT_I64_S */
    2982,
    /* POPCNT_I8x16 */
    2982,
    /* POPCNT_I8x16_S */
    2984,
    /* Q15MULR_SAT_S_I16x8 */
    2984,
    /* Q15MULR_SAT_S_I16x8_S */
    2987,
    /* REF_IS_NULL_EXTERNREF */
    2987,
    /* REF_IS_NULL_EXTERNREF_S */
    2989,
    /* REF_IS_NULL_FUNCREF */
    2989,
    /* REF_IS_NULL_FUNCREF_S */
    2991,
    /* REF_NULL_EXTERNREF */
    2991,
    /* REF_NULL_EXTERNREF_S */
    2992,
    /* REF_NULL_FUNCREF */
    2992,
    /* REF_NULL_FUNCREF_S */
    2993,
    /* RELAXED_DOT */
    2993,
    /* RELAXED_DOT_ADD */
    2996,
    /* RELAXED_DOT_ADD_S */
    3000,
    /* RELAXED_DOT_BFLOAT */
    3000,
    /* RELAXED_DOT_BFLOAT_S */
    3004,
    /* RELAXED_DOT_S */
    3004,
    /* RELAXED_Q15MULR_S_I16x8 */
    3004,
    /* RELAXED_Q15MULR_S_I16x8_S */
    3007,
    /* RELAXED_SWIZZLE */
    3007,
    /* RELAXED_SWIZZLE_S */
    3010,
    /* REM_S_I32 */
    3010,
    /* REM_S_I32_S */
    3013,
    /* REM_S_I64 */
    3013,
    /* REM_S_I64_S */
    3016,
    /* REM_U_I32 */
    3016,
    /* REM_U_I32_S */
    3019,
    /* REM_U_I64 */
    3019,
    /* REM_U_I64_S */
    3022,
    /* REPLACE_LANE_F32x4 */
    3022,
    /* REPLACE_LANE_F32x4_S */
    3026,
    /* REPLACE_LANE_F64x2 */
    3027,
    /* REPLACE_LANE_F64x2_S */
    3031,
    /* REPLACE_LANE_I16x8 */
    3032,
    /* REPLACE_LANE_I16x8_S */
    3036,
    /* REPLACE_LANE_I32x4 */
    3037,
    /* REPLACE_LANE_I32x4_S */
    3041,
    /* REPLACE_LANE_I64x2 */
    3042,
    /* REPLACE_LANE_I64x2_S */
    3046,
    /* REPLACE_LANE_I8x16 */
    3047,
    /* REPLACE_LANE_I8x16_S */
    3051,
    /* RETHROW */
    3052,
    /* RETHROW_S */
    3053,
    /* RETURN */
    3054,
    /* RETURN_S */
    3054,
    /* RET_CALL */
    3054,
    /* RET_CALL_INDIRECT */
    3055,
    /* RET_CALL_INDIRECT_S */
    3057,
    /* RET_CALL_S */
    3059,
    /* ROTL_I32 */
    3060,
    /* ROTL_I32_S */
    3063,
    /* ROTL_I64 */
    3063,
    /* ROTL_I64_S */
    3066,
    /* ROTR_I32 */
    3066,
    /* ROTR_I32_S */
    3069,
    /* ROTR_I64 */
    3069,
    /* ROTR_I64_S */
    3072,
    /* SELECT_EXTERNREF */
    3072,
    /* SELECT_EXTERNREF_S */
    3076,
    /* SELECT_F32 */
    3076,
    /* SELECT_F32_S */
    3080,
    /* SELECT_F64 */
    3080,
    /* SELECT_F64_S */
    3084,
    /* SELECT_FUNCREF */
    3084,
    /* SELECT_FUNCREF_S */
    3088,
    /* SELECT_I32 */
    3088,
    /* SELECT_I32_S */
    3092,
    /* SELECT_I64 */
    3092,
    /* SELECT_I64_S */
    3096,
    /* SELECT_V128 */
    3096,
    /* SELECT_V128_S */
    3100,
    /* SHL_I16x8 */
    3100,
    /* SHL_I16x8_S */
    3103,
    /* SHL_I32 */
    3103,
    /* SHL_I32_S */
    3106,
    /* SHL_I32x4 */
    3106,
    /* SHL_I32x4_S */
    3109,
    /* SHL_I64 */
    3109,
    /* SHL_I64_S */
    3112,
    /* SHL_I64x2 */
    3112,
    /* SHL_I64x2_S */
    3115,
    /* SHL_I8x16 */
    3115,
    /* SHL_I8x16_S */
    3118,
    /* SHR_S_I16x8 */
    3118,
    /* SHR_S_I16x8_S */
    3121,
    /* SHR_S_I32 */
    3121,
    /* SHR_S_I32_S */
    3124,
    /* SHR_S_I32x4 */
    3124,
    /* SHR_S_I32x4_S */
    3127,
    /* SHR_S_I64 */
    3127,
    /* SHR_S_I64_S */
    3130,
    /* SHR_S_I64x2 */
    3130,
    /* SHR_S_I64x2_S */
    3133,
    /* SHR_S_I8x16 */
    3133,
    /* SHR_S_I8x16_S */
    3136,
    /* SHR_U_I16x8 */
    3136,
    /* SHR_U_I16x8_S */
    3139,
    /* SHR_U_I32 */
    3139,
    /* SHR_U_I32_S */
    3142,
    /* SHR_U_I32x4 */
    3142,
    /* SHR_U_I32x4_S */
    3145,
    /* SHR_U_I64 */
    3145,
    /* SHR_U_I64_S */
    3148,
    /* SHR_U_I64x2 */
    3148,
    /* SHR_U_I64x2_S */
    3151,
    /* SHR_U_I8x16 */
    3151,
    /* SHR_U_I8x16_S */
    3154,
    /* SHUFFLE */
    3154,
    /* SHUFFLE_S */
    3173,
    /* SIMD_RELAXED_FMAX_F32x4 */
    3189,
    /* SIMD_RELAXED_FMAX_F32x4_S */
    3192,
    /* SIMD_RELAXED_FMAX_F64x2 */
    3192,
    /* SIMD_RELAXED_FMAX_F64x2_S */
    3195,
    /* SIMD_RELAXED_FMIN_F32x4 */
    3195,
    /* SIMD_RELAXED_FMIN_F32x4_S */
    3198,
    /* SIMD_RELAXED_FMIN_F64x2 */
    3198,
    /* SIMD_RELAXED_FMIN_F64x2_S */
    3201,
    /* SPLAT_F32x4 */
    3201,
    /* SPLAT_F32x4_S */
    3203,
    /* SPLAT_F64x2 */
    3203,
    /* SPLAT_F64x2_S */
    3205,
    /* SPLAT_I16x8 */
    3205,
    /* SPLAT_I16x8_S */
    3207,
    /* SPLAT_I32x4 */
    3207,
    /* SPLAT_I32x4_S */
    3209,
    /* SPLAT_I64x2 */
    3209,
    /* SPLAT_I64x2_S */
    3211,
    /* SPLAT_I8x16 */
    3211,
    /* SPLAT_I8x16_S */
    3213,
    /* SQRT_F32 */
    3213,
    /* SQRT_F32_S */
    3215,
    /* SQRT_F32x4 */
    3215,
    /* SQRT_F32x4_S */
    3217,
    /* SQRT_F64 */
    3217,
    /* SQRT_F64_S */
    3219,
    /* SQRT_F64x2 */
    3219,
    /* SQRT_F64x2_S */
    3221,
    /* STORE16_I32_A32 */
    3221,
    /* STORE16_I32_A32_S */
    3225,
    /* STORE16_I32_A64 */
    3227,
    /* STORE16_I32_A64_S */
    3231,
    /* STORE16_I64_A32 */
    3233,
    /* STORE16_I64_A32_S */
    3237,
    /* STORE16_I64_A64 */
    3239,
    /* STORE16_I64_A64_S */
    3243,
    /* STORE32_I64_A32 */
    3245,
    /* STORE32_I64_A32_S */
    3249,
    /* STORE32_I64_A64 */
    3251,
    /* STORE32_I64_A64_S */
    3255,
    /* STORE8_I32_A32 */
    3257,
    /* STORE8_I32_A32_S */
    3261,
    /* STORE8_I32_A64 */
    3263,
    /* STORE8_I32_A64_S */
    3267,
    /* STORE8_I64_A32 */
    3269,
    /* STORE8_I64_A32_S */
    3273,
    /* STORE8_I64_A64 */
    3275,
    /* STORE8_I64_A64_S */
    3279,
    /* STORE_F32_A32 */
    3281,
    /* STORE_F32_A32_S */
    3285,
    /* STORE_F32_A64 */
    3287,
    /* STORE_F32_A64_S */
    3291,
    /* STORE_F64_A32 */
    3293,
    /* STORE_F64_A32_S */
    3297,
    /* STORE_F64_A64 */
    3299,
    /* STORE_F64_A64_S */
    3303,
    /* STORE_I32_A32 */
    3305,
    /* STORE_I32_A32_S */
    3309,
    /* STORE_I32_A64 */
    3311,
    /* STORE_I32_A64_S */
    3315,
    /* STORE_I64_A32 */
    3317,
    /* STORE_I64_A32_S */
    3321,
    /* STORE_I64_A64 */
    3323,
    /* STORE_I64_A64_S */
    3327,
    /* STORE_LANE_I16x8_A32 */
    3329,
    /* STORE_LANE_I16x8_A32_S */
    3334,
    /* STORE_LANE_I16x8_A64 */
    3337,
    /* STORE_LANE_I16x8_A64_S */
    3343,
    /* STORE_LANE_I32x4_A32 */
    3346,
    /* STORE_LANE_I32x4_A32_S */
    3351,
    /* STORE_LANE_I32x4_A64 */
    3354,
    /* STORE_LANE_I32x4_A64_S */
    3360,
    /* STORE_LANE_I64x2_A32 */
    3363,
    /* STORE_LANE_I64x2_A32_S */
    3368,
    /* STORE_LANE_I64x2_A64 */
    3371,
    /* STORE_LANE_I64x2_A64_S */
    3377,
    /* STORE_LANE_I8x16_A32 */
    3380,
    /* STORE_LANE_I8x16_A32_S */
    3385,
    /* STORE_LANE_I8x16_A64 */
    3388,
    /* STORE_LANE_I8x16_A64_S */
    3394,
    /* STORE_V128_A32 */
    3397,
    /* STORE_V128_A32_S */
    3401,
    /* STORE_V128_A64 */
    3403,
    /* STORE_V128_A64_S */
    3407,
    /* SUB_F32 */
    3409,
    /* SUB_F32_S */
    3412,
    /* SUB_F32x4 */
    3412,
    /* SUB_F32x4_S */
    3415,
    /* SUB_F64 */
    3415,
    /* SUB_F64_S */
    3418,
    /* SUB_F64x2 */
    3418,
    /* SUB_F64x2_S */
    3421,
    /* SUB_I16x8 */
    3421,
    /* SUB_I16x8_S */
    3424,
    /* SUB_I32 */
    3424,
    /* SUB_I32_S */
    3427,
    /* SUB_I32x4 */
    3427,
    /* SUB_I32x4_S */
    3430,
    /* SUB_I64 */
    3430,
    /* SUB_I64_S */
    3433,
    /* SUB_I64x2 */
    3433,
    /* SUB_I64x2_S */
    3436,
    /* SUB_I8x16 */
    3436,
    /* SUB_I8x16_S */
    3439,
    /* SUB_SAT_S_I16x8 */
    3439,
    /* SUB_SAT_S_I16x8_S */
    3442,
    /* SUB_SAT_S_I8x16 */
    3442,
    /* SUB_SAT_S_I8x16_S */
    3445,
    /* SUB_SAT_U_I16x8 */
    3445,
    /* SUB_SAT_U_I16x8_S */
    3448,
    /* SUB_SAT_U_I8x16 */
    3448,
    /* SUB_SAT_U_I8x16_S */
    3451,
    /* SWIZZLE */
    3451,
    /* SWIZZLE_S */
    3454,
    /* TABLE_COPY */
    3454,
    /* TABLE_COPY_S */
    3459,
    /* TABLE_FILL_EXTERNREF */
    3461,
    /* TABLE_FILL_EXTERNREF_S */
    3465,
    /* TABLE_FILL_FUNCREF */
    3466,
    /* TABLE_FILL_FUNCREF_S */
    3470,
    /* TABLE_GET_EXTERNREF */
    3471,
    /* TABLE_GET_EXTERNREF_S */
    3474,
    /* TABLE_GET_FUNCREF */
    3475,
    /* TABLE_GET_FUNCREF_S */
    3478,
    /* TABLE_GROW_EXTERNREF */
    3479,
    /* TABLE_GROW_EXTERNREF_S */
    3483,
    /* TABLE_GROW_FUNCREF */
    3484,
    /* TABLE_GROW_FUNCREF_S */
    3488,
    /* TABLE_SET_EXTERNREF */
    3489,
    /* TABLE_SET_EXTERNREF_S */
    3492,
    /* TABLE_SET_FUNCREF */
    3493,
    /* TABLE_SET_FUNCREF_S */
    3496,
    /* TABLE_SIZE */
    3497,
    /* TABLE_SIZE_S */
    3499,
    /* TEE_EXTERNREF */
    3500,
    /* TEE_EXTERNREF_S */
    3503,
    /* TEE_F32 */
    3503,
    /* TEE_F32_S */
    3506,
    /* TEE_F64 */
    3506,
    /* TEE_F64_S */
    3509,
    /* TEE_FUNCREF */
    3509,
    /* TEE_FUNCREF_S */
    3512,
    /* TEE_I32 */
    3512,
    /* TEE_I32_S */
    3515,
    /* TEE_I64 */
    3515,
    /* TEE_I64_S */
    3518,
    /* TEE_V128 */
    3518,
    /* TEE_V128_S */
    3521,
    /* THROW */
    3521,
    /* THROW_S */
    3522,
    /* TRUNC_F32 */
    3523,
    /* TRUNC_F32_S */
    3525,
    /* TRUNC_F32x4 */
    3525,
    /* TRUNC_F32x4_S */
    3527,
    /* TRUNC_F64 */
    3527,
    /* TRUNC_F64_S */
    3529,
    /* TRUNC_F64x2 */
    3529,
    /* TRUNC_F64x2_S */
    3531,
    /* TRY */
    3531,
    /* TRY_S */
    3532,
    /* UNREACHABLE */
    3533,
    /* UNREACHABLE_S */
    3533,
    /* XOR */
    3533,
    /* XOR_I32 */
    3536,
    /* XOR_I32_S */
    3539,
    /* XOR_I64 */
    3539,
    /* XOR_I64_S */
    3542,
    /* XOR_S */
    3542,
    /* anonymous_4396MEMORY_GROW_A32 */
    3542,
    /* anonymous_4396MEMORY_GROW_A32_S */
    3545,
    /* anonymous_4396MEMORY_SIZE_A32 */
    3546,
    /* anonymous_4396MEMORY_SIZE_A32_S */
    3548,
    /* anonymous_4397MEMORY_GROW_A64 */
    3549,
    /* anonymous_4397MEMORY_GROW_A64_S */
    3552,
    /* anonymous_4397MEMORY_SIZE_A64 */
    3553,
    /* anonymous_4397MEMORY_SIZE_A64_S */
    3555,
    /* anonymous_6249DATA_DROP */
    3556,
    /* anonymous_6249DATA_DROP_S */
    3557,
    /* anonymous_6249MEMORY_COPY_A32 */
    3558,
    /* anonymous_6249MEMORY_COPY_A32_S */
    3563,
    /* anonymous_6249MEMORY_FILL_A32 */
    3565,
    /* anonymous_6249MEMORY_FILL_A32_S */
    3569,
    /* anonymous_6249MEMORY_INIT_A32 */
    3570,
    /* anonymous_6249MEMORY_INIT_A32_S */
    3575,
    /* anonymous_6250DATA_DROP */
    3577,
    /* anonymous_6250DATA_DROP_S */
    3578,
    /* anonymous_6250MEMORY_COPY_A64 */
    3579,
    /* anonymous_6250MEMORY_COPY_A64_S */
    3584,
    /* anonymous_6250MEMORY_FILL_A64 */
    3586,
    /* anonymous_6250MEMORY_FILL_A64_S */
    3590,
    /* anonymous_6250MEMORY_INIT_A64 */
    3591,
    /* anonymous_6250MEMORY_INIT_A64_S */
    3596,
    /* convert_low_s_F64x2 */
    3598,
    /* convert_low_s_F64x2_S */
    3600,
    /* convert_low_u_F64x2 */
    3600,
    /* convert_low_u_F64x2_S */
    3602,
    /* demote_zero_F32x4 */
    3602,
    /* demote_zero_F32x4_S */
    3604,
    /* extend_high_s_I16x8 */
    3604,
    /* extend_high_s_I16x8_S */
    3606,
    /* extend_high_s_I32x4 */
    3606,
    /* extend_high_s_I32x4_S */
    3608,
    /* extend_high_s_I64x2 */
    3608,
    /* extend_high_s_I64x2_S */
    3610,
    /* extend_high_u_I16x8 */
    3610,
    /* extend_high_u_I16x8_S */
    3612,
    /* extend_high_u_I32x4 */
    3612,
    /* extend_high_u_I32x4_S */
    3614,
    /* extend_high_u_I64x2 */
    3614,
    /* extend_high_u_I64x2_S */
    3616,
    /* extend_low_s_I16x8 */
    3616,
    /* extend_low_s_I16x8_S */
    3618,
    /* extend_low_s_I32x4 */
    3618,
    /* extend_low_s_I32x4_S */
    3620,
    /* extend_low_s_I64x2 */
    3620,
    /* extend_low_s_I64x2_S */
    3622,
    /* extend_low_u_I16x8 */
    3622,
    /* extend_low_u_I16x8_S */
    3624,
    /* extend_low_u_I32x4 */
    3624,
    /* extend_low_u_I32x4_S */
    3626,
    /* extend_low_u_I64x2 */
    3626,
    /* extend_low_u_I64x2_S */
    3628,
    /* fp_to_sint_I32x4 */
    3628,
    /* fp_to_sint_I32x4_S */
    3630,
    /* fp_to_uint_I32x4 */
    3630,
    /* fp_to_uint_I32x4_S */
    3632,
    /* int_wasm_extadd_pairwise_signed_I16x8 */
    3632,
    /* int_wasm_extadd_pairwise_signed_I16x8_S */
    3634,
    /* int_wasm_extadd_pairwise_signed_I32x4 */
    3634,
    /* int_wasm_extadd_pairwise_signed_I32x4_S */
    3636,
    /* int_wasm_extadd_pairwise_unsigned_I16x8 */
    3636,
    /* int_wasm_extadd_pairwise_unsigned_I16x8_S */
    3638,
    /* int_wasm_extadd_pairwise_unsigned_I32x4 */
    3638,
    /* int_wasm_extadd_pairwise_unsigned_I32x4_S */
    3640,
    /* int_wasm_relaxed_trunc_signed_I32x4 */
    3640,
    /* int_wasm_relaxed_trunc_signed_I32x4_S */
    3642,
    /* int_wasm_relaxed_trunc_signed_zero_I32x4 */
    3642,
    /* int_wasm_relaxed_trunc_signed_zero_I32x4_S */
    3644,
    /* int_wasm_relaxed_trunc_unsigned_I32x4 */
    3644,
    /* int_wasm_relaxed_trunc_unsigned_I32x4_S */
    3646,
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4 */
    3646,
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4_S */
    3648,
    /* promote_low_F64x2 */
    3648,
    /* promote_low_F64x2_S */
    3650,
    /* sint_to_fp_F32x4 */
    3650,
    /* sint_to_fp_F32x4_S */
    3652,
    /* trunc_sat_zero_s_I32x4 */
    3652,
    /* trunc_sat_zero_s_I32x4_S */
    3654,
    /* trunc_sat_zero_u_I32x4 */
    3654,
    /* trunc_sat_zero_u_I32x4_S */
    3656,
    /* uint_to_fp_F32x4 */
    3656,
    /* uint_to_fp_F32x4_S */
    3658,
  };

  using namespace OpTypes;
  const int8_t OpcodeOperandTypes[] = {
    
    /* PHI */
    -1, 
    /* INLINEASM */
    /* INLINEASM_BR */
    /* CFI_INSTRUCTION */
    i32imm, 
    /* EH_LABEL */
    i32imm, 
    /* GC_LABEL */
    i32imm, 
    /* ANNOTATION_LABEL */
    i32imm, 
    /* KILL */
    /* EXTRACT_SUBREG */
    -1, -1, i32imm, 
    /* INSERT_SUBREG */
    -1, -1, -1, i32imm, 
    /* IMPLICIT_DEF */
    -1, 
    /* SUBREG_TO_REG */
    -1, -1, -1, i32imm, 
    /* COPY_TO_REGCLASS */
    -1, -1, i32imm, 
    /* DBG_VALUE */
    /* DBG_VALUE_LIST */
    /* DBG_INSTR_REF */
    /* DBG_PHI */
    /* DBG_LABEL */
    -1, 
    /* REG_SEQUENCE */
    -1, -1, 
    /* COPY */
    -1, -1, 
    /* BUNDLE */
    /* LIFETIME_START */
    i32imm, 
    /* LIFETIME_END */
    i32imm, 
    /* PSEUDO_PROBE */
    i64imm, i64imm, i8imm, i32imm, 
    /* ARITH_FENCE */
    -1, -1, 
    /* STACKMAP */
    i64imm, i32imm, 
    /* FENTRY_CALL */
    /* PATCHPOINT */
    -1, i64imm, i32imm, -1, i32imm, i32imm, 
    /* LOAD_STACK_GUARD */
    -1, 
    /* PREALLOCATED_SETUP */
    i32imm, 
    /* PREALLOCATED_ARG */
    -1, i32imm, i32imm, 
    /* STATEPOINT */
    /* LOCAL_ESCAPE */
    -1, i32imm, 
    /* FAULTING_OP */
    -1, 
    /* PATCHABLE_OP */
    /* PATCHABLE_FUNCTION_ENTER */
    /* PATCHABLE_RET */
    /* PATCHABLE_FUNCTION_EXIT */
    /* PATCHABLE_TAIL_CALL */
    /* PATCHABLE_EVENT_CALL */
    -1, -1, 
    /* PATCHABLE_TYPED_EVENT_CALL */
    -1, -1, -1, 
    /* ICALL_BRANCH_FUNNEL */
    /* G_ASSERT_SEXT */
    type0, type0, untyped_imm_0, 
    /* G_ASSERT_ZEXT */
    type0, type0, untyped_imm_0, 
    /* G_ASSERT_ALIGN */
    type0, type0, untyped_imm_0, 
    /* G_ADD */
    type0, type0, type0, 
    /* G_SUB */
    type0, type0, type0, 
    /* G_MUL */
    type0, type0, type0, 
    /* G_SDIV */
    type0, type0, type0, 
    /* G_UDIV */
    type0, type0, type0, 
    /* G_SREM */
    type0, type0, type0, 
    /* G_UREM */
    type0, type0, type0, 
    /* G_SDIVREM */
    type0, type0, type0, type0, 
    /* G_UDIVREM */
    type0, type0, type0, type0, 
    /* G_AND */
    type0, type0, type0, 
    /* G_OR */
    type0, type0, type0, 
    /* G_XOR */
    type0, type0, type0, 
    /* G_IMPLICIT_DEF */
    type0, 
    /* G_PHI */
    type0, 
    /* G_FRAME_INDEX */
    type0, -1, 
    /* G_GLOBAL_VALUE */
    type0, -1, 
    /* G_EXTRACT */
    type0, type1, untyped_imm_0, 
    /* G_UNMERGE_VALUES */
    type0, type1, 
    /* G_INSERT */
    type0, type0, type1, untyped_imm_0, 
    /* G_MERGE_VALUES */
    type0, type1, 
    /* G_BUILD_VECTOR */
    type0, type1, 
    /* G_BUILD_VECTOR_TRUNC */
    type0, type1, 
    /* G_CONCAT_VECTORS */
    type0, type1, 
    /* G_PTRTOINT */
    type0, type1, 
    /* G_INTTOPTR */
    type0, type1, 
    /* G_BITCAST */
    type0, type1, 
    /* G_FREEZE */
    type0, type0, 
    /* G_INTRINSIC_FPTRUNC_ROUND */
    type0, type1, i32imm, 
    /* G_INTRINSIC_TRUNC */
    type0, type0, 
    /* G_INTRINSIC_ROUND */
    type0, type0, 
    /* G_INTRINSIC_LRINT */
    type0, type1, 
    /* G_INTRINSIC_ROUNDEVEN */
    type0, type0, 
    /* G_READCYCLECOUNTER */
    type0, 
    /* G_LOAD */
    type0, ptype1, 
    /* G_SEXTLOAD */
    type0, ptype1, 
    /* G_ZEXTLOAD */
    type0, ptype1, 
    /* G_INDEXED_LOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_INDEXED_SEXTLOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_INDEXED_ZEXTLOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_STORE */
    type0, ptype1, 
    /* G_INDEXED_STORE */
    ptype0, type1, ptype0, ptype2, -1, 
    /* G_ATOMIC_CMPXCHG_WITH_SUCCESS */
    type0, type1, type2, type0, type0, 
    /* G_ATOMIC_CMPXCHG */
    type0, ptype1, type0, type0, 
    /* G_ATOMICRMW_XCHG */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_ADD */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_SUB */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_AND */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_NAND */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_OR */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_XOR */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_MAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_MIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UMAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UMIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FADD */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FSUB */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FMAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FMIN */
    type0, ptype1, type0, 
    /* G_FENCE */
    i32imm, i32imm, 
    /* G_BRCOND */
    type0, -1, 
    /* G_BRINDIRECT */
    type0, 
    /* G_INTRINSIC */
    -1, 
    /* G_INTRINSIC_W_SIDE_EFFECTS */
    -1, 
    /* G_ANYEXT */
    type0, type1, 
    /* G_TRUNC */
    type0, type1, 
    /* G_CONSTANT */
    type0, -1, 
    /* G_FCONSTANT */
    type0, -1, 
    /* G_VASTART */
    type0, 
    /* G_VAARG */
    type0, type1, -1, 
    /* G_SEXT */
    type0, type1, 
    /* G_SEXT_INREG */
    type0, type0, untyped_imm_0, 
    /* G_ZEXT */
    type0, type1, 
    /* G_SHL */
    type0, type0, type1, 
    /* G_LSHR */
    type0, type0, type1, 
    /* G_ASHR */
    type0, type0, type1, 
    /* G_FSHL */
    type0, type0, type0, type1, 
    /* G_FSHR */
    type0, type0, type0, type1, 
    /* G_ROTR */
    type0, type0, type1, 
    /* G_ROTL */
    type0, type0, type1, 
    /* G_ICMP */
    type0, -1, type1, type1, 
    /* G_FCMP */
    type0, -1, type1, type1, 
    /* G_SELECT */
    type0, type1, type0, type0, 
    /* G_UADDO */
    type0, type1, type0, type0, 
    /* G_UADDE */
    type0, type1, type0, type0, type1, 
    /* G_USUBO */
    type0, type1, type0, type0, 
    /* G_USUBE */
    type0, type1, type0, type0, type1, 
    /* G_SADDO */
    type0, type1, type0, type0, 
    /* G_SADDE */
    type0, type1, type0, type0, type1, 
    /* G_SSUBO */
    type0, type1, type0, type0, 
    /* G_SSUBE */
    type0, type1, type0, type0, type1, 
    /* G_UMULO */
    type0, type1, type0, type0, 
    /* G_SMULO */
    type0, type1, type0, type0, 
    /* G_UMULH */
    type0, type0, type0, 
    /* G_SMULH */
    type0, type0, type0, 
    /* G_UADDSAT */
    type0, type0, type0, 
    /* G_SADDSAT */
    type0, type0, type0, 
    /* G_USUBSAT */
    type0, type0, type0, 
    /* G_SSUBSAT */
    type0, type0, type0, 
    /* G_USHLSAT */
    type0, type0, type1, 
    /* G_SSHLSAT */
    type0, type0, type1, 
    /* G_SMULFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_UMULFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_SMULFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_UMULFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_SDIVFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_UDIVFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_SDIVFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_UDIVFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_FADD */
    type0, type0, type0, 
    /* G_FSUB */
    type0, type0, type0, 
    /* G_FMUL */
    type0, type0, type0, 
    /* G_FMA */
    type0, type0, type0, type0, 
    /* G_FMAD */
    type0, type0, type0, type0, 
    /* G_FDIV */
    type0, type0, type0, 
    /* G_FREM */
    type0, type0, type0, 
    /* G_FPOW */
    type0, type0, type0, 
    /* G_FPOWI */
    type0, type0, type1, 
    /* G_FEXP */
    type0, type0, 
    /* G_FEXP2 */
    type0, type0, 
    /* G_FLOG */
    type0, type0, 
    /* G_FLOG2 */
    type0, type0, 
    /* G_FLOG10 */
    type0, type0, 
    /* G_FNEG */
    type0, type0, 
    /* G_FPEXT */
    type0, type1, 
    /* G_FPTRUNC */
    type0, type1, 
    /* G_FPTOSI */
    type0, type1, 
    /* G_FPTOUI */
    type0, type1, 
    /* G_SITOFP */
    type0, type1, 
    /* G_UITOFP */
    type0, type1, 
    /* G_FABS */
    type0, type0, 
    /* G_FCOPYSIGN */
    type0, type0, type1, 
    /* G_IS_FPCLASS */
    type0, type1, -1, 
    /* G_FCANONICALIZE */
    type0, type0, 
    /* G_FMINNUM */
    type0, type0, type0, 
    /* G_FMAXNUM */
    type0, type0, type0, 
    /* G_FMINNUM_IEEE */
    type0, type0, type0, 
    /* G_FMAXNUM_IEEE */
    type0, type0, type0, 
    /* G_FMINIMUM */
    type0, type0, type0, 
    /* G_FMAXIMUM */
    type0, type0, type0, 
    /* G_PTR_ADD */
    ptype0, ptype0, type1, 
    /* G_PTRMASK */
    ptype0, ptype0, type1, 
    /* G_SMIN */
    type0, type0, type0, 
    /* G_SMAX */
    type0, type0, type0, 
    /* G_UMIN */
    type0, type0, type0, 
    /* G_UMAX */
    type0, type0, type0, 
    /* G_ABS */
    type0, type0, 
    /* G_LROUND */
    type0, type1, 
    /* G_LLROUND */
    type0, type1, 
    /* G_BR */
    -1, 
    /* G_BRJT */
    ptype0, -1, type1, 
    /* G_INSERT_VECTOR_ELT */
    type0, type0, type1, type2, 
    /* G_EXTRACT_VECTOR_ELT */
    type0, type1, type2, 
    /* G_SHUFFLE_VECTOR */
    type0, type1, type1, -1, 
    /* G_CTTZ */
    type0, type1, 
    /* G_CTTZ_ZERO_UNDEF */
    type0, type1, 
    /* G_CTLZ */
    type0, type1, 
    /* G_CTLZ_ZERO_UNDEF */
    type0, type1, 
    /* G_CTPOP */
    type0, type1, 
    /* G_BSWAP */
    type0, type0, 
    /* G_BITREVERSE */
    type0, type0, 
    /* G_FCEIL */
    type0, type0, 
    /* G_FCOS */
    type0, type0, 
    /* G_FSIN */
    type0, type0, 
    /* G_FSQRT */
    type0, type0, 
    /* G_FFLOOR */
    type0, type0, 
    /* G_FRINT */
    type0, type0, 
    /* G_FNEARBYINT */
    type0, type0, 
    /* G_ADDRSPACE_CAST */
    type0, type1, 
    /* G_BLOCK_ADDR */
    type0, -1, 
    /* G_JUMP_TABLE */
    type0, -1, 
    /* G_DYN_STACKALLOC */
    ptype0, type1, i32imm, 
    /* G_STRICT_FADD */
    type0, type0, type0, 
    /* G_STRICT_FSUB */
    type0, type0, type0, 
    /* G_STRICT_FMUL */
    type0, type0, type0, 
    /* G_STRICT_FDIV */
    type0, type0, type0, 
    /* G_STRICT_FREM */
    type0, type0, type0, 
    /* G_STRICT_FMA */
    type0, type0, type0, type0, 
    /* G_STRICT_FSQRT */
    type0, type0, 
    /* G_READ_REGISTER */
    type0, -1, 
    /* G_WRITE_REGISTER */
    -1, type0, 
    /* G_MEMCPY */
    ptype0, ptype1, type2, untyped_imm_0, 
    /* G_MEMCPY_INLINE */
    ptype0, ptype1, type2, 
    /* G_MEMMOVE */
    ptype0, ptype1, type2, untyped_imm_0, 
    /* G_MEMSET */
    ptype0, type1, type2, untyped_imm_0, 
    /* G_BZERO */
    ptype0, type1, untyped_imm_0, 
    /* G_VECREDUCE_SEQ_FADD */
    type0, type1, type2, 
    /* G_VECREDUCE_SEQ_FMUL */
    type0, type1, type2, 
    /* G_VECREDUCE_FADD */
    type0, type1, 
    /* G_VECREDUCE_FMUL */
    type0, type1, 
    /* G_VECREDUCE_FMAX */
    type0, type1, 
    /* G_VECREDUCE_FMIN */
    type0, type1, 
    /* G_VECREDUCE_ADD */
    type0, type1, 
    /* G_VECREDUCE_MUL */
    type0, type1, 
    /* G_VECREDUCE_AND */
    type0, type1, 
    /* G_VECREDUCE_OR */
    type0, type1, 
    /* G_VECREDUCE_XOR */
    type0, type1, 
    /* G_VECREDUCE_SMAX */
    type0, type1, 
    /* G_VECREDUCE_SMIN */
    type0, type1, 
    /* G_VECREDUCE_UMAX */
    type0, type1, 
    /* G_VECREDUCE_UMIN */
    type0, type1, 
    /* G_SBFX */
    type0, type0, type1, type1, 
    /* G_UBFX */
    type0, type0, type1, type1, 
    /* CALL_PARAMS */
    function32_op, 
    /* CALL_PARAMS_S */
    function32_op, 
    /* CALL_RESULTS */
    /* CALL_RESULTS_S */
    /* CATCHRET */
    bb_op, bb_op, 
    /* CATCHRET_S */
    bb_op, bb_op, 
    /* CLEANUPRET */
    /* CLEANUPRET_S */
    /* COMPILER_FENCE */
    /* COMPILER_FENCE_S */
    /* RET_CALL_RESULTS */
    /* RET_CALL_RESULTS_S */
    /* ABS_F32 */
    F32, F32, 
    /* ABS_F32_S */
    /* ABS_F32x4 */
    V128, V128, 
    /* ABS_F32x4_S */
    /* ABS_F64 */
    F64, F64, 
    /* ABS_F64_S */
    /* ABS_F64x2 */
    V128, V128, 
    /* ABS_F64x2_S */
    /* ABS_I16x8 */
    V128, V128, 
    /* ABS_I16x8_S */
    /* ABS_I32x4 */
    V128, V128, 
    /* ABS_I32x4_S */
    /* ABS_I64x2 */
    V128, V128, 
    /* ABS_I64x2_S */
    /* ABS_I8x16 */
    V128, V128, 
    /* ABS_I8x16_S */
    /* ADD_F32 */
    F32, F32, F32, 
    /* ADD_F32_S */
    /* ADD_F32x4 */
    V128, V128, V128, 
    /* ADD_F32x4_S */
    /* ADD_F64 */
    F64, F64, F64, 
    /* ADD_F64_S */
    /* ADD_F64x2 */
    V128, V128, V128, 
    /* ADD_F64x2_S */
    /* ADD_I16x8 */
    V128, V128, V128, 
    /* ADD_I16x8_S */
    /* ADD_I32 */
    I32, I32, I32, 
    /* ADD_I32_S */
    /* ADD_I32x4 */
    V128, V128, V128, 
    /* ADD_I32x4_S */
    /* ADD_I64 */
    I64, I64, I64, 
    /* ADD_I64_S */
    /* ADD_I64x2 */
    V128, V128, V128, 
    /* ADD_I64x2_S */
    /* ADD_I8x16 */
    V128, V128, V128, 
    /* ADD_I8x16_S */
    /* ADD_SAT_S_I16x8 */
    V128, V128, V128, 
    /* ADD_SAT_S_I16x8_S */
    /* ADD_SAT_S_I8x16 */
    V128, V128, V128, 
    /* ADD_SAT_S_I8x16_S */
    /* ADD_SAT_U_I16x8 */
    V128, V128, V128, 
    /* ADD_SAT_U_I16x8_S */
    /* ADD_SAT_U_I8x16 */
    V128, V128, V128, 
    /* ADD_SAT_U_I8x16_S */
    /* ADJCALLSTACKDOWN */
    i32imm, i32imm, 
    /* ADJCALLSTACKDOWN_S */
    i32imm, i32imm, 
    /* ADJCALLSTACKUP */
    i32imm, i32imm, 
    /* ADJCALLSTACKUP_S */
    i32imm, i32imm, 
    /* ALLTRUE_I16x8 */
    I32, V128, 
    /* ALLTRUE_I16x8_S */
    /* ALLTRUE_I32x4 */
    I32, V128, 
    /* ALLTRUE_I32x4_S */
    /* ALLTRUE_I64x2 */
    I32, V128, 
    /* ALLTRUE_I64x2_S */
    /* ALLTRUE_I8x16 */
    I32, V128, 
    /* ALLTRUE_I8x16_S */
    /* AND */
    V128, V128, V128, 
    /* ANDNOT */
    V128, V128, V128, 
    /* ANDNOT_S */
    /* AND_I32 */
    I32, I32, I32, 
    /* AND_I32_S */
    /* AND_I64 */
    I64, I64, I64, 
    /* AND_I64_S */
    /* AND_S */
    /* ANYTRUE */
    I32, V128, 
    /* ANYTRUE_S */
    /* ARGUMENT_externref */
    EXTERNREF, i32imm, 
    /* ARGUMENT_externref_S */
    i32imm, 
    /* ARGUMENT_f32 */
    F32, i32imm, 
    /* ARGUMENT_f32_S */
    i32imm, 
    /* ARGUMENT_f64 */
    F64, i32imm, 
    /* ARGUMENT_f64_S */
    i32imm, 
    /* ARGUMENT_funcref */
    FUNCREF, i32imm, 
    /* ARGUMENT_funcref_S */
    i32imm, 
    /* ARGUMENT_i32 */
    I32, i32imm, 
    /* ARGUMENT_i32_S */
    i32imm, 
    /* ARGUMENT_i64 */
    I64, i32imm, 
    /* ARGUMENT_i64_S */
    i32imm, 
    /* ARGUMENT_v16i8 */
    V128, i32imm, 
    /* ARGUMENT_v16i8_S */
    i32imm, 
    /* ARGUMENT_v2f64 */
    V128, i32imm, 
    /* ARGUMENT_v2f64_S */
    i32imm, 
    /* ARGUMENT_v2i64 */
    V128, i32imm, 
    /* ARGUMENT_v2i64_S */
    i32imm, 
    /* ARGUMENT_v4f32 */
    V128, i32imm, 
    /* ARGUMENT_v4f32_S */
    i32imm, 
    /* ARGUMENT_v4i32 */
    V128, i32imm, 
    /* ARGUMENT_v4i32_S */
    i32imm, 
    /* ARGUMENT_v8i16 */
    V128, i32imm, 
    /* ARGUMENT_v8i16_S */
    i32imm, 
    /* ATOMIC_FENCE */
    i8imm, 
    /* ATOMIC_FENCE_S */
    i8imm, 
    /* ATOMIC_LOAD16_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD16_U_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD16_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD16_U_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD16_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD16_U_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD16_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD16_U_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD32_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD32_U_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD32_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD32_U_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD8_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD8_U_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD8_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD8_U_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD8_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD8_U_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD8_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD8_U_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_ADD_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_ADD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_ADD_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_ADD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_AND_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_AND_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_AND_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_AND_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, I32, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, I32, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_OR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_OR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_OR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_OR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_SUB_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_SUB_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_SUB_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_SUB_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_XCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_XCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XOR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_XOR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XOR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_XOR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_ADD_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_ADD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_ADD_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_ADD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_AND_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_AND_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_AND_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_AND_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, I32, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, I32, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_OR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_OR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_OR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_OR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_SUB_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_SUB_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_SUB_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_SUB_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_XCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_XCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XOR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_XOR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XOR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_XOR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_ADD_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_ADD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_ADD_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_ADD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_AND_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_AND_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_AND_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_AND_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_CMPXCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, I32, 
    /* ATOMIC_RMW_CMPXCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_CMPXCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, I32, 
    /* ATOMIC_RMW_CMPXCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_OR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_OR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_OR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_OR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_SUB_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_SUB_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_SUB_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_SUB_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_XCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_XCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XOR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_XOR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XOR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_XOR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE16_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* ATOMIC_STORE16_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE16_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* ATOMIC_STORE16_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE16_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE16_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE16_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE16_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE32_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE32_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE32_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE32_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE8_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* ATOMIC_STORE8_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE8_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* ATOMIC_STORE8_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE8_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE8_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE8_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE8_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* ATOMIC_STORE_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* ATOMIC_STORE_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE_I64_A64_S */
    P2Align, offset64_op, 
    /* AVGR_U_I16x8 */
    V128, V128, V128, 
    /* AVGR_U_I16x8_S */
    /* AVGR_U_I8x16 */
    V128, V128, V128, 
    /* AVGR_U_I8x16_S */
    /* BITMASK_I16x8 */
    I32, V128, 
    /* BITMASK_I16x8_S */
    /* BITMASK_I32x4 */
    I32, V128, 
    /* BITMASK_I32x4_S */
    /* BITMASK_I64x2 */
    I32, V128, 
    /* BITMASK_I64x2_S */
    /* BITMASK_I8x16 */
    I32, V128, 
    /* BITMASK_I8x16_S */
    /* BITSELECT */
    V128, V128, V128, V128, 
    /* BITSELECT_S */
    /* BLOCK */
    Signature, 
    /* BLOCK_S */
    Signature, 
    /* BR */
    bb_op, 
    /* BR_IF */
    bb_op, I32, 
    /* BR_IF_S */
    bb_op, 
    /* BR_S */
    bb_op, 
    /* BR_TABLE_I32 */
    I32, 
    /* BR_TABLE_I32_S */
    brlist, 
    /* BR_TABLE_I64 */
    I64, 
    /* BR_TABLE_I64_S */
    brlist, 
    /* BR_UNLESS */
    bb_op, I32, 
    /* BR_UNLESS_S */
    bb_op, 
    /* CALL */
    function32_op, 
    /* CALL_INDIRECT */
    TypeIndex, table32_op, 
    /* CALL_INDIRECT_S */
    TypeIndex, table32_op, 
    /* CALL_S */
    function32_op, 
    /* CATCH */
    tag_op, 
    /* CATCH_ALL */
    /* CATCH_ALL_S */
    /* CATCH_S */
    tag_op, 
    /* CEIL_F32 */
    F32, F32, 
    /* CEIL_F32_S */
    /* CEIL_F32x4 */
    V128, V128, 
    /* CEIL_F32x4_S */
    /* CEIL_F64 */
    F64, F64, 
    /* CEIL_F64_S */
    /* CEIL_F64x2 */
    V128, V128, 
    /* CEIL_F64x2_S */
    /* CLZ_I32 */
    I32, I32, 
    /* CLZ_I32_S */
    /* CLZ_I64 */
    I64, I64, 
    /* CLZ_I64_S */
    /* CONST_F32 */
    F32, f32imm_op, 
    /* CONST_F32_S */
    f32imm_op, 
    /* CONST_F64 */
    F64, f64imm_op, 
    /* CONST_F64_S */
    f64imm_op, 
    /* CONST_I32 */
    I32, i32imm_op, 
    /* CONST_I32_S */
    i32imm_op, 
    /* CONST_I64 */
    I64, i64imm_op, 
    /* CONST_I64_S */
    i64imm_op, 
    /* CONST_V128_F32x4 */
    V128, f32imm_op, f32imm_op, f32imm_op, f32imm_op, 
    /* CONST_V128_F32x4_S */
    f32imm_op, f32imm_op, f32imm_op, f32imm_op, 
    /* CONST_V128_F64x2 */
    V128, f64imm_op, f64imm_op, 
    /* CONST_V128_F64x2_S */
    f64imm_op, f64imm_op, 
    /* CONST_V128_I16x8 */
    V128, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, 
    /* CONST_V128_I16x8_S */
    vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, 
    /* CONST_V128_I32x4 */
    V128, vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, 
    /* CONST_V128_I32x4_S */
    vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, 
    /* CONST_V128_I64x2 */
    V128, vec_i64imm_op, vec_i64imm_op, 
    /* CONST_V128_I64x2_S */
    vec_i64imm_op, vec_i64imm_op, 
    /* CONST_V128_I8x16 */
    V128, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* CONST_V128_I8x16_S */
    vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* COPYSIGN_F32 */
    F32, F32, F32, 
    /* COPYSIGN_F32_S */
    /* COPYSIGN_F64 */
    F64, F64, F64, 
    /* COPYSIGN_F64_S */
    /* COPY_EXTERNREF */
    EXTERNREF, EXTERNREF, 
    /* COPY_EXTERNREF_S */
    /* COPY_F32 */
    F32, F32, 
    /* COPY_F32_S */
    /* COPY_F64 */
    F64, F64, 
    /* COPY_F64_S */
    /* COPY_FUNCREF */
    FUNCREF, FUNCREF, 
    /* COPY_FUNCREF_S */
    /* COPY_I32 */
    I32, I32, 
    /* COPY_I32_S */
    /* COPY_I64 */
    I64, I64, 
    /* COPY_I64_S */
    /* COPY_V128 */
    V128, V128, 
    /* COPY_V128_S */
    /* CTZ_I32 */
    I32, I32, 
    /* CTZ_I32_S */
    /* CTZ_I64 */
    I64, I64, 
    /* CTZ_I64_S */
    /* DEBUG_UNREACHABLE */
    /* DEBUG_UNREACHABLE_S */
    /* DELEGATE */
    bb_op, 
    /* DELEGATE_S */
    bb_op, 
    /* DIV_F32 */
    F32, F32, F32, 
    /* DIV_F32_S */
    /* DIV_F32x4 */
    V128, V128, V128, 
    /* DIV_F32x4_S */
    /* DIV_F64 */
    F64, F64, F64, 
    /* DIV_F64_S */
    /* DIV_F64x2 */
    V128, V128, V128, 
    /* DIV_F64x2_S */
    /* DIV_S_I32 */
    I32, I32, I32, 
    /* DIV_S_I32_S */
    /* DIV_S_I64 */
    I64, I64, I64, 
    /* DIV_S_I64_S */
    /* DIV_U_I32 */
    I32, I32, I32, 
    /* DIV_U_I32_S */
    /* DIV_U_I64 */
    I64, I64, I64, 
    /* DIV_U_I64_S */
    /* DOT */
    V128, V128, V128, 
    /* DOT_S */
    /* DROP_EXTERNREF */
    EXTERNREF, 
    /* DROP_EXTERNREF_S */
    /* DROP_F32 */
    F32, 
    /* DROP_F32_S */
    /* DROP_F64 */
    F64, 
    /* DROP_F64_S */
    /* DROP_FUNCREF */
    FUNCREF, 
    /* DROP_FUNCREF_S */
    /* DROP_I32 */
    I32, 
    /* DROP_I32_S */
    /* DROP_I64 */
    I64, 
    /* DROP_I64_S */
    /* DROP_V128 */
    V128, 
    /* DROP_V128_S */
    /* ELSE */
    /* ELSE_S */
    /* END */
    /* END_BLOCK */
    /* END_BLOCK_S */
    /* END_FUNCTION */
    /* END_FUNCTION_S */
    /* END_IF */
    /* END_IF_S */
    /* END_LOOP */
    /* END_LOOP_S */
    /* END_S */
    /* END_TRY */
    /* END_TRY_S */
    /* EQZ_I32 */
    I32, I32, 
    /* EQZ_I32_S */
    /* EQZ_I64 */
    I32, I64, 
    /* EQZ_I64_S */
    /* EQ_F32 */
    I32, F32, F32, 
    /* EQ_F32_S */
    /* EQ_F32x4 */
    V128, V128, V128, 
    /* EQ_F32x4_S */
    /* EQ_F64 */
    I32, F64, F64, 
    /* EQ_F64_S */
    /* EQ_F64x2 */
    V128, V128, V128, 
    /* EQ_F64x2_S */
    /* EQ_I16x8 */
    V128, V128, V128, 
    /* EQ_I16x8_S */
    /* EQ_I32 */
    I32, I32, I32, 
    /* EQ_I32_S */
    /* EQ_I32x4 */
    V128, V128, V128, 
    /* EQ_I32x4_S */
    /* EQ_I64 */
    I32, I64, I64, 
    /* EQ_I64_S */
    /* EQ_I64x2 */
    V128, V128, V128, 
    /* EQ_I64x2_S */
    /* EQ_I8x16 */
    V128, V128, V128, 
    /* EQ_I8x16_S */
    /* EXTMUL_HIGH_S_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_S_I16x8_S */
    /* EXTMUL_HIGH_S_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_S_I32x4_S */
    /* EXTMUL_HIGH_S_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_S_I64x2_S */
    /* EXTMUL_HIGH_U_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_U_I16x8_S */
    /* EXTMUL_HIGH_U_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_U_I32x4_S */
    /* EXTMUL_HIGH_U_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_U_I64x2_S */
    /* EXTMUL_LOW_S_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_LOW_S_I16x8_S */
    /* EXTMUL_LOW_S_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_LOW_S_I32x4_S */
    /* EXTMUL_LOW_S_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_LOW_S_I64x2_S */
    /* EXTMUL_LOW_U_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_LOW_U_I16x8_S */
    /* EXTMUL_LOW_U_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_LOW_U_I32x4_S */
    /* EXTMUL_LOW_U_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_LOW_U_I64x2_S */
    /* EXTRACT_LANE_F32x4 */
    F32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_F32x4_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_F64x2 */
    F64, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_F64x2_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_s */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_s_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_u */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_u_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I32x4 */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I32x4_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I64x2 */
    I64, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I64x2_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_s */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_s_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_u */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_u_S */
    vec_i8imm_op, 
    /* F32_CONVERT_S_I32 */
    F32, I32, 
    /* F32_CONVERT_S_I32_S */
    /* F32_CONVERT_S_I64 */
    F32, I64, 
    /* F32_CONVERT_S_I64_S */
    /* F32_CONVERT_U_I32 */
    F32, I32, 
    /* F32_CONVERT_U_I32_S */
    /* F32_CONVERT_U_I64 */
    F32, I64, 
    /* F32_CONVERT_U_I64_S */
    /* F32_DEMOTE_F64 */
    F32, F64, 
    /* F32_DEMOTE_F64_S */
    /* F32_REINTERPRET_I32 */
    F32, I32, 
    /* F32_REINTERPRET_I32_S */
    /* F64_CONVERT_S_I32 */
    F64, I32, 
    /* F64_CONVERT_S_I32_S */
    /* F64_CONVERT_S_I64 */
    F64, I64, 
    /* F64_CONVERT_S_I64_S */
    /* F64_CONVERT_U_I32 */
    F64, I32, 
    /* F64_CONVERT_U_I32_S */
    /* F64_CONVERT_U_I64 */
    F64, I64, 
    /* F64_CONVERT_U_I64_S */
    /* F64_PROMOTE_F32 */
    F64, F32, 
    /* F64_PROMOTE_F32_S */
    /* F64_REINTERPRET_I64 */
    F64, I64, 
    /* F64_REINTERPRET_I64_S */
    /* FALLTHROUGH_RETURN */
    /* FALLTHROUGH_RETURN_S */
    /* FLOOR_F32 */
    F32, F32, 
    /* FLOOR_F32_S */
    /* FLOOR_F32x4 */
    V128, V128, 
    /* FLOOR_F32x4_S */
    /* FLOOR_F64 */
    F64, F64, 
    /* FLOOR_F64_S */
    /* FLOOR_F64x2 */
    V128, V128, 
    /* FLOOR_F64x2_S */
    /* FP_TO_SINT_I32_F32 */
    I32, F32, 
    /* FP_TO_SINT_I32_F32_S */
    /* FP_TO_SINT_I32_F64 */
    I32, F64, 
    /* FP_TO_SINT_I32_F64_S */
    /* FP_TO_SINT_I64_F32 */
    I64, F32, 
    /* FP_TO_SINT_I64_F32_S */
    /* FP_TO_SINT_I64_F64 */
    I64, F64, 
    /* FP_TO_SINT_I64_F64_S */
    /* FP_TO_UINT_I32_F32 */
    I32, F32, 
    /* FP_TO_UINT_I32_F32_S */
    /* FP_TO_UINT_I32_F64 */
    I32, F64, 
    /* FP_TO_UINT_I32_F64_S */
    /* FP_TO_UINT_I64_F32 */
    I64, F32, 
    /* FP_TO_UINT_I64_F32_S */
    /* FP_TO_UINT_I64_F64 */
    I64, F64, 
    /* FP_TO_UINT_I64_F64_S */
    /* GE_F32 */
    I32, F32, F32, 
    /* GE_F32_S */
    /* GE_F32x4 */
    V128, V128, V128, 
    /* GE_F32x4_S */
    /* GE_F64 */
    I32, F64, F64, 
    /* GE_F64_S */
    /* GE_F64x2 */
    V128, V128, V128, 
    /* GE_F64x2_S */
    /* GE_S_I16x8 */
    V128, V128, V128, 
    /* GE_S_I16x8_S */
    /* GE_S_I32 */
    I32, I32, I32, 
    /* GE_S_I32_S */
    /* GE_S_I32x4 */
    V128, V128, V128, 
    /* GE_S_I32x4_S */
    /* GE_S_I64 */
    I32, I64, I64, 
    /* GE_S_I64_S */
    /* GE_S_I64x2 */
    V128, V128, V128, 
    /* GE_S_I64x2_S */
    /* GE_S_I8x16 */
    V128, V128, V128, 
    /* GE_S_I8x16_S */
    /* GE_U_I16x8 */
    V128, V128, V128, 
    /* GE_U_I16x8_S */
    /* GE_U_I32 */
    I32, I32, I32, 
    /* GE_U_I32_S */
    /* GE_U_I32x4 */
    V128, V128, V128, 
    /* GE_U_I32x4_S */
    /* GE_U_I64 */
    I32, I64, I64, 
    /* GE_U_I64_S */
    /* GE_U_I8x16 */
    V128, V128, V128, 
    /* GE_U_I8x16_S */
    /* GLOBAL_GET_EXTERNREF */
    EXTERNREF, global_op32, 
    /* GLOBAL_GET_EXTERNREF_S */
    global_op32, 
    /* GLOBAL_GET_F32 */
    F32, global_op32, 
    /* GLOBAL_GET_F32_S */
    global_op32, 
    /* GLOBAL_GET_F64 */
    F64, global_op32, 
    /* GLOBAL_GET_F64_S */
    global_op32, 
    /* GLOBAL_GET_FUNCREF */
    FUNCREF, global_op32, 
    /* GLOBAL_GET_FUNCREF_S */
    global_op32, 
    /* GLOBAL_GET_I32 */
    I32, global_op32, 
    /* GLOBAL_GET_I32_S */
    global_op32, 
    /* GLOBAL_GET_I64 */
    I64, global_op64, 
    /* GLOBAL_GET_I64_S */
    global_op64, 
    /* GLOBAL_GET_V128 */
    V128, global_op32, 
    /* GLOBAL_GET_V128_S */
    global_op32, 
    /* GLOBAL_SET_EXTERNREF */
    global_op32, EXTERNREF, 
    /* GLOBAL_SET_EXTERNREF_S */
    global_op32, 
    /* GLOBAL_SET_F32 */
    global_op32, F32, 
    /* GLOBAL_SET_F32_S */
    global_op32, 
    /* GLOBAL_SET_F64 */
    global_op32, F64, 
    /* GLOBAL_SET_F64_S */
    global_op32, 
    /* GLOBAL_SET_FUNCREF */
    global_op32, FUNCREF, 
    /* GLOBAL_SET_FUNCREF_S */
    global_op32, 
    /* GLOBAL_SET_I32 */
    global_op32, I32, 
    /* GLOBAL_SET_I32_S */
    global_op32, 
    /* GLOBAL_SET_I64 */
    global_op64, I64, 
    /* GLOBAL_SET_I64_S */
    global_op64, 
    /* GLOBAL_SET_V128 */
    global_op32, V128, 
    /* GLOBAL_SET_V128_S */
    global_op32, 
    /* GT_F32 */
    I32, F32, F32, 
    /* GT_F32_S */
    /* GT_F32x4 */
    V128, V128, V128, 
    /* GT_F32x4_S */
    /* GT_F64 */
    I32, F64, F64, 
    /* GT_F64_S */
    /* GT_F64x2 */
    V128, V128, V128, 
    /* GT_F64x2_S */
    /* GT_S_I16x8 */
    V128, V128, V128, 
    /* GT_S_I16x8_S */
    /* GT_S_I32 */
    I32, I32, I32, 
    /* GT_S_I32_S */
    /* GT_S_I32x4 */
    V128, V128, V128, 
    /* GT_S_I32x4_S */
    /* GT_S_I64 */
    I32, I64, I64, 
    /* GT_S_I64_S */
    /* GT_S_I64x2 */
    V128, V128, V128, 
    /* GT_S_I64x2_S */
    /* GT_S_I8x16 */
    V128, V128, V128, 
    /* GT_S_I8x16_S */
    /* GT_U_I16x8 */
    V128, V128, V128, 
    /* GT_U_I16x8_S */
    /* GT_U_I32 */
    I32, I32, I32, 
    /* GT_U_I32_S */
    /* GT_U_I32x4 */
    V128, V128, V128, 
    /* GT_U_I32x4_S */
    /* GT_U_I64 */
    I32, I64, I64, 
    /* GT_U_I64_S */
    /* GT_U_I8x16 */
    V128, V128, V128, 
    /* GT_U_I8x16_S */
    /* I32_EXTEND16_S_I32 */
    I32, I32, 
    /* I32_EXTEND16_S_I32_S */
    /* I32_EXTEND8_S_I32 */
    I32, I32, 
    /* I32_EXTEND8_S_I32_S */
    /* I32_REINTERPRET_F32 */
    I32, F32, 
    /* I32_REINTERPRET_F32_S */
    /* I32_TRUNC_S_F32 */
    I32, F32, 
    /* I32_TRUNC_S_F32_S */
    /* I32_TRUNC_S_F64 */
    I32, F64, 
    /* I32_TRUNC_S_F64_S */
    /* I32_TRUNC_S_SAT_F32 */
    I32, F32, 
    /* I32_TRUNC_S_SAT_F32_S */
    /* I32_TRUNC_S_SAT_F64 */
    I32, F64, 
    /* I32_TRUNC_S_SAT_F64_S */
    /* I32_TRUNC_U_F32 */
    I32, F32, 
    /* I32_TRUNC_U_F32_S */
    /* I32_TRUNC_U_F64 */
    I32, F64, 
    /* I32_TRUNC_U_F64_S */
    /* I32_TRUNC_U_SAT_F32 */
    I32, F32, 
    /* I32_TRUNC_U_SAT_F32_S */
    /* I32_TRUNC_U_SAT_F64 */
    I32, F64, 
    /* I32_TRUNC_U_SAT_F64_S */
    /* I32_WRAP_I64 */
    I32, I64, 
    /* I32_WRAP_I64_S */
    /* I64_EXTEND16_S_I64 */
    I64, I64, 
    /* I64_EXTEND16_S_I64_S */
    /* I64_EXTEND32_S_I64 */
    I64, I64, 
    /* I64_EXTEND32_S_I64_S */
    /* I64_EXTEND8_S_I64 */
    I64, I64, 
    /* I64_EXTEND8_S_I64_S */
    /* I64_EXTEND_S_I32 */
    I64, I32, 
    /* I64_EXTEND_S_I32_S */
    /* I64_EXTEND_U_I32 */
    I64, I32, 
    /* I64_EXTEND_U_I32_S */
    /* I64_REINTERPRET_F64 */
    I64, F64, 
    /* I64_REINTERPRET_F64_S */
    /* I64_TRUNC_S_F32 */
    I64, F32, 
    /* I64_TRUNC_S_F32_S */
    /* I64_TRUNC_S_F64 */
    I64, F64, 
    /* I64_TRUNC_S_F64_S */
    /* I64_TRUNC_S_SAT_F32 */
    I64, F32, 
    /* I64_TRUNC_S_SAT_F32_S */
    /* I64_TRUNC_S_SAT_F64 */
    I64, F64, 
    /* I64_TRUNC_S_SAT_F64_S */
    /* I64_TRUNC_U_F32 */
    I64, F32, 
    /* I64_TRUNC_U_F32_S */
    /* I64_TRUNC_U_F64 */
    I64, F64, 
    /* I64_TRUNC_U_F64_S */
    /* I64_TRUNC_U_SAT_F32 */
    I64, F32, 
    /* I64_TRUNC_U_SAT_F32_S */
    /* I64_TRUNC_U_SAT_F64 */
    I64, F64, 
    /* I64_TRUNC_U_SAT_F64_S */
    /* IF */
    Signature, I32, 
    /* IF_S */
    Signature, 
    /* LANESELECT_I16x8 */
    V128, V128, V128, V128, 
    /* LANESELECT_I16x8_S */
    /* LANESELECT_I32x4 */
    V128, V128, V128, V128, 
    /* LANESELECT_I32x4_S */
    /* LANESELECT_I64x2 */
    V128, V128, V128, V128, 
    /* LANESELECT_I64x2_S */
    /* LANESELECT_I8x16 */
    V128, V128, V128, V128, 
    /* LANESELECT_I8x16_S */
    /* LE_F32 */
    I32, F32, F32, 
    /* LE_F32_S */
    /* LE_F32x4 */
    V128, V128, V128, 
    /* LE_F32x4_S */
    /* LE_F64 */
    I32, F64, F64, 
    /* LE_F64_S */
    /* LE_F64x2 */
    V128, V128, V128, 
    /* LE_F64x2_S */
    /* LE_S_I16x8 */
    V128, V128, V128, 
    /* LE_S_I16x8_S */
    /* LE_S_I32 */
    I32, I32, I32, 
    /* LE_S_I32_S */
    /* LE_S_I32x4 */
    V128, V128, V128, 
    /* LE_S_I32x4_S */
    /* LE_S_I64 */
    I32, I64, I64, 
    /* LE_S_I64_S */
    /* LE_S_I64x2 */
    V128, V128, V128, 
    /* LE_S_I64x2_S */
    /* LE_S_I8x16 */
    V128, V128, V128, 
    /* LE_S_I8x16_S */
    /* LE_U_I16x8 */
    V128, V128, V128, 
    /* LE_U_I16x8_S */
    /* LE_U_I32 */
    I32, I32, I32, 
    /* LE_U_I32_S */
    /* LE_U_I32x4 */
    V128, V128, V128, 
    /* LE_U_I32x4_S */
    /* LE_U_I64 */
    I32, I64, I64, 
    /* LE_U_I64_S */
    /* LE_U_I8x16 */
    V128, V128, V128, 
    /* LE_U_I8x16_S */
    /* LOAD16_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD16_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD16_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_S_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD16_S_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_S_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD16_S_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_S_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD16_S_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_S_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD16_S_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD16_U_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD16_U_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD16_U_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD16_U_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD32_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD32_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD32_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD32_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD32_S_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD32_S_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD32_S_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD32_S_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD32_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD32_U_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD32_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD32_U_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD64_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD64_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD64_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD64_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD8_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD8_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_S_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD8_S_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_S_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD8_S_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_S_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD8_S_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_S_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD8_S_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD8_U_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD8_U_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD8_U_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD8_U_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_S_I16x8_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_S_I16x8_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_S_I16x8_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_S_I16x8_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_S_I32x4_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_S_I32x4_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_S_I32x4_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_S_I32x4_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_S_I64x2_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_S_I64x2_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_S_I64x2_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_S_I64x2_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_U_I16x8_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_U_I16x8_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_U_I16x8_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_U_I16x8_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_U_I32x4_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_U_I32x4_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_U_I32x4_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_U_I32x4_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_U_I64x2_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_U_I64x2_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_U_I64x2_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_U_I64x2_A64_S */
    P2Align, offset64_op, 
    /* LOAD_F32_A32 */
    F32, P2Align, offset32_op, I32, 
    /* LOAD_F32_A32_S */
    P2Align, offset32_op, 
    /* LOAD_F32_A64 */
    F32, P2Align, offset64_op, I64, 
    /* LOAD_F32_A64_S */
    P2Align, offset64_op, 
    /* LOAD_F64_A32 */
    F64, P2Align, offset32_op, I32, 
    /* LOAD_F64_A32_S */
    P2Align, offset32_op, 
    /* LOAD_F64_A64 */
    F64, P2Align, offset64_op, I64, 
    /* LOAD_F64_A64_S */
    P2Align, offset64_op, 
    /* LOAD_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD_LANE_I16x8_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I16x8_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I16x8_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I16x8_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_LANE_I32x4_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I32x4_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I32x4_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I32x4_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_LANE_I64x2_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I64x2_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I64x2_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I64x2_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_LANE_I8x16_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I8x16_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I8x16_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I8x16_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_V128_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_V128_A32_S */
    P2Align, offset32_op, 
    /* LOAD_V128_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_V128_A64_S */
    P2Align, offset64_op, 
    /* LOAD_ZERO_I32x4_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_ZERO_I32x4_A32_S */
    P2Align, offset32_op, 
    /* LOAD_ZERO_I32x4_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_ZERO_I32x4_A64_S */
    P2Align, offset64_op, 
    /* LOAD_ZERO_I64x2_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_ZERO_I64x2_A32_S */
    P2Align, offset32_op, 
    /* LOAD_ZERO_I64x2_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_ZERO_I64x2_A64_S */
    P2Align, offset64_op, 
    /* LOCAL_GET_EXTERNREF */
    EXTERNREF, local_op, 
    /* LOCAL_GET_EXTERNREF_S */
    local_op, 
    /* LOCAL_GET_F32 */
    F32, local_op, 
    /* LOCAL_GET_F32_S */
    local_op, 
    /* LOCAL_GET_F64 */
    F64, local_op, 
    /* LOCAL_GET_F64_S */
    local_op, 
    /* LOCAL_GET_FUNCREF */
    FUNCREF, local_op, 
    /* LOCAL_GET_FUNCREF_S */
    local_op, 
    /* LOCAL_GET_I32 */
    I32, local_op, 
    /* LOCAL_GET_I32_S */
    local_op, 
    /* LOCAL_GET_I64 */
    I64, local_op, 
    /* LOCAL_GET_I64_S */
    local_op, 
    /* LOCAL_GET_V128 */
    V128, local_op, 
    /* LOCAL_GET_V128_S */
    local_op, 
    /* LOCAL_SET_EXTERNREF */
    local_op, EXTERNREF, 
    /* LOCAL_SET_EXTERNREF_S */
    local_op, 
    /* LOCAL_SET_F32 */
    local_op, F32, 
    /* LOCAL_SET_F32_S */
    local_op, 
    /* LOCAL_SET_F64 */
    local_op, F64, 
    /* LOCAL_SET_F64_S */
    local_op, 
    /* LOCAL_SET_FUNCREF */
    local_op, FUNCREF, 
    /* LOCAL_SET_FUNCREF_S */
    local_op, 
    /* LOCAL_SET_I32 */
    local_op, I32, 
    /* LOCAL_SET_I32_S */
    local_op, 
    /* LOCAL_SET_I64 */
    local_op, I64, 
    /* LOCAL_SET_I64_S */
    local_op, 
    /* LOCAL_SET_V128 */
    local_op, V128, 
    /* LOCAL_SET_V128_S */
    local_op, 
    /* LOCAL_TEE_EXTERNREF */
    EXTERNREF, local_op, EXTERNREF, 
    /* LOCAL_TEE_EXTERNREF_S */
    local_op, 
    /* LOCAL_TEE_F32 */
    F32, local_op, F32, 
    /* LOCAL_TEE_F32_S */
    local_op, 
    /* LOCAL_TEE_F64 */
    F64, local_op, F64, 
    /* LOCAL_TEE_F64_S */
    local_op, 
    /* LOCAL_TEE_FUNCREF */
    FUNCREF, local_op, FUNCREF, 
    /* LOCAL_TEE_FUNCREF_S */
    local_op, 
    /* LOCAL_TEE_I32 */
    I32, local_op, I32, 
    /* LOCAL_TEE_I32_S */
    local_op, 
    /* LOCAL_TEE_I64 */
    I64, local_op, I64, 
    /* LOCAL_TEE_I64_S */
    local_op, 
    /* LOCAL_TEE_V128 */
    V128, local_op, V128, 
    /* LOCAL_TEE_V128_S */
    local_op, 
    /* LOOP */
    Signature, 
    /* LOOP_S */
    Signature, 
    /* LT_F32 */
    I32, F32, F32, 
    /* LT_F32_S */
    /* LT_F32x4 */
    V128, V128, V128, 
    /* LT_F32x4_S */
    /* LT_F64 */
    I32, F64, F64, 
    /* LT_F64_S */
    /* LT_F64x2 */
    V128, V128, V128, 
    /* LT_F64x2_S */
    /* LT_S_I16x8 */
    V128, V128, V128, 
    /* LT_S_I16x8_S */
    /* LT_S_I32 */
    I32, I32, I32, 
    /* LT_S_I32_S */
    /* LT_S_I32x4 */
    V128, V128, V128, 
    /* LT_S_I32x4_S */
    /* LT_S_I64 */
    I32, I64, I64, 
    /* LT_S_I64_S */
    /* LT_S_I64x2 */
    V128, V128, V128, 
    /* LT_S_I64x2_S */
    /* LT_S_I8x16 */
    V128, V128, V128, 
    /* LT_S_I8x16_S */
    /* LT_U_I16x8 */
    V128, V128, V128, 
    /* LT_U_I16x8_S */
    /* LT_U_I32 */
    I32, I32, I32, 
    /* LT_U_I32_S */
    /* LT_U_I32x4 */
    V128, V128, V128, 
    /* LT_U_I32x4_S */
    /* LT_U_I64 */
    I32, I64, I64, 
    /* LT_U_I64_S */
    /* LT_U_I8x16 */
    V128, V128, V128, 
    /* LT_U_I8x16_S */
    /* MADD_F32x4 */
    V128, V128, V128, V128, 
    /* MADD_F32x4_S */
    /* MADD_F64x2 */
    V128, V128, V128, V128, 
    /* MADD_F64x2_S */
    /* MAX_F32 */
    F32, F32, F32, 
    /* MAX_F32_S */
    /* MAX_F32x4 */
    V128, V128, V128, 
    /* MAX_F32x4_S */
    /* MAX_F64 */
    F64, F64, F64, 
    /* MAX_F64_S */
    /* MAX_F64x2 */
    V128, V128, V128, 
    /* MAX_F64x2_S */
    /* MAX_S_I16x8 */
    V128, V128, V128, 
    /* MAX_S_I16x8_S */
    /* MAX_S_I32x4 */
    V128, V128, V128, 
    /* MAX_S_I32x4_S */
    /* MAX_S_I8x16 */
    V128, V128, V128, 
    /* MAX_S_I8x16_S */
    /* MAX_U_I16x8 */
    V128, V128, V128, 
    /* MAX_U_I16x8_S */
    /* MAX_U_I32x4 */
    V128, V128, V128, 
    /* MAX_U_I32x4_S */
    /* MAX_U_I8x16 */
    V128, V128, V128, 
    /* MAX_U_I8x16_S */
    /* MEMORY_ATOMIC_NOTIFY_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* MEMORY_ATOMIC_NOTIFY_A32_S */
    P2Align, offset32_op, 
    /* MEMORY_ATOMIC_NOTIFY_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* MEMORY_ATOMIC_NOTIFY_A64_S */
    P2Align, offset64_op, 
    /* MEMORY_ATOMIC_WAIT32_A32 */
    I32, P2Align, offset32_op, I32, I32, I64, 
    /* MEMORY_ATOMIC_WAIT32_A32_S */
    P2Align, offset32_op, 
    /* MEMORY_ATOMIC_WAIT32_A64 */
    I32, P2Align, offset64_op, I64, I32, I64, 
    /* MEMORY_ATOMIC_WAIT32_A64_S */
    P2Align, offset64_op, 
    /* MEMORY_ATOMIC_WAIT64_A32 */
    I32, P2Align, offset32_op, I32, I64, I64, 
    /* MEMORY_ATOMIC_WAIT64_A32_S */
    P2Align, offset32_op, 
    /* MEMORY_ATOMIC_WAIT64_A64 */
    I32, P2Align, offset64_op, I64, I64, I64, 
    /* MEMORY_ATOMIC_WAIT64_A64_S */
    P2Align, offset64_op, 
    /* MIN_F32 */
    F32, F32, F32, 
    /* MIN_F32_S */
    /* MIN_F32x4 */
    V128, V128, V128, 
    /* MIN_F32x4_S */
    /* MIN_F64 */
    F64, F64, F64, 
    /* MIN_F64_S */
    /* MIN_F64x2 */
    V128, V128, V128, 
    /* MIN_F64x2_S */
    /* MIN_S_I16x8 */
    V128, V128, V128, 
    /* MIN_S_I16x8_S */
    /* MIN_S_I32x4 */
    V128, V128, V128, 
    /* MIN_S_I32x4_S */
    /* MIN_S_I8x16 */
    V128, V128, V128, 
    /* MIN_S_I8x16_S */
    /* MIN_U_I16x8 */
    V128, V128, V128, 
    /* MIN_U_I16x8_S */
    /* MIN_U_I32x4 */
    V128, V128, V128, 
    /* MIN_U_I32x4_S */
    /* MIN_U_I8x16 */
    V128, V128, V128, 
    /* MIN_U_I8x16_S */
    /* MUL_F32 */
    F32, F32, F32, 
    /* MUL_F32_S */
    /* MUL_F32x4 */
    V128, V128, V128, 
    /* MUL_F32x4_S */
    /* MUL_F64 */
    F64, F64, F64, 
    /* MUL_F64_S */
    /* MUL_F64x2 */
    V128, V128, V128, 
    /* MUL_F64x2_S */
    /* MUL_I16x8 */
    V128, V128, V128, 
    /* MUL_I16x8_S */
    /* MUL_I32 */
    I32, I32, I32, 
    /* MUL_I32_S */
    /* MUL_I32x4 */
    V128, V128, V128, 
    /* MUL_I32x4_S */
    /* MUL_I64 */
    I64, I64, I64, 
    /* MUL_I64_S */
    /* MUL_I64x2 */
    V128, V128, V128, 
    /* MUL_I64x2_S */
    /* NARROW_S_I16x8 */
    V128, V128, V128, 
    /* NARROW_S_I16x8_S */
    /* NARROW_S_I8x16 */
    V128, V128, V128, 
    /* NARROW_S_I8x16_S */
    /* NARROW_U_I16x8 */
    V128, V128, V128, 
    /* NARROW_U_I16x8_S */
    /* NARROW_U_I8x16 */
    V128, V128, V128, 
    /* NARROW_U_I8x16_S */
    /* NEAREST_F32 */
    F32, F32, 
    /* NEAREST_F32_S */
    /* NEAREST_F32x4 */
    V128, V128, 
    /* NEAREST_F32x4_S */
    /* NEAREST_F64 */
    F64, F64, 
    /* NEAREST_F64_S */
    /* NEAREST_F64x2 */
    V128, V128, 
    /* NEAREST_F64x2_S */
    /* NEG_F32 */
    F32, F32, 
    /* NEG_F32_S */
    /* NEG_F32x4 */
    V128, V128, 
    /* NEG_F32x4_S */
    /* NEG_F64 */
    F64, F64, 
    /* NEG_F64_S */
    /* NEG_F64x2 */
    V128, V128, 
    /* NEG_F64x2_S */
    /* NEG_I16x8 */
    V128, V128, 
    /* NEG_I16x8_S */
    /* NEG_I32x4 */
    V128, V128, 
    /* NEG_I32x4_S */
    /* NEG_I64x2 */
    V128, V128, 
    /* NEG_I64x2_S */
    /* NEG_I8x16 */
    V128, V128, 
    /* NEG_I8x16_S */
    /* NE_F32 */
    I32, F32, F32, 
    /* NE_F32_S */
    /* NE_F32x4 */
    V128, V128, V128, 
    /* NE_F32x4_S */
    /* NE_F64 */
    I32, F64, F64, 
    /* NE_F64_S */
    /* NE_F64x2 */
    V128, V128, V128, 
    /* NE_F64x2_S */
    /* NE_I16x8 */
    V128, V128, V128, 
    /* NE_I16x8_S */
    /* NE_I32 */
    I32, I32, I32, 
    /* NE_I32_S */
    /* NE_I32x4 */
    V128, V128, V128, 
    /* NE_I32x4_S */
    /* NE_I64 */
    I32, I64, I64, 
    /* NE_I64_S */
    /* NE_I64x2 */
    V128, V128, V128, 
    /* NE_I64x2_S */
    /* NE_I8x16 */
    V128, V128, V128, 
    /* NE_I8x16_S */
    /* NMADD_F32x4 */
    V128, V128, V128, V128, 
    /* NMADD_F32x4_S */
    /* NMADD_F64x2 */
    V128, V128, V128, V128, 
    /* NMADD_F64x2_S */
    /* NOP */
    /* NOP_S */
    /* NOT */
    V128, V128, 
    /* NOT_S */
    /* OR */
    V128, V128, V128, 
    /* OR_I32 */
    I32, I32, I32, 
    /* OR_I32_S */
    /* OR_I64 */
    I64, I64, I64, 
    /* OR_I64_S */
    /* OR_S */
    /* PMAX_F32x4 */
    V128, V128, V128, 
    /* PMAX_F32x4_S */
    /* PMAX_F64x2 */
    V128, V128, V128, 
    /* PMAX_F64x2_S */
    /* PMIN_F32x4 */
    V128, V128, V128, 
    /* PMIN_F32x4_S */
    /* PMIN_F64x2 */
    V128, V128, V128, 
    /* PMIN_F64x2_S */
    /* POPCNT_I32 */
    I32, I32, 
    /* POPCNT_I32_S */
    /* POPCNT_I64 */
    I64, I64, 
    /* POPCNT_I64_S */
    /* POPCNT_I8x16 */
    V128, V128, 
    /* POPCNT_I8x16_S */
    /* Q15MULR_SAT_S_I16x8 */
    V128, V128, V128, 
    /* Q15MULR_SAT_S_I16x8_S */
    /* REF_IS_NULL_EXTERNREF */
    I32, EXTERNREF, 
    /* REF_IS_NULL_EXTERNREF_S */
    /* REF_IS_NULL_FUNCREF */
    I32, FUNCREF, 
    /* REF_IS_NULL_FUNCREF_S */
    /* REF_NULL_EXTERNREF */
    EXTERNREF, 
    /* REF_NULL_EXTERNREF_S */
    /* REF_NULL_FUNCREF */
    FUNCREF, 
    /* REF_NULL_FUNCREF_S */
    /* RELAXED_DOT */
    V128, V128, V128, 
    /* RELAXED_DOT_ADD */
    V128, V128, V128, V128, 
    /* RELAXED_DOT_ADD_S */
    /* RELAXED_DOT_BFLOAT */
    V128, V128, V128, V128, 
    /* RELAXED_DOT_BFLOAT_S */
    /* RELAXED_DOT_S */
    /* RELAXED_Q15MULR_S_I16x8 */
    V128, V128, V128, 
    /* RELAXED_Q15MULR_S_I16x8_S */
    /* RELAXED_SWIZZLE */
    V128, V128, V128, 
    /* RELAXED_SWIZZLE_S */
    /* REM_S_I32 */
    I32, I32, I32, 
    /* REM_S_I32_S */
    /* REM_S_I64 */
    I64, I64, I64, 
    /* REM_S_I64_S */
    /* REM_U_I32 */
    I32, I32, I32, 
    /* REM_U_I32_S */
    /* REM_U_I64 */
    I64, I64, I64, 
    /* REM_U_I64_S */
    /* REPLACE_LANE_F32x4 */
    V128, V128, vec_i8imm_op, F32, 
    /* REPLACE_LANE_F32x4_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_F64x2 */
    V128, V128, vec_i8imm_op, F64, 
    /* REPLACE_LANE_F64x2_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I16x8 */
    V128, V128, vec_i8imm_op, I32, 
    /* REPLACE_LANE_I16x8_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I32x4 */
    V128, V128, vec_i8imm_op, I32, 
    /* REPLACE_LANE_I32x4_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I64x2 */
    V128, V128, vec_i8imm_op, I64, 
    /* REPLACE_LANE_I64x2_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I8x16 */
    V128, V128, vec_i8imm_op, I32, 
    /* REPLACE_LANE_I8x16_S */
    vec_i8imm_op, 
    /* RETHROW */
    i32imm, 
    /* RETHROW_S */
    i32imm, 
    /* RETURN */
    /* RETURN_S */
    /* RET_CALL */
    function32_op, 
    /* RET_CALL_INDIRECT */
    TypeIndex, table32_op, 
    /* RET_CALL_INDIRECT_S */
    TypeIndex, table32_op, 
    /* RET_CALL_S */
    function32_op, 
    /* ROTL_I32 */
    I32, I32, I32, 
    /* ROTL_I32_S */
    /* ROTL_I64 */
    I64, I64, I64, 
    /* ROTL_I64_S */
    /* ROTR_I32 */
    I32, I32, I32, 
    /* ROTR_I32_S */
    /* ROTR_I64 */
    I64, I64, I64, 
    /* ROTR_I64_S */
    /* SELECT_EXTERNREF */
    EXTERNREF, EXTERNREF, EXTERNREF, I32, 
    /* SELECT_EXTERNREF_S */
    /* SELECT_F32 */
    F32, F32, F32, I32, 
    /* SELECT_F32_S */
    /* SELECT_F64 */
    F64, F64, F64, I32, 
    /* SELECT_F64_S */
    /* SELECT_FUNCREF */
    FUNCREF, FUNCREF, FUNCREF, I32, 
    /* SELECT_FUNCREF_S */
    /* SELECT_I32 */
    I32, I32, I32, I32, 
    /* SELECT_I32_S */
    /* SELECT_I64 */
    I64, I64, I64, I32, 
    /* SELECT_I64_S */
    /* SELECT_V128 */
    V128, V128, V128, I32, 
    /* SELECT_V128_S */
    /* SHL_I16x8 */
    V128, V128, I32, 
    /* SHL_I16x8_S */
    /* SHL_I32 */
    I32, I32, I32, 
    /* SHL_I32_S */
    /* SHL_I32x4 */
    V128, V128, I32, 
    /* SHL_I32x4_S */
    /* SHL_I64 */
    I64, I64, I64, 
    /* SHL_I64_S */
    /* SHL_I64x2 */
    V128, V128, I32, 
    /* SHL_I64x2_S */
    /* SHL_I8x16 */
    V128, V128, I32, 
    /* SHL_I8x16_S */
    /* SHR_S_I16x8 */
    V128, V128, I32, 
    /* SHR_S_I16x8_S */
    /* SHR_S_I32 */
    I32, I32, I32, 
    /* SHR_S_I32_S */
    /* SHR_S_I32x4 */
    V128, V128, I32, 
    /* SHR_S_I32x4_S */
    /* SHR_S_I64 */
    I64, I64, I64, 
    /* SHR_S_I64_S */
    /* SHR_S_I64x2 */
    V128, V128, I32, 
    /* SHR_S_I64x2_S */
    /* SHR_S_I8x16 */
    V128, V128, I32, 
    /* SHR_S_I8x16_S */
    /* SHR_U_I16x8 */
    V128, V128, I32, 
    /* SHR_U_I16x8_S */
    /* SHR_U_I32 */
    I32, I32, I32, 
    /* SHR_U_I32_S */
    /* SHR_U_I32x4 */
    V128, V128, I32, 
    /* SHR_U_I32x4_S */
    /* SHR_U_I64 */
    I64, I64, I64, 
    /* SHR_U_I64_S */
    /* SHR_U_I64x2 */
    V128, V128, I32, 
    /* SHR_U_I64x2_S */
    /* SHR_U_I8x16 */
    V128, V128, I32, 
    /* SHR_U_I8x16_S */
    /* SHUFFLE */
    V128, V128, V128, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* SHUFFLE_S */
    vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* SIMD_RELAXED_FMAX_F32x4 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMAX_F32x4_S */
    /* SIMD_RELAXED_FMAX_F64x2 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMAX_F64x2_S */
    /* SIMD_RELAXED_FMIN_F32x4 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMIN_F32x4_S */
    /* SIMD_RELAXED_FMIN_F64x2 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMIN_F64x2_S */
    /* SPLAT_F32x4 */
    V128, F32, 
    /* SPLAT_F32x4_S */
    /* SPLAT_F64x2 */
    V128, F64, 
    /* SPLAT_F64x2_S */
    /* SPLAT_I16x8 */
    V128, I32, 
    /* SPLAT_I16x8_S */
    /* SPLAT_I32x4 */
    V128, I32, 
    /* SPLAT_I32x4_S */
    /* SPLAT_I64x2 */
    V128, I64, 
    /* SPLAT_I64x2_S */
    /* SPLAT_I8x16 */
    V128, I32, 
    /* SPLAT_I8x16_S */
    /* SQRT_F32 */
    F32, F32, 
    /* SQRT_F32_S */
    /* SQRT_F32x4 */
    V128, V128, 
    /* SQRT_F32x4_S */
    /* SQRT_F64 */
    F64, F64, 
    /* SQRT_F64_S */
    /* SQRT_F64x2 */
    V128, V128, 
    /* SQRT_F64x2_S */
    /* STORE16_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* STORE16_I32_A32_S */
    P2Align, offset32_op, 
    /* STORE16_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* STORE16_I32_A64_S */
    P2Align, offset64_op, 
    /* STORE16_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE16_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE16_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE16_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE32_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE32_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE32_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE32_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE8_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* STORE8_I32_A32_S */
    P2Align, offset32_op, 
    /* STORE8_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* STORE8_I32_A64_S */
    P2Align, offset64_op, 
    /* STORE8_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE8_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE8_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE8_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE_F32_A32 */
    P2Align, offset32_op, I32, F32, 
    /* STORE_F32_A32_S */
    P2Align, offset32_op, 
    /* STORE_F32_A64 */
    P2Align, offset64_op, I64, F32, 
    /* STORE_F32_A64_S */
    P2Align, offset64_op, 
    /* STORE_F64_A32 */
    P2Align, offset32_op, I32, F64, 
    /* STORE_F64_A32_S */
    P2Align, offset32_op, 
    /* STORE_F64_A64 */
    P2Align, offset64_op, I64, F64, 
    /* STORE_F64_A64_S */
    P2Align, offset64_op, 
    /* STORE_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* STORE_I32_A32_S */
    P2Align, offset32_op, 
    /* STORE_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* STORE_I32_A64_S */
    P2Align, offset64_op, 
    /* STORE_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE_LANE_I16x8_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I16x8_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I16x8_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I16x8_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_LANE_I32x4_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I32x4_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I32x4_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I32x4_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_LANE_I64x2_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I64x2_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I64x2_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I64x2_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_LANE_I8x16_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I8x16_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I8x16_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I8x16_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_V128_A32 */
    P2Align, offset32_op, I32, V128, 
    /* STORE_V128_A32_S */
    P2Align, offset32_op, 
    /* STORE_V128_A64 */
    P2Align, offset64_op, I64, V128, 
    /* STORE_V128_A64_S */
    P2Align, offset64_op, 
    /* SUB_F32 */
    F32, F32, F32, 
    /* SUB_F32_S */
    /* SUB_F32x4 */
    V128, V128, V128, 
    /* SUB_F32x4_S */
    /* SUB_F64 */
    F64, F64, F64, 
    /* SUB_F64_S */
    /* SUB_F64x2 */
    V128, V128, V128, 
    /* SUB_F64x2_S */
    /* SUB_I16x8 */
    V128, V128, V128, 
    /* SUB_I16x8_S */
    /* SUB_I32 */
    I32, I32, I32, 
    /* SUB_I32_S */
    /* SUB_I32x4 */
    V128, V128, V128, 
    /* SUB_I32x4_S */
    /* SUB_I64 */
    I64, I64, I64, 
    /* SUB_I64_S */
    /* SUB_I64x2 */
    V128, V128, V128, 
    /* SUB_I64x2_S */
    /* SUB_I8x16 */
    V128, V128, V128, 
    /* SUB_I8x16_S */
    /* SUB_SAT_S_I16x8 */
    V128, V128, V128, 
    /* SUB_SAT_S_I16x8_S */
    /* SUB_SAT_S_I8x16 */
    V128, V128, V128, 
    /* SUB_SAT_S_I8x16_S */
    /* SUB_SAT_U_I16x8 */
    V128, V128, V128, 
    /* SUB_SAT_U_I16x8_S */
    /* SUB_SAT_U_I8x16 */
    V128, V128, V128, 
    /* SUB_SAT_U_I8x16_S */
    /* SWIZZLE */
    V128, V128, V128, 
    /* SWIZZLE_S */
    /* TABLE_COPY */
    table32_op, table32_op, I32, I32, I32, 
    /* TABLE_COPY_S */
    table32_op, table32_op, 
    /* TABLE_FILL_EXTERNREF */
    table32_op, I32, EXTERNREF, I32, 
    /* TABLE_FILL_EXTERNREF_S */
    table32_op, 
    /* TABLE_FILL_FUNCREF */
    table32_op, I32, FUNCREF, I32, 
    /* TABLE_FILL_FUNCREF_S */
    table32_op, 
    /* TABLE_GET_EXTERNREF */
    EXTERNREF, table32_op, I32, 
    /* TABLE_GET_EXTERNREF_S */
    table32_op, 
    /* TABLE_GET_FUNCREF */
    FUNCREF, table32_op, I32, 
    /* TABLE_GET_FUNCREF_S */
    table32_op, 
    /* TABLE_GROW_EXTERNREF */
    I32, table32_op, EXTERNREF, I32, 
    /* TABLE_GROW_EXTERNREF_S */
    table32_op, 
    /* TABLE_GROW_FUNCREF */
    I32, table32_op, FUNCREF, I32, 
    /* TABLE_GROW_FUNCREF_S */
    table32_op, 
    /* TABLE_SET_EXTERNREF */
    table32_op, I32, EXTERNREF, 
    /* TABLE_SET_EXTERNREF_S */
    table32_op, 
    /* TABLE_SET_FUNCREF */
    table32_op, I32, FUNCREF, 
    /* TABLE_SET_FUNCREF_S */
    table32_op, 
    /* TABLE_SIZE */
    I32, table32_op, 
    /* TABLE_SIZE_S */
    table32_op, 
    /* TEE_EXTERNREF */
    EXTERNREF, EXTERNREF, EXTERNREF, 
    /* TEE_EXTERNREF_S */
    /* TEE_F32 */
    F32, F32, F32, 
    /* TEE_F32_S */
    /* TEE_F64 */
    F64, F64, F64, 
    /* TEE_F64_S */
    /* TEE_FUNCREF */
    FUNCREF, FUNCREF, FUNCREF, 
    /* TEE_FUNCREF_S */
    /* TEE_I32 */
    I32, I32, I32, 
    /* TEE_I32_S */
    /* TEE_I64 */
    I64, I64, I64, 
    /* TEE_I64_S */
    /* TEE_V128 */
    V128, V128, V128, 
    /* TEE_V128_S */
    /* THROW */
    tag_op, 
    /* THROW_S */
    tag_op, 
    /* TRUNC_F32 */
    F32, F32, 
    /* TRUNC_F32_S */
    /* TRUNC_F32x4 */
    V128, V128, 
    /* TRUNC_F32x4_S */
    /* TRUNC_F64 */
    F64, F64, 
    /* TRUNC_F64_S */
    /* TRUNC_F64x2 */
    V128, V128, 
    /* TRUNC_F64x2_S */
    /* TRY */
    Signature, 
    /* TRY_S */
    Signature, 
    /* UNREACHABLE */
    /* UNREACHABLE_S */
    /* XOR */
    V128, V128, V128, 
    /* XOR_I32 */
    I32, I32, I32, 
    /* XOR_I32_S */
    /* XOR_I64 */
    I64, I64, I64, 
    /* XOR_I64_S */
    /* XOR_S */
    /* anonymous_4396MEMORY_GROW_A32 */
    I32, i32imm, I32, 
    /* anonymous_4396MEMORY_GROW_A32_S */
    i32imm, 
    /* anonymous_4396MEMORY_SIZE_A32 */
    I32, i32imm, 
    /* anonymous_4396MEMORY_SIZE_A32_S */
    i32imm, 
    /* anonymous_4397MEMORY_GROW_A64 */
    I64, i32imm, I64, 
    /* anonymous_4397MEMORY_GROW_A64_S */
    i32imm, 
    /* anonymous_4397MEMORY_SIZE_A64 */
    I64, i32imm, 
    /* anonymous_4397MEMORY_SIZE_A64_S */
    i32imm, 
    /* anonymous_6249DATA_DROP */
    i32imm_op, 
    /* anonymous_6249DATA_DROP_S */
    i32imm_op, 
    /* anonymous_6249MEMORY_COPY_A32 */
    i32imm_op, i32imm_op, I32, I32, I32, 
    /* anonymous_6249MEMORY_COPY_A32_S */
    i32imm_op, i32imm_op, 
    /* anonymous_6249MEMORY_FILL_A32 */
    i32imm_op, I32, I32, I32, 
    /* anonymous_6249MEMORY_FILL_A32_S */
    i32imm_op, 
    /* anonymous_6249MEMORY_INIT_A32 */
    i32imm_op, i32imm_op, I32, I32, I32, 
    /* anonymous_6249MEMORY_INIT_A32_S */
    i32imm_op, i32imm_op, 
    /* anonymous_6250DATA_DROP */
    i32imm_op, 
    /* anonymous_6250DATA_DROP_S */
    i32imm_op, 
    /* anonymous_6250MEMORY_COPY_A64 */
    i32imm_op, i32imm_op, I64, I64, I64, 
    /* anonymous_6250MEMORY_COPY_A64_S */
    i32imm_op, i32imm_op, 
    /* anonymous_6250MEMORY_FILL_A64 */
    i32imm_op, I64, I32, I64, 
    /* anonymous_6250MEMORY_FILL_A64_S */
    i32imm_op, 
    /* anonymous_6250MEMORY_INIT_A64 */
    i32imm_op, i32imm_op, I64, I32, I32, 
    /* anonymous_6250MEMORY_INIT_A64_S */
    i32imm_op, i32imm_op, 
    /* convert_low_s_F64x2 */
    V128, V128, 
    /* convert_low_s_F64x2_S */
    /* convert_low_u_F64x2 */
    V128, V128, 
    /* convert_low_u_F64x2_S */
    /* demote_zero_F32x4 */
    V128, V128, 
    /* demote_zero_F32x4_S */
    /* extend_high_s_I16x8 */
    V128, V128, 
    /* extend_high_s_I16x8_S */
    /* extend_high_s_I32x4 */
    V128, V128, 
    /* extend_high_s_I32x4_S */
    /* extend_high_s_I64x2 */
    V128, V128, 
    /* extend_high_s_I64x2_S */
    /* extend_high_u_I16x8 */
    V128, V128, 
    /* extend_high_u_I16x8_S */
    /* extend_high_u_I32x4 */
    V128, V128, 
    /* extend_high_u_I32x4_S */
    /* extend_high_u_I64x2 */
    V128, V128, 
    /* extend_high_u_I64x2_S */
    /* extend_low_s_I16x8 */
    V128, V128, 
    /* extend_low_s_I16x8_S */
    /* extend_low_s_I32x4 */
    V128, V128, 
    /* extend_low_s_I32x4_S */
    /* extend_low_s_I64x2 */
    V128, V128, 
    /* extend_low_s_I64x2_S */
    /* extend_low_u_I16x8 */
    V128, V128, 
    /* extend_low_u_I16x8_S */
    /* extend_low_u_I32x4 */
    V128, V128, 
    /* extend_low_u_I32x4_S */
    /* extend_low_u_I64x2 */
    V128, V128, 
    /* extend_low_u_I64x2_S */
    /* fp_to_sint_I32x4 */
    V128, V128, 
    /* fp_to_sint_I32x4_S */
    /* fp_to_uint_I32x4 */
    V128, V128, 
    /* fp_to_uint_I32x4_S */
    /* int_wasm_extadd_pairwise_signed_I16x8 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_signed_I16x8_S */
    /* int_wasm_extadd_pairwise_signed_I32x4 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_signed_I32x4_S */
    /* int_wasm_extadd_pairwise_unsigned_I16x8 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_unsigned_I16x8_S */
    /* int_wasm_extadd_pairwise_unsigned_I32x4 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_unsigned_I32x4_S */
    /* int_wasm_relaxed_trunc_signed_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_signed_I32x4_S */
    /* int_wasm_relaxed_trunc_signed_zero_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_signed_zero_I32x4_S */
    /* int_wasm_relaxed_trunc_unsigned_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_unsigned_I32x4_S */
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4_S */
    /* promote_low_F64x2 */
    V128, V128, 
    /* promote_low_F64x2_S */
    /* sint_to_fp_F32x4 */
    V128, V128, 
    /* sint_to_fp_F32x4_S */
    /* trunc_sat_zero_s_I32x4 */
    V128, V128, 
    /* trunc_sat_zero_s_I32x4_S */
    /* trunc_sat_zero_u_I32x4 */
    V128, V128, 
    /* trunc_sat_zero_u_I32x4_S */
    /* uint_to_fp_F32x4 */
    V128, V128, 
  };
  return OpcodeOperandTypes[Offsets[Opcode] + OpIdx];
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPE

#ifdef GET_INSTRINFO_MEM_OPERAND_SIZE
#undef GET_INSTRINFO_MEM_OPERAND_SIZE
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
static int getMemOperandSize(int OpType) {
  switch (OpType) {
  default: return 0;
  }
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_MEM_OPERAND_SIZE

#ifdef GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP
#undef GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP
namespace llvm {
namespace WebAssembly {
LLVM_READONLY static unsigned
getLogicalOperandSize(uint16_t Opcode, uint16_t LogicalOpIdx) {
  return LogicalOpIdx;
}
LLVM_READONLY static inline unsigned
getLogicalOperandIdx(uint16_t Opcode, uint16_t LogicalOpIdx) {
  auto S = 0U;
  for (auto i = 0U; i < LogicalOpIdx; ++i)
    S += getLogicalOperandSize(Opcode, i);
  return S;
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP

#ifdef GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP
#undef GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP
namespace llvm {
namespace WebAssembly {
LLVM_READONLY static int
getLogicalOperandType(uint16_t Opcode, uint16_t LogicalOpIdx) {
  return -1;
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP

#ifdef GET_INSTRINFO_MC_HELPER_DECLS
#undef GET_INSTRINFO_MC_HELPER_DECLS

namespace llvm {
class MCInst;
class FeatureBitset;

namespace WebAssembly_MC {

void verifyInstructionPredicates(unsigned Opcode, const FeatureBitset &Features);

} // end namespace WebAssembly_MC
} // end namespace llvm

#endif // GET_INSTRINFO_MC_HELPER_DECLS

#ifdef GET_INSTRINFO_MC_HELPERS
#undef GET_INSTRINFO_MC_HELPERS

namespace llvm {
namespace WebAssembly_MC {

} // end namespace WebAssembly_MC
} // end namespace llvm

#endif // GET_GENISTRINFO_MC_HELPERS

#ifdef ENABLE_INSTR_PREDICATE_VERIFIER
#undef ENABLE_INSTR_PREDICATE_VERIFIER
#include <sstream>

namespace llvm {
namespace WebAssembly_MC {

// Bits for subtarget features that participate in instruction matching.
enum SubtargetFeatureBits : uint8_t {
  Feature_HasSIMD128Bit = 8,
  Feature_HasRelaxedSIMDBit = 7,
  Feature_HasAtomicsBit = 0,
  Feature_HasMultivalueBit = 4,
  Feature_HasNontrappingFPToIntBit = 5,
  Feature_NotHasNontrappingFPToIntBit = 11,
  Feature_HasSignExtBit = 9,
  Feature_HasTailCallBit = 10,
  Feature_HasExceptionHandlingBit = 2,
  Feature_HasBulkMemoryBit = 1,
  Feature_HasReferenceTypesBit = 6,
  Feature_HasExtendedConstBit = 3,
};

#ifndef NDEBUG
static const char *SubtargetFeatureNames[] = {
  "Feature_HasAtomics",
  "Feature_HasBulkMemory",
  "Feature_HasExceptionHandling",
  "Feature_HasExtendedConst",
  "Feature_HasMultivalue",
  "Feature_HasNontrappingFPToInt",
  "Feature_HasReferenceTypes",
  "Feature_HasRelaxedSIMD",
  "Feature_HasSIMD128",
  "Feature_HasSignExt",
  "Feature_HasTailCall",
  "Feature_NotHasNontrappingFPToInt",
  nullptr
};

#endif // NDEBUG

FeatureBitset computeAvailableFeatures(const FeatureBitset &FB) {
  FeatureBitset Features;
  if (FB[WebAssembly::FeatureSIMD128])
    Features.set(Feature_HasSIMD128Bit);
  if (FB[WebAssembly::FeatureRelaxedSIMD])
    Features.set(Feature_HasRelaxedSIMDBit);
  if (FB[WebAssembly::FeatureAtomics])
    Features.set(Feature_HasAtomicsBit);
  if (FB[WebAssembly::FeatureMultivalue])
    Features.set(Feature_HasMultivalueBit);
  if (FB[WebAssembly::FeatureNontrappingFPToInt])
    Features.set(Feature_HasNontrappingFPToIntBit);
  if (!FB[WebAssembly::FeatureNontrappingFPToInt])
    Features.set(Feature_NotHasNontrappingFPToIntBit);
  if (FB[WebAssembly::FeatureSignExt])
    Features.set(Feature_HasSignExtBit);
  if (FB[WebAssembly::FeatureTailCall])
    Features.set(Feature_HasTailCallBit);
  if (FB[WebAssembly::FeatureExceptionHandling])
    Features.set(Feature_HasExceptionHandlingBit);
  if (FB[WebAssembly::FeatureBulkMemory])
    Features.set(Feature_HasBulkMemoryBit);
  if (FB[WebAssembly::FeatureReferenceTypes])
    Features.set(Feature_HasReferenceTypesBit);
  if (FB[WebAssembly::FeatureExtendedConst])
    Features.set(Feature_HasExtendedConstBit);
  return Features;
}

#ifndef NDEBUG
// Feature bitsets.
enum : uint8_t {
  CEFBS_None,
  CEFBS_HasAtomics,
  CEFBS_HasBulkMemory,
  CEFBS_HasExceptionHandling,
  CEFBS_HasNontrappingFPToInt,
  CEFBS_HasReferenceTypes,
  CEFBS_HasRelaxedSIMD,
  CEFBS_HasSIMD128,
  CEFBS_HasSignExt,
  CEFBS_HasTailCall,
  CEFBS_NotHasNontrappingFPToInt,
};

static constexpr FeatureBitset FeatureBitsets[] = {
  {}, // CEFBS_None
  {Feature_HasAtomicsBit, },
  {Feature_HasBulkMemoryBit, },
  {Feature_HasExceptionHandlingBit, },
  {Feature_HasNontrappingFPToIntBit, },
  {Feature_HasReferenceTypesBit, },
  {Feature_HasRelaxedSIMDBit, },
  {Feature_HasSIMD128Bit, },
  {Feature_HasSignExtBit, },
  {Feature_HasTailCallBit, },
  {Feature_NotHasNontrappingFPToIntBit, },
};
#endif // NDEBUG

void verifyInstructionPredicates(
    unsigned Opcode, const FeatureBitset &Features) {
#ifndef NDEBUG
  static uint8_t RequiredFeaturesRefs[] = {
    CEFBS_None, // PHI = 0
    CEFBS_None, // INLINEASM = 1
    CEFBS_None, // INLINEASM_BR = 2
    CEFBS_None, // CFI_INSTRUCTION = 3
    CEFBS_None, // EH_LABEL = 4
    CEFBS_None, // GC_LABEL = 5
    CEFBS_None, // ANNOTATION_LABEL = 6
    CEFBS_None, // KILL = 7
    CEFBS_None, // EXTRACT_SUBREG = 8
    CEFBS_None, // INSERT_SUBREG = 9
    CEFBS_None, // IMPLICIT_DEF = 10
    CEFBS_None, // SUBREG_TO_REG = 11
    CEFBS_None, // COPY_TO_REGCLASS = 12
    CEFBS_None, // DBG_VALUE = 13
    CEFBS_None, // DBG_VALUE_LIST = 14
    CEFBS_None, // DBG_INSTR_REF = 15
    CEFBS_None, // DBG_PHI = 16
    CEFBS_None, // DBG_LABEL = 17
    CEFBS_None, // REG_SEQUENCE = 18
    CEFBS_None, // COPY = 19
    CEFBS_None, // BUNDLE = 20
    CEFBS_None, // LIFETIME_START = 21
    CEFBS_None, // LIFETIME_END = 22
    CEFBS_None, // PSEUDO_PROBE = 23
    CEFBS_None, // ARITH_FENCE = 24
    CEFBS_None, // STACKMAP = 25
    CEFBS_None, // FENTRY_CALL = 26
    CEFBS_None, // PATCHPOINT = 27
    CEFBS_None, // LOAD_STACK_GUARD = 28
    CEFBS_None, // PREALLOCATED_SETUP = 29
    CEFBS_None, // PREALLOCATED_ARG = 30
    CEFBS_None, // STATEPOINT = 31
    CEFBS_None, // LOCAL_ESCAPE = 32
    CEFBS_None, // FAULTING_OP = 33
    CEFBS_None, // PATCHABLE_OP = 34
    CEFBS_None, // PATCHABLE_FUNCTION_ENTER = 35
    CEFBS_None, // PATCHABLE_RET = 36
    CEFBS_None, // PATCHABLE_FUNCTION_EXIT = 37
    CEFBS_None, // PATCHABLE_TAIL_CALL = 38
    CEFBS_None, // PATCHABLE_EVENT_CALL = 39
    CEFBS_None, // PATCHABLE_TYPED_EVENT_CALL = 40
    CEFBS_None, // ICALL_BRANCH_FUNNEL = 41
    CEFBS_None, // G_ASSERT_SEXT = 42
    CEFBS_None, // G_ASSERT_ZEXT = 43
    CEFBS_None, // G_ASSERT_ALIGN = 44
    CEFBS_None, // G_ADD = 45
    CEFBS_None, // G_SUB = 46
    CEFBS_None, // G_MUL = 47
    CEFBS_None, // G_SDIV = 48
    CEFBS_None, // G_UDIV = 49
    CEFBS_None, // G_SREM = 50
    CEFBS_None, // G_UREM = 51
    CEFBS_None, // G_SDIVREM = 52
    CEFBS_None, // G_UDIVREM = 53
    CEFBS_None, // G_AND = 54
    CEFBS_None, // G_OR = 55
    CEFBS_None, // G_XOR = 56
    CEFBS_None, // G_IMPLICIT_DEF = 57
    CEFBS_None, // G_PHI = 58
    CEFBS_None, // G_FRAME_INDEX = 59
    CEFBS_None, // G_GLOBAL_VALUE = 60
    CEFBS_None, // G_EXTRACT = 61
    CEFBS_None, // G_UNMERGE_VALUES = 62
    CEFBS_None, // G_INSERT = 63
    CEFBS_None, // G_MERGE_VALUES = 64
    CEFBS_None, // G_BUILD_VECTOR = 65
    CEFBS_None, // G_BUILD_VECTOR_TRUNC = 66
    CEFBS_None, // G_CONCAT_VECTORS = 67
    CEFBS_None, // G_PTRTOINT = 68
    CEFBS_None, // G_INTTOPTR = 69
    CEFBS_None, // G_BITCAST = 70
    CEFBS_None, // G_FREEZE = 71
    CEFBS_None, // G_INTRINSIC_FPTRUNC_ROUND = 72
    CEFBS_None, // G_INTRINSIC_TRUNC = 73
    CEFBS_None, // G_INTRINSIC_ROUND = 74
    CEFBS_None, // G_INTRINSIC_LRINT = 75
    CEFBS_None, // G_INTRINSIC_ROUNDEVEN = 76
    CEFBS_None, // G_READCYCLECOUNTER = 77
    CEFBS_None, // G_LOAD = 78
    CEFBS_None, // G_SEXTLOAD = 79
    CEFBS_None, // G_ZEXTLOAD = 80
    CEFBS_None, // G_INDEXED_LOAD = 81
    CEFBS_None, // G_INDEXED_SEXTLOAD = 82
    CEFBS_None, // G_INDEXED_ZEXTLOAD = 83
    CEFBS_None, // G_STORE = 84
    CEFBS_None, // G_INDEXED_STORE = 85
    CEFBS_None, // G_ATOMIC_CMPXCHG_WITH_SUCCESS = 86
    CEFBS_None, // G_ATOMIC_CMPXCHG = 87
    CEFBS_None, // G_ATOMICRMW_XCHG = 88
    CEFBS_None, // G_ATOMICRMW_ADD = 89
    CEFBS_None, // G_ATOMICRMW_SUB = 90
    CEFBS_None, // G_ATOMICRMW_AND = 91
    CEFBS_None, // G_ATOMICRMW_NAND = 92
    CEFBS_None, // G_ATOMICRMW_OR = 93
    CEFBS_None, // G_ATOMICRMW_XOR = 94
    CEFBS_None, // G_ATOMICRMW_MAX = 95
    CEFBS_None, // G_ATOMICRMW_MIN = 96
    CEFBS_None, // G_ATOMICRMW_UMAX = 97
    CEFBS_None, // G_ATOMICRMW_UMIN = 98
    CEFBS_None, // G_ATOMICRMW_FADD = 99
    CEFBS_None, // G_ATOMICRMW_FSUB = 100
    CEFBS_None, // G_ATOMICRMW_FMAX = 101
    CEFBS_None, // G_ATOMICRMW_FMIN = 102
    CEFBS_None, // G_FENCE = 103
    CEFBS_None, // G_BRCOND = 104
    CEFBS_None, // G_BRINDIRECT = 105
    CEFBS_None, // G_INTRINSIC = 106
    CEFBS_None, // G_INTRINSIC_W_SIDE_EFFECTS = 107
    CEFBS_None, // G_ANYEXT = 108
    CEFBS_None, // G_TRUNC = 109
    CEFBS_None, // G_CONSTANT = 110
    CEFBS_None, // G_FCONSTANT = 111
    CEFBS_None, // G_VASTART = 112
    CEFBS_None, // G_VAARG = 113
    CEFBS_None, // G_SEXT = 114
    CEFBS_None, // G_SEXT_INREG = 115
    CEFBS_None, // G_ZEXT = 116
    CEFBS_None, // G_SHL = 117
    CEFBS_None, // G_LSHR = 118
    CEFBS_None, // G_ASHR = 119
    CEFBS_None, // G_FSHL = 120
    CEFBS_None, // G_FSHR = 121
    CEFBS_None, // G_ROTR = 122
    CEFBS_None, // G_ROTL = 123
    CEFBS_None, // G_ICMP = 124
    CEFBS_None, // G_FCMP = 125
    CEFBS_None, // G_SELECT = 126
    CEFBS_None, // G_UADDO = 127
    CEFBS_None, // G_UADDE = 128
    CEFBS_None, // G_USUBO = 129
    CEFBS_None, // G_USUBE = 130
    CEFBS_None, // G_SADDO = 131
    CEFBS_None, // G_SADDE = 132
    CEFBS_None, // G_SSUBO = 133
    CEFBS_None, // G_SSUBE = 134
    CEFBS_None, // G_UMULO = 135
    CEFBS_None, // G_SMULO = 136
    CEFBS_None, // G_UMULH = 137
    CEFBS_None, // G_SMULH = 138
    CEFBS_None, // G_UADDSAT = 139
    CEFBS_None, // G_SADDSAT = 140
    CEFBS_None, // G_USUBSAT = 141
    CEFBS_None, // G_SSUBSAT = 142
    CEFBS_None, // G_USHLSAT = 143
    CEFBS_None, // G_SSHLSAT = 144
    CEFBS_None, // G_SMULFIX = 145
    CEFBS_None, // G_UMULFIX = 146
    CEFBS_None, // G_SMULFIXSAT = 147
    CEFBS_None, // G_UMULFIXSAT = 148
    CEFBS_None, // G_SDIVFIX = 149
    CEFBS_None, // G_UDIVFIX = 150
    CEFBS_None, // G_SDIVFIXSAT = 151
    CEFBS_None, // G_UDIVFIXSAT = 152
    CEFBS_None, // G_FADD = 153
    CEFBS_None, // G_FSUB = 154
    CEFBS_None, // G_FMUL = 155
    CEFBS_None, // G_FMA = 156
    CEFBS_None, // G_FMAD = 157
    CEFBS_None, // G_FDIV = 158
    CEFBS_None, // G_FREM = 159
    CEFBS_None, // G_FPOW = 160
    CEFBS_None, // G_FPOWI = 161
    CEFBS_None, // G_FEXP = 162
    CEFBS_None, // G_FEXP2 = 163
    CEFBS_None, // G_FLOG = 164
    CEFBS_None, // G_FLOG2 = 165
    CEFBS_None, // G_FLOG10 = 166
    CEFBS_None, // G_FNEG = 167
    CEFBS_None, // G_FPEXT = 168
    CEFBS_None, // G_FPTRUNC = 169
    CEFBS_None, // G_FPTOSI = 170
    CEFBS_None, // G_FPTOUI = 171
    CEFBS_None, // G_SITOFP = 172
    CEFBS_None, // G_UITOFP = 173
    CEFBS_None, // G_FABS = 174
    CEFBS_None, // G_FCOPYSIGN = 175
    CEFBS_None, // G_IS_FPCLASS = 176
    CEFBS_None, // G_FCANONICALIZE = 177
    CEFBS_None, // G_FMINNUM = 178
    CEFBS_None, // G_FMAXNUM = 179
    CEFBS_None, // G_FMINNUM_IEEE = 180
    CEFBS_None, // G_FMAXNUM_IEEE = 181
    CEFBS_None, // G_FMINIMUM = 182
    CEFBS_None, // G_FMAXIMUM = 183
    CEFBS_None, // G_PTR_ADD = 184
    CEFBS_None, // G_PTRMASK = 185
    CEFBS_None, // G_SMIN = 186
    CEFBS_None, // G_SMAX = 187
    CEFBS_None, // G_UMIN = 188
    CEFBS_None, // G_UMAX = 189
    CEFBS_None, // G_ABS = 190
    CEFBS_None, // G_LROUND = 191
    CEFBS_None, // G_LLROUND = 192
    CEFBS_None, // G_BR = 193
    CEFBS_None, // G_BRJT = 194
    CEFBS_None, // G_INSERT_VECTOR_ELT = 195
    CEFBS_None, // G_EXTRACT_VECTOR_ELT = 196
    CEFBS_None, // G_SHUFFLE_VECTOR = 197
    CEFBS_None, // G_CTTZ = 198
    CEFBS_None, // G_CTTZ_ZERO_UNDEF = 199
    CEFBS_None, // G_CTLZ = 200
    CEFBS_None, // G_CTLZ_ZERO_UNDEF = 201
    CEFBS_None, // G_CTPOP = 202
    CEFBS_None, // G_BSWAP = 203
    CEFBS_None, // G_BITREVERSE = 204
    CEFBS_None, // G_FCEIL = 205
    CEFBS_None, // G_FCOS = 206
    CEFBS_None, // G_FSIN = 207
    CEFBS_None, // G_FSQRT = 208
    CEFBS_None, // G_FFLOOR = 209
    CEFBS_None, // G_FRINT = 210
    CEFBS_None, // G_FNEARBYINT = 211
    CEFBS_None, // G_ADDRSPACE_CAST = 212
    CEFBS_None, // G_BLOCK_ADDR = 213
    CEFBS_None, // G_JUMP_TABLE = 214
    CEFBS_None, // G_DYN_STACKALLOC = 215
    CEFBS_None, // G_STRICT_FADD = 216
    CEFBS_None, // G_STRICT_FSUB = 217
    CEFBS_None, // G_STRICT_FMUL = 218
    CEFBS_None, // G_STRICT_FDIV = 219
    CEFBS_None, // G_STRICT_FREM = 220
    CEFBS_None, // G_STRICT_FMA = 221
    CEFBS_None, // G_STRICT_FSQRT = 222
    CEFBS_None, // G_READ_REGISTER = 223
    CEFBS_None, // G_WRITE_REGISTER = 224
    CEFBS_None, // G_MEMCPY = 225
    CEFBS_None, // G_MEMCPY_INLINE = 226
    CEFBS_None, // G_MEMMOVE = 227
    CEFBS_None, // G_MEMSET = 228
    CEFBS_None, // G_BZERO = 229
    CEFBS_None, // G_VECREDUCE_SEQ_FADD = 230
    CEFBS_None, // G_VECREDUCE_SEQ_FMUL = 231
    CEFBS_None, // G_VECREDUCE_FADD = 232
    CEFBS_None, // G_VECREDUCE_FMUL = 233
    CEFBS_None, // G_VECREDUCE_FMAX = 234
    CEFBS_None, // G_VECREDUCE_FMIN = 235
    CEFBS_None, // G_VECREDUCE_ADD = 236
    CEFBS_None, // G_VECREDUCE_MUL = 237
    CEFBS_None, // G_VECREDUCE_AND = 238
    CEFBS_None, // G_VECREDUCE_OR = 239
    CEFBS_None, // G_VECREDUCE_XOR = 240
    CEFBS_None, // G_VECREDUCE_SMAX = 241
    CEFBS_None, // G_VECREDUCE_SMIN = 242
    CEFBS_None, // G_VECREDUCE_UMAX = 243
    CEFBS_None, // G_VECREDUCE_UMIN = 244
    CEFBS_None, // G_SBFX = 245
    CEFBS_None, // G_UBFX = 246
    CEFBS_None, // CALL_PARAMS = 247
    CEFBS_None, // CALL_PARAMS_S = 248
    CEFBS_None, // CALL_RESULTS = 249
    CEFBS_None, // CALL_RESULTS_S = 250
    CEFBS_HasExceptionHandling, // CATCHRET = 251
    CEFBS_HasExceptionHandling, // CATCHRET_S = 252
    CEFBS_HasExceptionHandling, // CLEANUPRET = 253
    CEFBS_HasExceptionHandling, // CLEANUPRET_S = 254
    CEFBS_HasAtomics, // COMPILER_FENCE = 255
    CEFBS_HasAtomics, // COMPILER_FENCE_S = 256
    CEFBS_None, // RET_CALL_RESULTS = 257
    CEFBS_None, // RET_CALL_RESULTS_S = 258
    CEFBS_None, // ABS_F32 = 259
    CEFBS_None, // ABS_F32_S = 260
    CEFBS_HasSIMD128, // ABS_F32x4 = 261
    CEFBS_HasSIMD128, // ABS_F32x4_S = 262
    CEFBS_None, // ABS_F64 = 263
    CEFBS_None, // ABS_F64_S = 264
    CEFBS_HasSIMD128, // ABS_F64x2 = 265
    CEFBS_HasSIMD128, // ABS_F64x2_S = 266
    CEFBS_HasSIMD128, // ABS_I16x8 = 267
    CEFBS_HasSIMD128, // ABS_I16x8_S = 268
    CEFBS_HasSIMD128, // ABS_I32x4 = 269
    CEFBS_HasSIMD128, // ABS_I32x4_S = 270
    CEFBS_HasSIMD128, // ABS_I64x2 = 271
    CEFBS_HasSIMD128, // ABS_I64x2_S = 272
    CEFBS_HasSIMD128, // ABS_I8x16 = 273
    CEFBS_HasSIMD128, // ABS_I8x16_S = 274
    CEFBS_None, // ADD_F32 = 275
    CEFBS_None, // ADD_F32_S = 276
    CEFBS_HasSIMD128, // ADD_F32x4 = 277
    CEFBS_HasSIMD128, // ADD_F32x4_S = 278
    CEFBS_None, // ADD_F64 = 279
    CEFBS_None, // ADD_F64_S = 280
    CEFBS_HasSIMD128, // ADD_F64x2 = 281
    CEFBS_HasSIMD128, // ADD_F64x2_S = 282
    CEFBS_HasSIMD128, // ADD_I16x8 = 283
    CEFBS_HasSIMD128, // ADD_I16x8_S = 284
    CEFBS_None, // ADD_I32 = 285
    CEFBS_None, // ADD_I32_S = 286
    CEFBS_HasSIMD128, // ADD_I32x4 = 287
    CEFBS_HasSIMD128, // ADD_I32x4_S = 288
    CEFBS_None, // ADD_I64 = 289
    CEFBS_None, // ADD_I64_S = 290
    CEFBS_HasSIMD128, // ADD_I64x2 = 291
    CEFBS_HasSIMD128, // ADD_I64x2_S = 292
    CEFBS_HasSIMD128, // ADD_I8x16 = 293
    CEFBS_HasSIMD128, // ADD_I8x16_S = 294
    CEFBS_HasSIMD128, // ADD_SAT_S_I16x8 = 295
    CEFBS_HasSIMD128, // ADD_SAT_S_I16x8_S = 296
    CEFBS_HasSIMD128, // ADD_SAT_S_I8x16 = 297
    CEFBS_HasSIMD128, // ADD_SAT_S_I8x16_S = 298
    CEFBS_HasSIMD128, // ADD_SAT_U_I16x8 = 299
    CEFBS_HasSIMD128, // ADD_SAT_U_I16x8_S = 300
    CEFBS_HasSIMD128, // ADD_SAT_U_I8x16 = 301
    CEFBS_HasSIMD128, // ADD_SAT_U_I8x16_S = 302
    CEFBS_None, // ADJCALLSTACKDOWN = 303
    CEFBS_None, // ADJCALLSTACKDOWN_S = 304
    CEFBS_None, // ADJCALLSTACKUP = 305
    CEFBS_None, // ADJCALLSTACKUP_S = 306
    CEFBS_HasSIMD128, // ALLTRUE_I16x8 = 307
    CEFBS_HasSIMD128, // ALLTRUE_I16x8_S = 308
    CEFBS_HasSIMD128, // ALLTRUE_I32x4 = 309
    CEFBS_HasSIMD128, // ALLTRUE_I32x4_S = 310
    CEFBS_HasSIMD128, // ALLTRUE_I64x2 = 311
    CEFBS_HasSIMD128, // ALLTRUE_I64x2_S = 312
    CEFBS_HasSIMD128, // ALLTRUE_I8x16 = 313
    CEFBS_HasSIMD128, // ALLTRUE_I8x16_S = 314
    CEFBS_HasSIMD128, // AND = 315
    CEFBS_HasSIMD128, // ANDNOT = 316
    CEFBS_HasSIMD128, // ANDNOT_S = 317
    CEFBS_None, // AND_I32 = 318
    CEFBS_None, // AND_I32_S = 319
    CEFBS_None, // AND_I64 = 320
    CEFBS_None, // AND_I64_S = 321
    CEFBS_HasSIMD128, // AND_S = 322
    CEFBS_HasSIMD128, // ANYTRUE = 323
    CEFBS_HasSIMD128, // ANYTRUE_S = 324
    CEFBS_None, // ARGUMENT_externref = 325
    CEFBS_None, // ARGUMENT_externref_S = 326
    CEFBS_None, // ARGUMENT_f32 = 327
    CEFBS_None, // ARGUMENT_f32_S = 328
    CEFBS_None, // ARGUMENT_f64 = 329
    CEFBS_None, // ARGUMENT_f64_S = 330
    CEFBS_None, // ARGUMENT_funcref = 331
    CEFBS_None, // ARGUMENT_funcref_S = 332
    CEFBS_None, // ARGUMENT_i32 = 333
    CEFBS_None, // ARGUMENT_i32_S = 334
    CEFBS_None, // ARGUMENT_i64 = 335
    CEFBS_None, // ARGUMENT_i64_S = 336
    CEFBS_None, // ARGUMENT_v16i8 = 337
    CEFBS_None, // ARGUMENT_v16i8_S = 338
    CEFBS_None, // ARGUMENT_v2f64 = 339
    CEFBS_None, // ARGUMENT_v2f64_S = 340
    CEFBS_None, // ARGUMENT_v2i64 = 341
    CEFBS_None, // ARGUMENT_v2i64_S = 342
    CEFBS_None, // ARGUMENT_v4f32 = 343
    CEFBS_None, // ARGUMENT_v4f32_S = 344
    CEFBS_None, // ARGUMENT_v4i32 = 345
    CEFBS_None, // ARGUMENT_v4i32_S = 346
    CEFBS_None, // ARGUMENT_v8i16 = 347
    CEFBS_None, // ARGUMENT_v8i16_S = 348
    CEFBS_HasAtomics, // ATOMIC_FENCE = 349
    CEFBS_HasAtomics, // ATOMIC_FENCE_S = 350
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A32 = 351
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A32_S = 352
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A64 = 353
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A64_S = 354
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A32 = 355
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A32_S = 356
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A64 = 357
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A64_S = 358
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A32 = 359
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A32_S = 360
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A64 = 361
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A64_S = 362
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A32 = 363
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A32_S = 364
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A64 = 365
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A64_S = 366
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A32 = 367
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A32_S = 368
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A64 = 369
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A64_S = 370
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A32 = 371
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A32_S = 372
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A64 = 373
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A64_S = 374
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A32 = 375
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A32_S = 376
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A64 = 377
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A64_S = 378
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A32 = 379
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A32_S = 380
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A64 = 381
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A64_S = 382
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A32 = 383
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A32_S = 384
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A64 = 385
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A64_S = 386
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A32 = 387
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A32_S = 388
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A64 = 389
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A64_S = 390
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A32 = 391
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A32_S = 392
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A64 = 393
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A64_S = 394
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A32 = 395
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A32_S = 396
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A64 = 397
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A64_S = 398
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A32 = 399
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A32_S = 400
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A64 = 401
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A64_S = 402
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A32 = 403
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A32_S = 404
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A64 = 405
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A64_S = 406
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A32 = 407
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A32_S = 408
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A64 = 409
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A64_S = 410
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A32 = 411
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A32_S = 412
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A64 = 413
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A64_S = 414
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A32 = 415
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A32_S = 416
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A64 = 417
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A64_S = 418
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A32 = 419
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A32_S = 420
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A64 = 421
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A64_S = 422
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A32 = 423
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A32_S = 424
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A64 = 425
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A64_S = 426
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A32 = 427
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A32_S = 428
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A64 = 429
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A64_S = 430
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A32 = 431
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A32_S = 432
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A64 = 433
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A64_S = 434
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A32 = 435
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A32_S = 436
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A64 = 437
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A64_S = 438
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A32 = 439
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A32_S = 440
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A64 = 441
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A64_S = 442
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A32 = 443
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A32_S = 444
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A64 = 445
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A64_S = 446
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A32 = 447
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A32_S = 448
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A64 = 449
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A64_S = 450
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A32 = 451
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A32_S = 452
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A64 = 453
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A64_S = 454
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A32 = 455
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A32_S = 456
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A64 = 457
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A64_S = 458
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A32 = 459
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A32_S = 460
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A64 = 461
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A64_S = 462
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A32 = 463
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A32_S = 464
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A64 = 465
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A64_S = 466
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A32 = 467
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A32_S = 468
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A64 = 469
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A64_S = 470
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A32 = 471
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A32_S = 472
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A64 = 473
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A64_S = 474
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A32 = 475
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A32_S = 476
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A64 = 477
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A64_S = 478
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A32 = 479
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A32_S = 480
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A64 = 481
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A64_S = 482
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A32 = 483
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A32_S = 484
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A64 = 485
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A64_S = 486
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A32 = 487
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A32_S = 488
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A64 = 489
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A64_S = 490
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A32 = 491
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A32_S = 492
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A64 = 493
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A64_S = 494
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A32 = 495
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A32_S = 496
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A64 = 497
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A64_S = 498
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A32 = 499
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A32_S = 500
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A64 = 501
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A64_S = 502
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A32 = 503
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A32_S = 504
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A64 = 505
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A64_S = 506
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A32 = 507
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A32_S = 508
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A64 = 509
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A64_S = 510
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A32 = 511
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A32_S = 512
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A64 = 513
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A64_S = 514
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A32 = 515
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A32_S = 516
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A64 = 517
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A64_S = 518
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A32 = 519
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A32_S = 520
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A64 = 521
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A64_S = 522
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A32 = 523
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A32_S = 524
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A64 = 525
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A64_S = 526
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A32 = 527
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A32_S = 528
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A64 = 529
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A64_S = 530
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A32 = 531
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A32_S = 532
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A64 = 533
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A64_S = 534
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A32 = 535
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A32_S = 536
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A64 = 537
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A64_S = 538
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A32 = 539
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A32_S = 540
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A64 = 541
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A64_S = 542
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A32 = 543
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A32_S = 544
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A64 = 545
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A64_S = 546
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A32 = 547
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A32_S = 548
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A64 = 549
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A64_S = 550
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A32 = 551
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A32_S = 552
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A64 = 553
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A64_S = 554
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A32 = 555
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A32_S = 556
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A64 = 557
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A64_S = 558
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A32 = 559
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A32_S = 560
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A64 = 561
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A64_S = 562
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A32 = 563
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A32_S = 564
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A64 = 565
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A64_S = 566
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A32 = 567
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A32_S = 568
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A64 = 569
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A64_S = 570
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A32 = 571
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A32_S = 572
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A64 = 573
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A64_S = 574
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A32 = 575
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A32_S = 576
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A64 = 577
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A64_S = 578
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A32 = 579
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A32_S = 580
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A64 = 581
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A64_S = 582
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A32 = 583
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A32_S = 584
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A64 = 585
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A64_S = 586
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A32 = 587
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A32_S = 588
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A64 = 589
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A64_S = 590
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A32 = 591
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A32_S = 592
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A64 = 593
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A64_S = 594
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A32 = 595
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A32_S = 596
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A64 = 597
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A64_S = 598
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A32 = 599
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A32_S = 600
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A64 = 601
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A64_S = 602
    CEFBS_HasSIMD128, // AVGR_U_I16x8 = 603
    CEFBS_HasSIMD128, // AVGR_U_I16x8_S = 604
    CEFBS_HasSIMD128, // AVGR_U_I8x16 = 605
    CEFBS_HasSIMD128, // AVGR_U_I8x16_S = 606
    CEFBS_HasSIMD128, // BITMASK_I16x8 = 607
    CEFBS_HasSIMD128, // BITMASK_I16x8_S = 608
    CEFBS_HasSIMD128, // BITMASK_I32x4 = 609
    CEFBS_HasSIMD128, // BITMASK_I32x4_S = 610
    CEFBS_HasSIMD128, // BITMASK_I64x2 = 611
    CEFBS_HasSIMD128, // BITMASK_I64x2_S = 612
    CEFBS_HasSIMD128, // BITMASK_I8x16 = 613
    CEFBS_HasSIMD128, // BITMASK_I8x16_S = 614
    CEFBS_HasSIMD128, // BITSELECT = 615
    CEFBS_HasSIMD128, // BITSELECT_S = 616
    CEFBS_None, // BLOCK = 617
    CEFBS_None, // BLOCK_S = 618
    CEFBS_None, // BR = 619
    CEFBS_None, // BR_IF = 620
    CEFBS_None, // BR_IF_S = 621
    CEFBS_None, // BR_S = 622
    CEFBS_None, // BR_TABLE_I32 = 623
    CEFBS_None, // BR_TABLE_I32_S = 624
    CEFBS_None, // BR_TABLE_I64 = 625
    CEFBS_None, // BR_TABLE_I64_S = 626
    CEFBS_None, // BR_UNLESS = 627
    CEFBS_None, // BR_UNLESS_S = 628
    CEFBS_None, // CALL = 629
    CEFBS_None, // CALL_INDIRECT = 630
    CEFBS_None, // CALL_INDIRECT_S = 631
    CEFBS_None, // CALL_S = 632
    CEFBS_HasExceptionHandling, // CATCH = 633
    CEFBS_HasExceptionHandling, // CATCH_ALL = 634
    CEFBS_HasExceptionHandling, // CATCH_ALL_S = 635
    CEFBS_HasExceptionHandling, // CATCH_S = 636
    CEFBS_None, // CEIL_F32 = 637
    CEFBS_None, // CEIL_F32_S = 638
    CEFBS_HasSIMD128, // CEIL_F32x4 = 639
    CEFBS_HasSIMD128, // CEIL_F32x4_S = 640
    CEFBS_None, // CEIL_F64 = 641
    CEFBS_None, // CEIL_F64_S = 642
    CEFBS_HasSIMD128, // CEIL_F64x2 = 643
    CEFBS_HasSIMD128, // CEIL_F64x2_S = 644
    CEFBS_None, // CLZ_I32 = 645
    CEFBS_None, // CLZ_I32_S = 646
    CEFBS_None, // CLZ_I64 = 647
    CEFBS_None, // CLZ_I64_S = 648
    CEFBS_None, // CONST_F32 = 649
    CEFBS_None, // CONST_F32_S = 650
    CEFBS_None, // CONST_F64 = 651
    CEFBS_None, // CONST_F64_S = 652
    CEFBS_None, // CONST_I32 = 653
    CEFBS_None, // CONST_I32_S = 654
    CEFBS_None, // CONST_I64 = 655
    CEFBS_None, // CONST_I64_S = 656
    CEFBS_HasSIMD128, // CONST_V128_F32x4 = 657
    CEFBS_HasSIMD128, // CONST_V128_F32x4_S = 658
    CEFBS_HasSIMD128, // CONST_V128_F64x2 = 659
    CEFBS_HasSIMD128, // CONST_V128_F64x2_S = 660
    CEFBS_HasSIMD128, // CONST_V128_I16x8 = 661
    CEFBS_HasSIMD128, // CONST_V128_I16x8_S = 662
    CEFBS_HasSIMD128, // CONST_V128_I32x4 = 663
    CEFBS_HasSIMD128, // CONST_V128_I32x4_S = 664
    CEFBS_HasSIMD128, // CONST_V128_I64x2 = 665
    CEFBS_HasSIMD128, // CONST_V128_I64x2_S = 666
    CEFBS_HasSIMD128, // CONST_V128_I8x16 = 667
    CEFBS_HasSIMD128, // CONST_V128_I8x16_S = 668
    CEFBS_None, // COPYSIGN_F32 = 669
    CEFBS_None, // COPYSIGN_F32_S = 670
    CEFBS_None, // COPYSIGN_F64 = 671
    CEFBS_None, // COPYSIGN_F64_S = 672
    CEFBS_HasReferenceTypes, // COPY_EXTERNREF = 673
    CEFBS_HasReferenceTypes, // COPY_EXTERNREF_S = 674
    CEFBS_None, // COPY_F32 = 675
    CEFBS_None, // COPY_F32_S = 676
    CEFBS_None, // COPY_F64 = 677
    CEFBS_None, // COPY_F64_S = 678
    CEFBS_HasReferenceTypes, // COPY_FUNCREF = 679
    CEFBS_HasReferenceTypes, // COPY_FUNCREF_S = 680
    CEFBS_None, // COPY_I32 = 681
    CEFBS_None, // COPY_I32_S = 682
    CEFBS_None, // COPY_I64 = 683
    CEFBS_None, // COPY_I64_S = 684
    CEFBS_HasSIMD128, // COPY_V128 = 685
    CEFBS_HasSIMD128, // COPY_V128_S = 686
    CEFBS_None, // CTZ_I32 = 687
    CEFBS_None, // CTZ_I32_S = 688
    CEFBS_None, // CTZ_I64 = 689
    CEFBS_None, // CTZ_I64_S = 690
    CEFBS_None, // DEBUG_UNREACHABLE = 691
    CEFBS_None, // DEBUG_UNREACHABLE_S = 692
    CEFBS_HasExceptionHandling, // DELEGATE = 693
    CEFBS_HasExceptionHandling, // DELEGATE_S = 694
    CEFBS_None, // DIV_F32 = 695
    CEFBS_None, // DIV_F32_S = 696
    CEFBS_HasSIMD128, // DIV_F32x4 = 697
    CEFBS_HasSIMD128, // DIV_F32x4_S = 698
    CEFBS_None, // DIV_F64 = 699
    CEFBS_None, // DIV_F64_S = 700
    CEFBS_HasSIMD128, // DIV_F64x2 = 701
    CEFBS_HasSIMD128, // DIV_F64x2_S = 702
    CEFBS_None, // DIV_S_I32 = 703
    CEFBS_None, // DIV_S_I32_S = 704
    CEFBS_None, // DIV_S_I64 = 705
    CEFBS_None, // DIV_S_I64_S = 706
    CEFBS_None, // DIV_U_I32 = 707
    CEFBS_None, // DIV_U_I32_S = 708
    CEFBS_None, // DIV_U_I64 = 709
    CEFBS_None, // DIV_U_I64_S = 710
    CEFBS_HasSIMD128, // DOT = 711
    CEFBS_HasSIMD128, // DOT_S = 712
    CEFBS_HasReferenceTypes, // DROP_EXTERNREF = 713
    CEFBS_HasReferenceTypes, // DROP_EXTERNREF_S = 714
    CEFBS_None, // DROP_F32 = 715
    CEFBS_None, // DROP_F32_S = 716
    CEFBS_None, // DROP_F64 = 717
    CEFBS_None, // DROP_F64_S = 718
    CEFBS_HasReferenceTypes, // DROP_FUNCREF = 719
    CEFBS_HasReferenceTypes, // DROP_FUNCREF_S = 720
    CEFBS_None, // DROP_I32 = 721
    CEFBS_None, // DROP_I32_S = 722
    CEFBS_None, // DROP_I64 = 723
    CEFBS_None, // DROP_I64_S = 724
    CEFBS_HasSIMD128, // DROP_V128 = 725
    CEFBS_HasSIMD128, // DROP_V128_S = 726
    CEFBS_None, // ELSE = 727
    CEFBS_None, // ELSE_S = 728
    CEFBS_None, // END = 729
    CEFBS_None, // END_BLOCK = 730
    CEFBS_None, // END_BLOCK_S = 731
    CEFBS_None, // END_FUNCTION = 732
    CEFBS_None, // END_FUNCTION_S = 733
    CEFBS_None, // END_IF = 734
    CEFBS_None, // END_IF_S = 735
    CEFBS_None, // END_LOOP = 736
    CEFBS_None, // END_LOOP_S = 737
    CEFBS_None, // END_S = 738
    CEFBS_HasExceptionHandling, // END_TRY = 739
    CEFBS_HasExceptionHandling, // END_TRY_S = 740
    CEFBS_None, // EQZ_I32 = 741
    CEFBS_None, // EQZ_I32_S = 742
    CEFBS_None, // EQZ_I64 = 743
    CEFBS_None, // EQZ_I64_S = 744
    CEFBS_None, // EQ_F32 = 745
    CEFBS_None, // EQ_F32_S = 746
    CEFBS_HasSIMD128, // EQ_F32x4 = 747
    CEFBS_HasSIMD128, // EQ_F32x4_S = 748
    CEFBS_None, // EQ_F64 = 749
    CEFBS_None, // EQ_F64_S = 750
    CEFBS_HasSIMD128, // EQ_F64x2 = 751
    CEFBS_HasSIMD128, // EQ_F64x2_S = 752
    CEFBS_HasSIMD128, // EQ_I16x8 = 753
    CEFBS_HasSIMD128, // EQ_I16x8_S = 754
    CEFBS_None, // EQ_I32 = 755
    CEFBS_None, // EQ_I32_S = 756
    CEFBS_HasSIMD128, // EQ_I32x4 = 757
    CEFBS_HasSIMD128, // EQ_I32x4_S = 758
    CEFBS_None, // EQ_I64 = 759
    CEFBS_None, // EQ_I64_S = 760
    CEFBS_HasSIMD128, // EQ_I64x2 = 761
    CEFBS_HasSIMD128, // EQ_I64x2_S = 762
    CEFBS_HasSIMD128, // EQ_I8x16 = 763
    CEFBS_HasSIMD128, // EQ_I8x16_S = 764
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I16x8 = 765
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I16x8_S = 766
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I32x4 = 767
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I32x4_S = 768
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I64x2 = 769
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I64x2_S = 770
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I16x8 = 771
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I16x8_S = 772
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I32x4 = 773
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I32x4_S = 774
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I64x2 = 775
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I64x2_S = 776
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I16x8 = 777
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I16x8_S = 778
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I32x4 = 779
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I32x4_S = 780
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I64x2 = 781
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I64x2_S = 782
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I16x8 = 783
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I16x8_S = 784
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I32x4 = 785
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I32x4_S = 786
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I64x2 = 787
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I64x2_S = 788
    CEFBS_HasSIMD128, // EXTRACT_LANE_F32x4 = 789
    CEFBS_HasSIMD128, // EXTRACT_LANE_F32x4_S = 790
    CEFBS_HasSIMD128, // EXTRACT_LANE_F64x2 = 791
    CEFBS_HasSIMD128, // EXTRACT_LANE_F64x2_S = 792
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_s = 793
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_s_S = 794
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_u = 795
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_u_S = 796
    CEFBS_HasSIMD128, // EXTRACT_LANE_I32x4 = 797
    CEFBS_HasSIMD128, // EXTRACT_LANE_I32x4_S = 798
    CEFBS_HasSIMD128, // EXTRACT_LANE_I64x2 = 799
    CEFBS_HasSIMD128, // EXTRACT_LANE_I64x2_S = 800
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_s = 801
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_s_S = 802
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_u = 803
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_u_S = 804
    CEFBS_None, // F32_CONVERT_S_I32 = 805
    CEFBS_None, // F32_CONVERT_S_I32_S = 806
    CEFBS_None, // F32_CONVERT_S_I64 = 807
    CEFBS_None, // F32_CONVERT_S_I64_S = 808
    CEFBS_None, // F32_CONVERT_U_I32 = 809
    CEFBS_None, // F32_CONVERT_U_I32_S = 810
    CEFBS_None, // F32_CONVERT_U_I64 = 811
    CEFBS_None, // F32_CONVERT_U_I64_S = 812
    CEFBS_None, // F32_DEMOTE_F64 = 813
    CEFBS_None, // F32_DEMOTE_F64_S = 814
    CEFBS_None, // F32_REINTERPRET_I32 = 815
    CEFBS_None, // F32_REINTERPRET_I32_S = 816
    CEFBS_None, // F64_CONVERT_S_I32 = 817
    CEFBS_None, // F64_CONVERT_S_I32_S = 818
    CEFBS_None, // F64_CONVERT_S_I64 = 819
    CEFBS_None, // F64_CONVERT_S_I64_S = 820
    CEFBS_None, // F64_CONVERT_U_I32 = 821
    CEFBS_None, // F64_CONVERT_U_I32_S = 822
    CEFBS_None, // F64_CONVERT_U_I64 = 823
    CEFBS_None, // F64_CONVERT_U_I64_S = 824
    CEFBS_None, // F64_PROMOTE_F32 = 825
    CEFBS_None, // F64_PROMOTE_F32_S = 826
    CEFBS_None, // F64_REINTERPRET_I64 = 827
    CEFBS_None, // F64_REINTERPRET_I64_S = 828
    CEFBS_None, // FALLTHROUGH_RETURN = 829
    CEFBS_None, // FALLTHROUGH_RETURN_S = 830
    CEFBS_None, // FLOOR_F32 = 831
    CEFBS_None, // FLOOR_F32_S = 832
    CEFBS_HasSIMD128, // FLOOR_F32x4 = 833
    CEFBS_HasSIMD128, // FLOOR_F32x4_S = 834
    CEFBS_None, // FLOOR_F64 = 835
    CEFBS_None, // FLOOR_F64_S = 836
    CEFBS_HasSIMD128, // FLOOR_F64x2 = 837
    CEFBS_HasSIMD128, // FLOOR_F64x2_S = 838
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F32 = 839
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F32_S = 840
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F64 = 841
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F64_S = 842
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F32 = 843
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F32_S = 844
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F64 = 845
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F64_S = 846
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F32 = 847
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F32_S = 848
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F64 = 849
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F64_S = 850
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F32 = 851
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F32_S = 852
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F64 = 853
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F64_S = 854
    CEFBS_None, // GE_F32 = 855
    CEFBS_None, // GE_F32_S = 856
    CEFBS_HasSIMD128, // GE_F32x4 = 857
    CEFBS_HasSIMD128, // GE_F32x4_S = 858
    CEFBS_None, // GE_F64 = 859
    CEFBS_None, // GE_F64_S = 860
    CEFBS_HasSIMD128, // GE_F64x2 = 861
    CEFBS_HasSIMD128, // GE_F64x2_S = 862
    CEFBS_HasSIMD128, // GE_S_I16x8 = 863
    CEFBS_HasSIMD128, // GE_S_I16x8_S = 864
    CEFBS_None, // GE_S_I32 = 865
    CEFBS_None, // GE_S_I32_S = 866
    CEFBS_HasSIMD128, // GE_S_I32x4 = 867
    CEFBS_HasSIMD128, // GE_S_I32x4_S = 868
    CEFBS_None, // GE_S_I64 = 869
    CEFBS_None, // GE_S_I64_S = 870
    CEFBS_HasSIMD128, // GE_S_I64x2 = 871
    CEFBS_HasSIMD128, // GE_S_I64x2_S = 872
    CEFBS_HasSIMD128, // GE_S_I8x16 = 873
    CEFBS_HasSIMD128, // GE_S_I8x16_S = 874
    CEFBS_HasSIMD128, // GE_U_I16x8 = 875
    CEFBS_HasSIMD128, // GE_U_I16x8_S = 876
    CEFBS_None, // GE_U_I32 = 877
    CEFBS_None, // GE_U_I32_S = 878
    CEFBS_HasSIMD128, // GE_U_I32x4 = 879
    CEFBS_HasSIMD128, // GE_U_I32x4_S = 880
    CEFBS_None, // GE_U_I64 = 881
    CEFBS_None, // GE_U_I64_S = 882
    CEFBS_HasSIMD128, // GE_U_I8x16 = 883
    CEFBS_HasSIMD128, // GE_U_I8x16_S = 884
    CEFBS_HasReferenceTypes, // GLOBAL_GET_EXTERNREF = 885
    CEFBS_HasReferenceTypes, // GLOBAL_GET_EXTERNREF_S = 886
    CEFBS_None, // GLOBAL_GET_F32 = 887
    CEFBS_None, // GLOBAL_GET_F32_S = 888
    CEFBS_None, // GLOBAL_GET_F64 = 889
    CEFBS_None, // GLOBAL_GET_F64_S = 890
    CEFBS_HasReferenceTypes, // GLOBAL_GET_FUNCREF = 891
    CEFBS_HasReferenceTypes, // GLOBAL_GET_FUNCREF_S = 892
    CEFBS_None, // GLOBAL_GET_I32 = 893
    CEFBS_None, // GLOBAL_GET_I32_S = 894
    CEFBS_None, // GLOBAL_GET_I64 = 895
    CEFBS_None, // GLOBAL_GET_I64_S = 896
    CEFBS_HasSIMD128, // GLOBAL_GET_V128 = 897
    CEFBS_HasSIMD128, // GLOBAL_GET_V128_S = 898
    CEFBS_HasReferenceTypes, // GLOBAL_SET_EXTERNREF = 899
    CEFBS_HasReferenceTypes, // GLOBAL_SET_EXTERNREF_S = 900
    CEFBS_None, // GLOBAL_SET_F32 = 901
    CEFBS_None, // GLOBAL_SET_F32_S = 902
    CEFBS_None, // GLOBAL_SET_F64 = 903
    CEFBS_None, // GLOBAL_SET_F64_S = 904
    CEFBS_HasReferenceTypes, // GLOBAL_SET_FUNCREF = 905
    CEFBS_HasReferenceTypes, // GLOBAL_SET_FUNCREF_S = 906
    CEFBS_None, // GLOBAL_SET_I32 = 907
    CEFBS_None, // GLOBAL_SET_I32_S = 908
    CEFBS_None, // GLOBAL_SET_I64 = 909
    CEFBS_None, // GLOBAL_SET_I64_S = 910
    CEFBS_HasSIMD128, // GLOBAL_SET_V128 = 911
    CEFBS_HasSIMD128, // GLOBAL_SET_V128_S = 912
    CEFBS_None, // GT_F32 = 913
    CEFBS_None, // GT_F32_S = 914
    CEFBS_HasSIMD128, // GT_F32x4 = 915
    CEFBS_HasSIMD128, // GT_F32x4_S = 916
    CEFBS_None, // GT_F64 = 917
    CEFBS_None, // GT_F64_S = 918
    CEFBS_HasSIMD128, // GT_F64x2 = 919
    CEFBS_HasSIMD128, // GT_F64x2_S = 920
    CEFBS_HasSIMD128, // GT_S_I16x8 = 921
    CEFBS_HasSIMD128, // GT_S_I16x8_S = 922
    CEFBS_None, // GT_S_I32 = 923
    CEFBS_None, // GT_S_I32_S = 924
    CEFBS_HasSIMD128, // GT_S_I32x4 = 925
    CEFBS_HasSIMD128, // GT_S_I32x4_S = 926
    CEFBS_None, // GT_S_I64 = 927
    CEFBS_None, // GT_S_I64_S = 928
    CEFBS_HasSIMD128, // GT_S_I64x2 = 929
    CEFBS_HasSIMD128, // GT_S_I64x2_S = 930
    CEFBS_HasSIMD128, // GT_S_I8x16 = 931
    CEFBS_HasSIMD128, // GT_S_I8x16_S = 932
    CEFBS_HasSIMD128, // GT_U_I16x8 = 933
    CEFBS_HasSIMD128, // GT_U_I16x8_S = 934
    CEFBS_None, // GT_U_I32 = 935
    CEFBS_None, // GT_U_I32_S = 936
    CEFBS_HasSIMD128, // GT_U_I32x4 = 937
    CEFBS_HasSIMD128, // GT_U_I32x4_S = 938
    CEFBS_None, // GT_U_I64 = 939
    CEFBS_None, // GT_U_I64_S = 940
    CEFBS_HasSIMD128, // GT_U_I8x16 = 941
    CEFBS_HasSIMD128, // GT_U_I8x16_S = 942
    CEFBS_HasSignExt, // I32_EXTEND16_S_I32 = 943
    CEFBS_HasSignExt, // I32_EXTEND16_S_I32_S = 944
    CEFBS_HasSignExt, // I32_EXTEND8_S_I32 = 945
    CEFBS_HasSignExt, // I32_EXTEND8_S_I32_S = 946
    CEFBS_None, // I32_REINTERPRET_F32 = 947
    CEFBS_None, // I32_REINTERPRET_F32_S = 948
    CEFBS_None, // I32_TRUNC_S_F32 = 949
    CEFBS_None, // I32_TRUNC_S_F32_S = 950
    CEFBS_None, // I32_TRUNC_S_F64 = 951
    CEFBS_None, // I32_TRUNC_S_F64_S = 952
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F32 = 953
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F32_S = 954
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F64 = 955
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F64_S = 956
    CEFBS_None, // I32_TRUNC_U_F32 = 957
    CEFBS_None, // I32_TRUNC_U_F32_S = 958
    CEFBS_None, // I32_TRUNC_U_F64 = 959
    CEFBS_None, // I32_TRUNC_U_F64_S = 960
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F32 = 961
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F32_S = 962
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F64 = 963
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F64_S = 964
    CEFBS_None, // I32_WRAP_I64 = 965
    CEFBS_None, // I32_WRAP_I64_S = 966
    CEFBS_HasSignExt, // I64_EXTEND16_S_I64 = 967
    CEFBS_HasSignExt, // I64_EXTEND16_S_I64_S = 968
    CEFBS_HasSignExt, // I64_EXTEND32_S_I64 = 969
    CEFBS_HasSignExt, // I64_EXTEND32_S_I64_S = 970
    CEFBS_HasSignExt, // I64_EXTEND8_S_I64 = 971
    CEFBS_HasSignExt, // I64_EXTEND8_S_I64_S = 972
    CEFBS_None, // I64_EXTEND_S_I32 = 973
    CEFBS_None, // I64_EXTEND_S_I32_S = 974
    CEFBS_None, // I64_EXTEND_U_I32 = 975
    CEFBS_None, // I64_EXTEND_U_I32_S = 976
    CEFBS_None, // I64_REINTERPRET_F64 = 977
    CEFBS_None, // I64_REINTERPRET_F64_S = 978
    CEFBS_None, // I64_TRUNC_S_F32 = 979
    CEFBS_None, // I64_TRUNC_S_F32_S = 980
    CEFBS_None, // I64_TRUNC_S_F64 = 981
    CEFBS_None, // I64_TRUNC_S_F64_S = 982
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F32 = 983
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F32_S = 984
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F64 = 985
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F64_S = 986
    CEFBS_None, // I64_TRUNC_U_F32 = 987
    CEFBS_None, // I64_TRUNC_U_F32_S = 988
    CEFBS_None, // I64_TRUNC_U_F64 = 989
    CEFBS_None, // I64_TRUNC_U_F64_S = 990
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F32 = 991
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F32_S = 992
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F64 = 993
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F64_S = 994
    CEFBS_None, // IF = 995
    CEFBS_None, // IF_S = 996
    CEFBS_HasRelaxedSIMD, // LANESELECT_I16x8 = 997
    CEFBS_HasRelaxedSIMD, // LANESELECT_I16x8_S = 998
    CEFBS_HasRelaxedSIMD, // LANESELECT_I32x4 = 999
    CEFBS_HasRelaxedSIMD, // LANESELECT_I32x4_S = 1000
    CEFBS_HasRelaxedSIMD, // LANESELECT_I64x2 = 1001
    CEFBS_HasRelaxedSIMD, // LANESELECT_I64x2_S = 1002
    CEFBS_HasRelaxedSIMD, // LANESELECT_I8x16 = 1003
    CEFBS_HasRelaxedSIMD, // LANESELECT_I8x16_S = 1004
    CEFBS_None, // LE_F32 = 1005
    CEFBS_None, // LE_F32_S = 1006
    CEFBS_HasSIMD128, // LE_F32x4 = 1007
    CEFBS_HasSIMD128, // LE_F32x4_S = 1008
    CEFBS_None, // LE_F64 = 1009
    CEFBS_None, // LE_F64_S = 1010
    CEFBS_HasSIMD128, // LE_F64x2 = 1011
    CEFBS_HasSIMD128, // LE_F64x2_S = 1012
    CEFBS_HasSIMD128, // LE_S_I16x8 = 1013
    CEFBS_HasSIMD128, // LE_S_I16x8_S = 1014
    CEFBS_None, // LE_S_I32 = 1015
    CEFBS_None, // LE_S_I32_S = 1016
    CEFBS_HasSIMD128, // LE_S_I32x4 = 1017
    CEFBS_HasSIMD128, // LE_S_I32x4_S = 1018
    CEFBS_None, // LE_S_I64 = 1019
    CEFBS_None, // LE_S_I64_S = 1020
    CEFBS_HasSIMD128, // LE_S_I64x2 = 1021
    CEFBS_HasSIMD128, // LE_S_I64x2_S = 1022
    CEFBS_HasSIMD128, // LE_S_I8x16 = 1023
    CEFBS_HasSIMD128, // LE_S_I8x16_S = 1024
    CEFBS_HasSIMD128, // LE_U_I16x8 = 1025
    CEFBS_HasSIMD128, // LE_U_I16x8_S = 1026
    CEFBS_None, // LE_U_I32 = 1027
    CEFBS_None, // LE_U_I32_S = 1028
    CEFBS_HasSIMD128, // LE_U_I32x4 = 1029
    CEFBS_HasSIMD128, // LE_U_I32x4_S = 1030
    CEFBS_None, // LE_U_I64 = 1031
    CEFBS_None, // LE_U_I64_S = 1032
    CEFBS_HasSIMD128, // LE_U_I8x16 = 1033
    CEFBS_HasSIMD128, // LE_U_I8x16_S = 1034
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A32 = 1035
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A32_S = 1036
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A64 = 1037
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A64_S = 1038
    CEFBS_None, // LOAD16_S_I32_A32 = 1039
    CEFBS_None, // LOAD16_S_I32_A32_S = 1040
    CEFBS_None, // LOAD16_S_I32_A64 = 1041
    CEFBS_None, // LOAD16_S_I32_A64_S = 1042
    CEFBS_None, // LOAD16_S_I64_A32 = 1043
    CEFBS_None, // LOAD16_S_I64_A32_S = 1044
    CEFBS_None, // LOAD16_S_I64_A64 = 1045
    CEFBS_None, // LOAD16_S_I64_A64_S = 1046
    CEFBS_None, // LOAD16_U_I32_A32 = 1047
    CEFBS_None, // LOAD16_U_I32_A32_S = 1048
    CEFBS_None, // LOAD16_U_I32_A64 = 1049
    CEFBS_None, // LOAD16_U_I32_A64_S = 1050
    CEFBS_None, // LOAD16_U_I64_A32 = 1051
    CEFBS_None, // LOAD16_U_I64_A32_S = 1052
    CEFBS_None, // LOAD16_U_I64_A64 = 1053
    CEFBS_None, // LOAD16_U_I64_A64_S = 1054
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A32 = 1055
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A32_S = 1056
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A64 = 1057
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A64_S = 1058
    CEFBS_None, // LOAD32_S_I64_A32 = 1059
    CEFBS_None, // LOAD32_S_I64_A32_S = 1060
    CEFBS_None, // LOAD32_S_I64_A64 = 1061
    CEFBS_None, // LOAD32_S_I64_A64_S = 1062
    CEFBS_None, // LOAD32_U_I64_A32 = 1063
    CEFBS_None, // LOAD32_U_I64_A32_S = 1064
    CEFBS_None, // LOAD32_U_I64_A64 = 1065
    CEFBS_None, // LOAD32_U_I64_A64_S = 1066
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A32 = 1067
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A32_S = 1068
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A64 = 1069
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A64_S = 1070
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A32 = 1071
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A32_S = 1072
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A64 = 1073
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A64_S = 1074
    CEFBS_None, // LOAD8_S_I32_A32 = 1075
    CEFBS_None, // LOAD8_S_I32_A32_S = 1076
    CEFBS_None, // LOAD8_S_I32_A64 = 1077
    CEFBS_None, // LOAD8_S_I32_A64_S = 1078
    CEFBS_None, // LOAD8_S_I64_A32 = 1079
    CEFBS_None, // LOAD8_S_I64_A32_S = 1080
    CEFBS_None, // LOAD8_S_I64_A64 = 1081
    CEFBS_None, // LOAD8_S_I64_A64_S = 1082
    CEFBS_None, // LOAD8_U_I32_A32 = 1083
    CEFBS_None, // LOAD8_U_I32_A32_S = 1084
    CEFBS_None, // LOAD8_U_I32_A64 = 1085
    CEFBS_None, // LOAD8_U_I32_A64_S = 1086
    CEFBS_None, // LOAD8_U_I64_A32 = 1087
    CEFBS_None, // LOAD8_U_I64_A32_S = 1088
    CEFBS_None, // LOAD8_U_I64_A64 = 1089
    CEFBS_None, // LOAD8_U_I64_A64_S = 1090
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A32 = 1091
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A32_S = 1092
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A64 = 1093
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A64_S = 1094
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A32 = 1095
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A32_S = 1096
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A64 = 1097
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A64_S = 1098
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A32 = 1099
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A32_S = 1100
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A64 = 1101
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A64_S = 1102
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A32 = 1103
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A32_S = 1104
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A64 = 1105
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A64_S = 1106
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A32 = 1107
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A32_S = 1108
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A64 = 1109
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A64_S = 1110
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A32 = 1111
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A32_S = 1112
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A64 = 1113
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A64_S = 1114
    CEFBS_None, // LOAD_F32_A32 = 1115
    CEFBS_None, // LOAD_F32_A32_S = 1116
    CEFBS_None, // LOAD_F32_A64 = 1117
    CEFBS_None, // LOAD_F32_A64_S = 1118
    CEFBS_None, // LOAD_F64_A32 = 1119
    CEFBS_None, // LOAD_F64_A32_S = 1120
    CEFBS_None, // LOAD_F64_A64 = 1121
    CEFBS_None, // LOAD_F64_A64_S = 1122
    CEFBS_None, // LOAD_I32_A32 = 1123
    CEFBS_None, // LOAD_I32_A32_S = 1124
    CEFBS_None, // LOAD_I32_A64 = 1125
    CEFBS_None, // LOAD_I32_A64_S = 1126
    CEFBS_None, // LOAD_I64_A32 = 1127
    CEFBS_None, // LOAD_I64_A32_S = 1128
    CEFBS_None, // LOAD_I64_A64 = 1129
    CEFBS_None, // LOAD_I64_A64_S = 1130
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A32 = 1131
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A32_S = 1132
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A64 = 1133
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A64_S = 1134
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A32 = 1135
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A32_S = 1136
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A64 = 1137
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A64_S = 1138
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A32 = 1139
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A32_S = 1140
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A64 = 1141
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A64_S = 1142
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A32 = 1143
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A32_S = 1144
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A64 = 1145
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A64_S = 1146
    CEFBS_HasSIMD128, // LOAD_V128_A32 = 1147
    CEFBS_HasSIMD128, // LOAD_V128_A32_S = 1148
    CEFBS_HasSIMD128, // LOAD_V128_A64 = 1149
    CEFBS_HasSIMD128, // LOAD_V128_A64_S = 1150
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A32 = 1151
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A32_S = 1152
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A64 = 1153
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A64_S = 1154
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A32 = 1155
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A32_S = 1156
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A64 = 1157
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A64_S = 1158
    CEFBS_HasReferenceTypes, // LOCAL_GET_EXTERNREF = 1159
    CEFBS_HasReferenceTypes, // LOCAL_GET_EXTERNREF_S = 1160
    CEFBS_None, // LOCAL_GET_F32 = 1161
    CEFBS_None, // LOCAL_GET_F32_S = 1162
    CEFBS_None, // LOCAL_GET_F64 = 1163
    CEFBS_None, // LOCAL_GET_F64_S = 1164
    CEFBS_HasReferenceTypes, // LOCAL_GET_FUNCREF = 1165
    CEFBS_HasReferenceTypes, // LOCAL_GET_FUNCREF_S = 1166
    CEFBS_None, // LOCAL_GET_I32 = 1167
    CEFBS_None, // LOCAL_GET_I32_S = 1168
    CEFBS_None, // LOCAL_GET_I64 = 1169
    CEFBS_None, // LOCAL_GET_I64_S = 1170
    CEFBS_HasSIMD128, // LOCAL_GET_V128 = 1171
    CEFBS_HasSIMD128, // LOCAL_GET_V128_S = 1172
    CEFBS_HasReferenceTypes, // LOCAL_SET_EXTERNREF = 1173
    CEFBS_HasReferenceTypes, // LOCAL_SET_EXTERNREF_S = 1174
    CEFBS_None, // LOCAL_SET_F32 = 1175
    CEFBS_None, // LOCAL_SET_F32_S = 1176
    CEFBS_None, // LOCAL_SET_F64 = 1177
    CEFBS_None, // LOCAL_SET_F64_S = 1178
    CEFBS_HasReferenceTypes, // LOCAL_SET_FUNCREF = 1179
    CEFBS_HasReferenceTypes, // LOCAL_SET_FUNCREF_S = 1180
    CEFBS_None, // LOCAL_SET_I32 = 1181
    CEFBS_None, // LOCAL_SET_I32_S = 1182
    CEFBS_None, // LOCAL_SET_I64 = 1183
    CEFBS_None, // LOCAL_SET_I64_S = 1184
    CEFBS_HasSIMD128, // LOCAL_SET_V128 = 1185
    CEFBS_HasSIMD128, // LOCAL_SET_V128_S = 1186
    CEFBS_HasReferenceTypes, // LOCAL_TEE_EXTERNREF = 1187
    CEFBS_HasReferenceTypes, // LOCAL_TEE_EXTERNREF_S = 1188
    CEFBS_None, // LOCAL_TEE_F32 = 1189
    CEFBS_None, // LOCAL_TEE_F32_S = 1190
    CEFBS_None, // LOCAL_TEE_F64 = 1191
    CEFBS_None, // LOCAL_TEE_F64_S = 1192
    CEFBS_HasReferenceTypes, // LOCAL_TEE_FUNCREF = 1193
    CEFBS_HasReferenceTypes, // LOCAL_TEE_FUNCREF_S = 1194
    CEFBS_None, // LOCAL_TEE_I32 = 1195
    CEFBS_None, // LOCAL_TEE_I32_S = 1196
    CEFBS_None, // LOCAL_TEE_I64 = 1197
    CEFBS_None, // LOCAL_TEE_I64_S = 1198
    CEFBS_HasSIMD128, // LOCAL_TEE_V128 = 1199
    CEFBS_HasSIMD128, // LOCAL_TEE_V128_S = 1200
    CEFBS_None, // LOOP = 1201
    CEFBS_None, // LOOP_S = 1202
    CEFBS_None, // LT_F32 = 1203
    CEFBS_None, // LT_F32_S = 1204
    CEFBS_HasSIMD128, // LT_F32x4 = 1205
    CEFBS_HasSIMD128, // LT_F32x4_S = 1206
    CEFBS_None, // LT_F64 = 1207
    CEFBS_None, // LT_F64_S = 1208
    CEFBS_HasSIMD128, // LT_F64x2 = 1209
    CEFBS_HasSIMD128, // LT_F64x2_S = 1210
    CEFBS_HasSIMD128, // LT_S_I16x8 = 1211
    CEFBS_HasSIMD128, // LT_S_I16x8_S = 1212
    CEFBS_None, // LT_S_I32 = 1213
    CEFBS_None, // LT_S_I32_S = 1214
    CEFBS_HasSIMD128, // LT_S_I32x4 = 1215
    CEFBS_HasSIMD128, // LT_S_I32x4_S = 1216
    CEFBS_None, // LT_S_I64 = 1217
    CEFBS_None, // LT_S_I64_S = 1218
    CEFBS_HasSIMD128, // LT_S_I64x2 = 1219
    CEFBS_HasSIMD128, // LT_S_I64x2_S = 1220
    CEFBS_HasSIMD128, // LT_S_I8x16 = 1221
    CEFBS_HasSIMD128, // LT_S_I8x16_S = 1222
    CEFBS_HasSIMD128, // LT_U_I16x8 = 1223
    CEFBS_HasSIMD128, // LT_U_I16x8_S = 1224
    CEFBS_None, // LT_U_I32 = 1225
    CEFBS_None, // LT_U_I32_S = 1226
    CEFBS_HasSIMD128, // LT_U_I32x4 = 1227
    CEFBS_HasSIMD128, // LT_U_I32x4_S = 1228
    CEFBS_None, // LT_U_I64 = 1229
    CEFBS_None, // LT_U_I64_S = 1230
    CEFBS_HasSIMD128, // LT_U_I8x16 = 1231
    CEFBS_HasSIMD128, // LT_U_I8x16_S = 1232
    CEFBS_HasRelaxedSIMD, // MADD_F32x4 = 1233
    CEFBS_HasRelaxedSIMD, // MADD_F32x4_S = 1234
    CEFBS_HasRelaxedSIMD, // MADD_F64x2 = 1235
    CEFBS_HasRelaxedSIMD, // MADD_F64x2_S = 1236
    CEFBS_None, // MAX_F32 = 1237
    CEFBS_None, // MAX_F32_S = 1238
    CEFBS_HasSIMD128, // MAX_F32x4 = 1239
    CEFBS_HasSIMD128, // MAX_F32x4_S = 1240
    CEFBS_None, // MAX_F64 = 1241
    CEFBS_None, // MAX_F64_S = 1242
    CEFBS_HasSIMD128, // MAX_F64x2 = 1243
    CEFBS_HasSIMD128, // MAX_F64x2_S = 1244
    CEFBS_HasSIMD128, // MAX_S_I16x8 = 1245
    CEFBS_HasSIMD128, // MAX_S_I16x8_S = 1246
    CEFBS_HasSIMD128, // MAX_S_I32x4 = 1247
    CEFBS_HasSIMD128, // MAX_S_I32x4_S = 1248
    CEFBS_HasSIMD128, // MAX_S_I8x16 = 1249
    CEFBS_HasSIMD128, // MAX_S_I8x16_S = 1250
    CEFBS_HasSIMD128, // MAX_U_I16x8 = 1251
    CEFBS_HasSIMD128, // MAX_U_I16x8_S = 1252
    CEFBS_HasSIMD128, // MAX_U_I32x4 = 1253
    CEFBS_HasSIMD128, // MAX_U_I32x4_S = 1254
    CEFBS_HasSIMD128, // MAX_U_I8x16 = 1255
    CEFBS_HasSIMD128, // MAX_U_I8x16_S = 1256
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A32 = 1257
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A32_S = 1258
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A64 = 1259
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A64_S = 1260
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A32 = 1261
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A32_S = 1262
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A64 = 1263
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A64_S = 1264
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A32 = 1265
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A32_S = 1266
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A64 = 1267
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A64_S = 1268
    CEFBS_None, // MIN_F32 = 1269
    CEFBS_None, // MIN_F32_S = 1270
    CEFBS_HasSIMD128, // MIN_F32x4 = 1271
    CEFBS_HasSIMD128, // MIN_F32x4_S = 1272
    CEFBS_None, // MIN_F64 = 1273
    CEFBS_None, // MIN_F64_S = 1274
    CEFBS_HasSIMD128, // MIN_F64x2 = 1275
    CEFBS_HasSIMD128, // MIN_F64x2_S = 1276
    CEFBS_HasSIMD128, // MIN_S_I16x8 = 1277
    CEFBS_HasSIMD128, // MIN_S_I16x8_S = 1278
    CEFBS_HasSIMD128, // MIN_S_I32x4 = 1279
    CEFBS_HasSIMD128, // MIN_S_I32x4_S = 1280
    CEFBS_HasSIMD128, // MIN_S_I8x16 = 1281
    CEFBS_HasSIMD128, // MIN_S_I8x16_S = 1282
    CEFBS_HasSIMD128, // MIN_U_I16x8 = 1283
    CEFBS_HasSIMD128, // MIN_U_I16x8_S = 1284
    CEFBS_HasSIMD128, // MIN_U_I32x4 = 1285
    CEFBS_HasSIMD128, // MIN_U_I32x4_S = 1286
    CEFBS_HasSIMD128, // MIN_U_I8x16 = 1287
    CEFBS_HasSIMD128, // MIN_U_I8x16_S = 1288
    CEFBS_None, // MUL_F32 = 1289
    CEFBS_None, // MUL_F32_S = 1290
    CEFBS_HasSIMD128, // MUL_F32x4 = 1291
    CEFBS_HasSIMD128, // MUL_F32x4_S = 1292
    CEFBS_None, // MUL_F64 = 1293
    CEFBS_None, // MUL_F64_S = 1294
    CEFBS_HasSIMD128, // MUL_F64x2 = 1295
    CEFBS_HasSIMD128, // MUL_F64x2_S = 1296
    CEFBS_HasSIMD128, // MUL_I16x8 = 1297
    CEFBS_HasSIMD128, // MUL_I16x8_S = 1298
    CEFBS_None, // MUL_I32 = 1299
    CEFBS_None, // MUL_I32_S = 1300
    CEFBS_HasSIMD128, // MUL_I32x4 = 1301
    CEFBS_HasSIMD128, // MUL_I32x4_S = 1302
    CEFBS_None, // MUL_I64 = 1303
    CEFBS_None, // MUL_I64_S = 1304
    CEFBS_HasSIMD128, // MUL_I64x2 = 1305
    CEFBS_HasSIMD128, // MUL_I64x2_S = 1306
    CEFBS_HasSIMD128, // NARROW_S_I16x8 = 1307
    CEFBS_HasSIMD128, // NARROW_S_I16x8_S = 1308
    CEFBS_HasSIMD128, // NARROW_S_I8x16 = 1309
    CEFBS_HasSIMD128, // NARROW_S_I8x16_S = 1310
    CEFBS_HasSIMD128, // NARROW_U_I16x8 = 1311
    CEFBS_HasSIMD128, // NARROW_U_I16x8_S = 1312
    CEFBS_HasSIMD128, // NARROW_U_I8x16 = 1313
    CEFBS_HasSIMD128, // NARROW_U_I8x16_S = 1314
    CEFBS_None, // NEAREST_F32 = 1315
    CEFBS_None, // NEAREST_F32_S = 1316
    CEFBS_HasSIMD128, // NEAREST_F32x4 = 1317
    CEFBS_HasSIMD128, // NEAREST_F32x4_S = 1318
    CEFBS_None, // NEAREST_F64 = 1319
    CEFBS_None, // NEAREST_F64_S = 1320
    CEFBS_HasSIMD128, // NEAREST_F64x2 = 1321
    CEFBS_HasSIMD128, // NEAREST_F64x2_S = 1322
    CEFBS_None, // NEG_F32 = 1323
    CEFBS_None, // NEG_F32_S = 1324
    CEFBS_HasSIMD128, // NEG_F32x4 = 1325
    CEFBS_HasSIMD128, // NEG_F32x4_S = 1326
    CEFBS_None, // NEG_F64 = 1327
    CEFBS_None, // NEG_F64_S = 1328
    CEFBS_HasSIMD128, // NEG_F64x2 = 1329
    CEFBS_HasSIMD128, // NEG_F64x2_S = 1330
    CEFBS_HasSIMD128, // NEG_I16x8 = 1331
    CEFBS_HasSIMD128, // NEG_I16x8_S = 1332
    CEFBS_HasSIMD128, // NEG_I32x4 = 1333
    CEFBS_HasSIMD128, // NEG_I32x4_S = 1334
    CEFBS_HasSIMD128, // NEG_I64x2 = 1335
    CEFBS_HasSIMD128, // NEG_I64x2_S = 1336
    CEFBS_HasSIMD128, // NEG_I8x16 = 1337
    CEFBS_HasSIMD128, // NEG_I8x16_S = 1338
    CEFBS_None, // NE_F32 = 1339
    CEFBS_None, // NE_F32_S = 1340
    CEFBS_HasSIMD128, // NE_F32x4 = 1341
    CEFBS_HasSIMD128, // NE_F32x4_S = 1342
    CEFBS_None, // NE_F64 = 1343
    CEFBS_None, // NE_F64_S = 1344
    CEFBS_HasSIMD128, // NE_F64x2 = 1345
    CEFBS_HasSIMD128, // NE_F64x2_S = 1346
    CEFBS_HasSIMD128, // NE_I16x8 = 1347
    CEFBS_HasSIMD128, // NE_I16x8_S = 1348
    CEFBS_None, // NE_I32 = 1349
    CEFBS_None, // NE_I32_S = 1350
    CEFBS_HasSIMD128, // NE_I32x4 = 1351
    CEFBS_HasSIMD128, // NE_I32x4_S = 1352
    CEFBS_None, // NE_I64 = 1353
    CEFBS_None, // NE_I64_S = 1354
    CEFBS_HasSIMD128, // NE_I64x2 = 1355
    CEFBS_HasSIMD128, // NE_I64x2_S = 1356
    CEFBS_HasSIMD128, // NE_I8x16 = 1357
    CEFBS_HasSIMD128, // NE_I8x16_S = 1358
    CEFBS_HasRelaxedSIMD, // NMADD_F32x4 = 1359
    CEFBS_HasRelaxedSIMD, // NMADD_F32x4_S = 1360
    CEFBS_HasRelaxedSIMD, // NMADD_F64x2 = 1361
    CEFBS_HasRelaxedSIMD, // NMADD_F64x2_S = 1362
    CEFBS_None, // NOP = 1363
    CEFBS_None, // NOP_S = 1364
    CEFBS_HasSIMD128, // NOT = 1365
    CEFBS_HasSIMD128, // NOT_S = 1366
    CEFBS_HasSIMD128, // OR = 1367
    CEFBS_None, // OR_I32 = 1368
    CEFBS_None, // OR_I32_S = 1369
    CEFBS_None, // OR_I64 = 1370
    CEFBS_None, // OR_I64_S = 1371
    CEFBS_HasSIMD128, // OR_S = 1372
    CEFBS_HasSIMD128, // PMAX_F32x4 = 1373
    CEFBS_HasSIMD128, // PMAX_F32x4_S = 1374
    CEFBS_HasSIMD128, // PMAX_F64x2 = 1375
    CEFBS_HasSIMD128, // PMAX_F64x2_S = 1376
    CEFBS_HasSIMD128, // PMIN_F32x4 = 1377
    CEFBS_HasSIMD128, // PMIN_F32x4_S = 1378
    CEFBS_HasSIMD128, // PMIN_F64x2 = 1379
    CEFBS_HasSIMD128, // PMIN_F64x2_S = 1380
    CEFBS_None, // POPCNT_I32 = 1381
    CEFBS_None, // POPCNT_I32_S = 1382
    CEFBS_None, // POPCNT_I64 = 1383
    CEFBS_None, // POPCNT_I64_S = 1384
    CEFBS_HasSIMD128, // POPCNT_I8x16 = 1385
    CEFBS_HasSIMD128, // POPCNT_I8x16_S = 1386
    CEFBS_HasSIMD128, // Q15MULR_SAT_S_I16x8 = 1387
    CEFBS_HasSIMD128, // Q15MULR_SAT_S_I16x8_S = 1388
    CEFBS_HasReferenceTypes, // REF_IS_NULL_EXTERNREF = 1389
    CEFBS_HasReferenceTypes, // REF_IS_NULL_EXTERNREF_S = 1390
    CEFBS_HasReferenceTypes, // REF_IS_NULL_FUNCREF = 1391
    CEFBS_HasReferenceTypes, // REF_IS_NULL_FUNCREF_S = 1392
    CEFBS_HasReferenceTypes, // REF_NULL_EXTERNREF = 1393
    CEFBS_HasReferenceTypes, // REF_NULL_EXTERNREF_S = 1394
    CEFBS_HasReferenceTypes, // REF_NULL_FUNCREF = 1395
    CEFBS_HasReferenceTypes, // REF_NULL_FUNCREF_S = 1396
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT = 1397
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_ADD = 1398
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_ADD_S = 1399
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_BFLOAT = 1400
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_BFLOAT_S = 1401
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_S = 1402
    CEFBS_HasRelaxedSIMD, // RELAXED_Q15MULR_S_I16x8 = 1403
    CEFBS_HasRelaxedSIMD, // RELAXED_Q15MULR_S_I16x8_S = 1404
    CEFBS_HasRelaxedSIMD, // RELAXED_SWIZZLE = 1405
    CEFBS_HasRelaxedSIMD, // RELAXED_SWIZZLE_S = 1406
    CEFBS_None, // REM_S_I32 = 1407
    CEFBS_None, // REM_S_I32_S = 1408
    CEFBS_None, // REM_S_I64 = 1409
    CEFBS_None, // REM_S_I64_S = 1410
    CEFBS_None, // REM_U_I32 = 1411
    CEFBS_None, // REM_U_I32_S = 1412
    CEFBS_None, // REM_U_I64 = 1413
    CEFBS_None, // REM_U_I64_S = 1414
    CEFBS_HasSIMD128, // REPLACE_LANE_F32x4 = 1415
    CEFBS_HasSIMD128, // REPLACE_LANE_F32x4_S = 1416
    CEFBS_HasSIMD128, // REPLACE_LANE_F64x2 = 1417
    CEFBS_HasSIMD128, // REPLACE_LANE_F64x2_S = 1418
    CEFBS_HasSIMD128, // REPLACE_LANE_I16x8 = 1419
    CEFBS_HasSIMD128, // REPLACE_LANE_I16x8_S = 1420
    CEFBS_HasSIMD128, // REPLACE_LANE_I32x4 = 1421
    CEFBS_HasSIMD128, // REPLACE_LANE_I32x4_S = 1422
    CEFBS_HasSIMD128, // REPLACE_LANE_I64x2 = 1423
    CEFBS_HasSIMD128, // REPLACE_LANE_I64x2_S = 1424
    CEFBS_HasSIMD128, // REPLACE_LANE_I8x16 = 1425
    CEFBS_HasSIMD128, // REPLACE_LANE_I8x16_S = 1426
    CEFBS_HasExceptionHandling, // RETHROW = 1427
    CEFBS_HasExceptionHandling, // RETHROW_S = 1428
    CEFBS_None, // RETURN = 1429
    CEFBS_None, // RETURN_S = 1430
    CEFBS_HasTailCall, // RET_CALL = 1431
    CEFBS_HasTailCall, // RET_CALL_INDIRECT = 1432
    CEFBS_HasTailCall, // RET_CALL_INDIRECT_S = 1433
    CEFBS_HasTailCall, // RET_CALL_S = 1434
    CEFBS_None, // ROTL_I32 = 1435
    CEFBS_None, // ROTL_I32_S = 1436
    CEFBS_None, // ROTL_I64 = 1437
    CEFBS_None, // ROTL_I64_S = 1438
    CEFBS_None, // ROTR_I32 = 1439
    CEFBS_None, // ROTR_I32_S = 1440
    CEFBS_None, // ROTR_I64 = 1441
    CEFBS_None, // ROTR_I64_S = 1442
    CEFBS_HasReferenceTypes, // SELECT_EXTERNREF = 1443
    CEFBS_HasReferenceTypes, // SELECT_EXTERNREF_S = 1444
    CEFBS_None, // SELECT_F32 = 1445
    CEFBS_None, // SELECT_F32_S = 1446
    CEFBS_None, // SELECT_F64 = 1447
    CEFBS_None, // SELECT_F64_S = 1448
    CEFBS_HasReferenceTypes, // SELECT_FUNCREF = 1449
    CEFBS_HasReferenceTypes, // SELECT_FUNCREF_S = 1450
    CEFBS_None, // SELECT_I32 = 1451
    CEFBS_None, // SELECT_I32_S = 1452
    CEFBS_None, // SELECT_I64 = 1453
    CEFBS_None, // SELECT_I64_S = 1454
    CEFBS_None, // SELECT_V128 = 1455
    CEFBS_None, // SELECT_V128_S = 1456
    CEFBS_HasSIMD128, // SHL_I16x8 = 1457
    CEFBS_HasSIMD128, // SHL_I16x8_S = 1458
    CEFBS_None, // SHL_I32 = 1459
    CEFBS_None, // SHL_I32_S = 1460
    CEFBS_HasSIMD128, // SHL_I32x4 = 1461
    CEFBS_HasSIMD128, // SHL_I32x4_S = 1462
    CEFBS_None, // SHL_I64 = 1463
    CEFBS_None, // SHL_I64_S = 1464
    CEFBS_HasSIMD128, // SHL_I64x2 = 1465
    CEFBS_HasSIMD128, // SHL_I64x2_S = 1466
    CEFBS_HasSIMD128, // SHL_I8x16 = 1467
    CEFBS_HasSIMD128, // SHL_I8x16_S = 1468
    CEFBS_HasSIMD128, // SHR_S_I16x8 = 1469
    CEFBS_HasSIMD128, // SHR_S_I16x8_S = 1470
    CEFBS_None, // SHR_S_I32 = 1471
    CEFBS_None, // SHR_S_I32_S = 1472
    CEFBS_HasSIMD128, // SHR_S_I32x4 = 1473
    CEFBS_HasSIMD128, // SHR_S_I32x4_S = 1474
    CEFBS_None, // SHR_S_I64 = 1475
    CEFBS_None, // SHR_S_I64_S = 1476
    CEFBS_HasSIMD128, // SHR_S_I64x2 = 1477
    CEFBS_HasSIMD128, // SHR_S_I64x2_S = 1478
    CEFBS_HasSIMD128, // SHR_S_I8x16 = 1479
    CEFBS_HasSIMD128, // SHR_S_I8x16_S = 1480
    CEFBS_HasSIMD128, // SHR_U_I16x8 = 1481
    CEFBS_HasSIMD128, // SHR_U_I16x8_S = 1482
    CEFBS_None, // SHR_U_I32 = 1483
    CEFBS_None, // SHR_U_I32_S = 1484
    CEFBS_HasSIMD128, // SHR_U_I32x4 = 1485
    CEFBS_HasSIMD128, // SHR_U_I32x4_S = 1486
    CEFBS_None, // SHR_U_I64 = 1487
    CEFBS_None, // SHR_U_I64_S = 1488
    CEFBS_HasSIMD128, // SHR_U_I64x2 = 1489
    CEFBS_HasSIMD128, // SHR_U_I64x2_S = 1490
    CEFBS_HasSIMD128, // SHR_U_I8x16 = 1491
    CEFBS_HasSIMD128, // SHR_U_I8x16_S = 1492
    CEFBS_HasSIMD128, // SHUFFLE = 1493
    CEFBS_HasSIMD128, // SHUFFLE_S = 1494
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F32x4 = 1495
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F32x4_S = 1496
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F64x2 = 1497
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F64x2_S = 1498
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F32x4 = 1499
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F32x4_S = 1500
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F64x2 = 1501
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F64x2_S = 1502
    CEFBS_HasSIMD128, // SPLAT_F32x4 = 1503
    CEFBS_HasSIMD128, // SPLAT_F32x4_S = 1504
    CEFBS_HasSIMD128, // SPLAT_F64x2 = 1505
    CEFBS_HasSIMD128, // SPLAT_F64x2_S = 1506
    CEFBS_HasSIMD128, // SPLAT_I16x8 = 1507
    CEFBS_HasSIMD128, // SPLAT_I16x8_S = 1508
    CEFBS_HasSIMD128, // SPLAT_I32x4 = 1509
    CEFBS_HasSIMD128, // SPLAT_I32x4_S = 1510
    CEFBS_HasSIMD128, // SPLAT_I64x2 = 1511
    CEFBS_HasSIMD128, // SPLAT_I64x2_S = 1512
    CEFBS_HasSIMD128, // SPLAT_I8x16 = 1513
    CEFBS_HasSIMD128, // SPLAT_I8x16_S = 1514
    CEFBS_None, // SQRT_F32 = 1515
    CEFBS_None, // SQRT_F32_S = 1516
    CEFBS_HasSIMD128, // SQRT_F32x4 = 1517
    CEFBS_HasSIMD128, // SQRT_F32x4_S = 1518
    CEFBS_None, // SQRT_F64 = 1519
    CEFBS_None, // SQRT_F64_S = 1520
    CEFBS_HasSIMD128, // SQRT_F64x2 = 1521
    CEFBS_HasSIMD128, // SQRT_F64x2_S = 1522
    CEFBS_None, // STORE16_I32_A32 = 1523
    CEFBS_None, // STORE16_I32_A32_S = 1524
    CEFBS_None, // STORE16_I32_A64 = 1525
    CEFBS_None, // STORE16_I32_A64_S = 1526
    CEFBS_None, // STORE16_I64_A32 = 1527
    CEFBS_None, // STORE16_I64_A32_S = 1528
    CEFBS_None, // STORE16_I64_A64 = 1529
    CEFBS_None, // STORE16_I64_A64_S = 1530
    CEFBS_None, // STORE32_I64_A32 = 1531
    CEFBS_None, // STORE32_I64_A32_S = 1532
    CEFBS_None, // STORE32_I64_A64 = 1533
    CEFBS_None, // STORE32_I64_A64_S = 1534
    CEFBS_None, // STORE8_I32_A32 = 1535
    CEFBS_None, // STORE8_I32_A32_S = 1536
    CEFBS_None, // STORE8_I32_A64 = 1537
    CEFBS_None, // STORE8_I32_A64_S = 1538
    CEFBS_None, // STORE8_I64_A32 = 1539
    CEFBS_None, // STORE8_I64_A32_S = 1540
    CEFBS_None, // STORE8_I64_A64 = 1541
    CEFBS_None, // STORE8_I64_A64_S = 1542
    CEFBS_None, // STORE_F32_A32 = 1543
    CEFBS_None, // STORE_F32_A32_S = 1544
    CEFBS_None, // STORE_F32_A64 = 1545
    CEFBS_None, // STORE_F32_A64_S = 1546
    CEFBS_None, // STORE_F64_A32 = 1547
    CEFBS_None, // STORE_F64_A32_S = 1548
    CEFBS_None, // STORE_F64_A64 = 1549
    CEFBS_None, // STORE_F64_A64_S = 1550
    CEFBS_None, // STORE_I32_A32 = 1551
    CEFBS_None, // STORE_I32_A32_S = 1552
    CEFBS_None, // STORE_I32_A64 = 1553
    CEFBS_None, // STORE_I32_A64_S = 1554
    CEFBS_None, // STORE_I64_A32 = 1555
    CEFBS_None, // STORE_I64_A32_S = 1556
    CEFBS_None, // STORE_I64_A64 = 1557
    CEFBS_None, // STORE_I64_A64_S = 1558
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A32 = 1559
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A32_S = 1560
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A64 = 1561
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A64_S = 1562
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A32 = 1563
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A32_S = 1564
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A64 = 1565
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A64_S = 1566
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A32 = 1567
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A32_S = 1568
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A64 = 1569
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A64_S = 1570
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A32 = 1571
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A32_S = 1572
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A64 = 1573
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A64_S = 1574
    CEFBS_HasSIMD128, // STORE_V128_A32 = 1575
    CEFBS_HasSIMD128, // STORE_V128_A32_S = 1576
    CEFBS_HasSIMD128, // STORE_V128_A64 = 1577
    CEFBS_HasSIMD128, // STORE_V128_A64_S = 1578
    CEFBS_None, // SUB_F32 = 1579
    CEFBS_None, // SUB_F32_S = 1580
    CEFBS_HasSIMD128, // SUB_F32x4 = 1581
    CEFBS_HasSIMD128, // SUB_F32x4_S = 1582
    CEFBS_None, // SUB_F64 = 1583
    CEFBS_None, // SUB_F64_S = 1584
    CEFBS_HasSIMD128, // SUB_F64x2 = 1585
    CEFBS_HasSIMD128, // SUB_F64x2_S = 1586
    CEFBS_HasSIMD128, // SUB_I16x8 = 1587
    CEFBS_HasSIMD128, // SUB_I16x8_S = 1588
    CEFBS_None, // SUB_I32 = 1589
    CEFBS_None, // SUB_I32_S = 1590
    CEFBS_HasSIMD128, // SUB_I32x4 = 1591
    CEFBS_HasSIMD128, // SUB_I32x4_S = 1592
    CEFBS_None, // SUB_I64 = 1593
    CEFBS_None, // SUB_I64_S = 1594
    CEFBS_HasSIMD128, // SUB_I64x2 = 1595
    CEFBS_HasSIMD128, // SUB_I64x2_S = 1596
    CEFBS_HasSIMD128, // SUB_I8x16 = 1597
    CEFBS_HasSIMD128, // SUB_I8x16_S = 1598
    CEFBS_HasSIMD128, // SUB_SAT_S_I16x8 = 1599
    CEFBS_HasSIMD128, // SUB_SAT_S_I16x8_S = 1600
    CEFBS_HasSIMD128, // SUB_SAT_S_I8x16 = 1601
    CEFBS_HasSIMD128, // SUB_SAT_S_I8x16_S = 1602
    CEFBS_HasSIMD128, // SUB_SAT_U_I16x8 = 1603
    CEFBS_HasSIMD128, // SUB_SAT_U_I16x8_S = 1604
    CEFBS_HasSIMD128, // SUB_SAT_U_I8x16 = 1605
    CEFBS_HasSIMD128, // SUB_SAT_U_I8x16_S = 1606
    CEFBS_HasSIMD128, // SWIZZLE = 1607
    CEFBS_HasSIMD128, // SWIZZLE_S = 1608
    CEFBS_HasReferenceTypes, // TABLE_COPY = 1609
    CEFBS_HasReferenceTypes, // TABLE_COPY_S = 1610
    CEFBS_HasReferenceTypes, // TABLE_FILL_EXTERNREF = 1611
    CEFBS_HasReferenceTypes, // TABLE_FILL_EXTERNREF_S = 1612
    CEFBS_HasReferenceTypes, // TABLE_FILL_FUNCREF = 1613
    CEFBS_HasReferenceTypes, // TABLE_FILL_FUNCREF_S = 1614
    CEFBS_HasReferenceTypes, // TABLE_GET_EXTERNREF = 1615
    CEFBS_HasReferenceTypes, // TABLE_GET_EXTERNREF_S = 1616
    CEFBS_HasReferenceTypes, // TABLE_GET_FUNCREF = 1617
    CEFBS_HasReferenceTypes, // TABLE_GET_FUNCREF_S = 1618
    CEFBS_HasReferenceTypes, // TABLE_GROW_EXTERNREF = 1619
    CEFBS_HasReferenceTypes, // TABLE_GROW_EXTERNREF_S = 1620
    CEFBS_HasReferenceTypes, // TABLE_GROW_FUNCREF = 1621
    CEFBS_HasReferenceTypes, // TABLE_GROW_FUNCREF_S = 1622
    CEFBS_HasReferenceTypes, // TABLE_SET_EXTERNREF = 1623
    CEFBS_HasReferenceTypes, // TABLE_SET_EXTERNREF_S = 1624
    CEFBS_HasReferenceTypes, // TABLE_SET_FUNCREF = 1625
    CEFBS_HasReferenceTypes, // TABLE_SET_FUNCREF_S = 1626
    CEFBS_HasReferenceTypes, // TABLE_SIZE = 1627
    CEFBS_HasReferenceTypes, // TABLE_SIZE_S = 1628
    CEFBS_HasReferenceTypes, // TEE_EXTERNREF = 1629
    CEFBS_HasReferenceTypes, // TEE_EXTERNREF_S = 1630
    CEFBS_None, // TEE_F32 = 1631
    CEFBS_None, // TEE_F32_S = 1632
    CEFBS_None, // TEE_F64 = 1633
    CEFBS_None, // TEE_F64_S = 1634
    CEFBS_HasReferenceTypes, // TEE_FUNCREF = 1635
    CEFBS_HasReferenceTypes, // TEE_FUNCREF_S = 1636
    CEFBS_None, // TEE_I32 = 1637
    CEFBS_None, // TEE_I32_S = 1638
    CEFBS_None, // TEE_I64 = 1639
    CEFBS_None, // TEE_I64_S = 1640
    CEFBS_HasSIMD128, // TEE_V128 = 1641
    CEFBS_HasSIMD128, // TEE_V128_S = 1642
    CEFBS_HasExceptionHandling, // THROW = 1643
    CEFBS_HasExceptionHandling, // THROW_S = 1644
    CEFBS_None, // TRUNC_F32 = 1645
    CEFBS_None, // TRUNC_F32_S = 1646
    CEFBS_HasSIMD128, // TRUNC_F32x4 = 1647
    CEFBS_HasSIMD128, // TRUNC_F32x4_S = 1648
    CEFBS_None, // TRUNC_F64 = 1649
    CEFBS_None, // TRUNC_F64_S = 1650
    CEFBS_HasSIMD128, // TRUNC_F64x2 = 1651
    CEFBS_HasSIMD128, // TRUNC_F64x2_S = 1652
    CEFBS_HasExceptionHandling, // TRY = 1653
    CEFBS_HasExceptionHandling, // TRY_S = 1654
    CEFBS_None, // UNREACHABLE = 1655
    CEFBS_None, // UNREACHABLE_S = 1656
    CEFBS_HasSIMD128, // XOR = 1657
    CEFBS_None, // XOR_I32 = 1658
    CEFBS_None, // XOR_I32_S = 1659
    CEFBS_None, // XOR_I64 = 1660
    CEFBS_None, // XOR_I64_S = 1661
    CEFBS_HasSIMD128, // XOR_S = 1662
    CEFBS_None, // anonymous_4396MEMORY_GROW_A32 = 1663
    CEFBS_None, // anonymous_4396MEMORY_GROW_A32_S = 1664
    CEFBS_None, // anonymous_4396MEMORY_SIZE_A32 = 1665
    CEFBS_None, // anonymous_4396MEMORY_SIZE_A32_S = 1666
    CEFBS_None, // anonymous_4397MEMORY_GROW_A64 = 1667
    CEFBS_None, // anonymous_4397MEMORY_GROW_A64_S = 1668
    CEFBS_None, // anonymous_4397MEMORY_SIZE_A64 = 1669
    CEFBS_None, // anonymous_4397MEMORY_SIZE_A64_S = 1670
    CEFBS_HasBulkMemory, // anonymous_6249DATA_DROP = 1671
    CEFBS_HasBulkMemory, // anonymous_6249DATA_DROP_S = 1672
    CEFBS_HasBulkMemory, // anonymous_6249MEMORY_COPY_A32 = 1673
    CEFBS_HasBulkMemory, // anonymous_6249MEMORY_COPY_A32_S = 1674
    CEFBS_HasBulkMemory, // anonymous_6249MEMORY_FILL_A32 = 1675
    CEFBS_HasBulkMemory, // anonymous_6249MEMORY_FILL_A32_S = 1676
    CEFBS_HasBulkMemory, // anonymous_6249MEMORY_INIT_A32 = 1677
    CEFBS_HasBulkMemory, // anonymous_6249MEMORY_INIT_A32_S = 1678
    CEFBS_HasBulkMemory, // anonymous_6250DATA_DROP = 1679
    CEFBS_HasBulkMemory, // anonymous_6250DATA_DROP_S = 1680
    CEFBS_HasBulkMemory, // anonymous_6250MEMORY_COPY_A64 = 1681
    CEFBS_HasBulkMemory, // anonymous_6250MEMORY_COPY_A64_S = 1682
    CEFBS_HasBulkMemory, // anonymous_6250MEMORY_FILL_A64 = 1683
    CEFBS_HasBulkMemory, // anonymous_6250MEMORY_FILL_A64_S = 1684
    CEFBS_HasBulkMemory, // anonymous_6250MEMORY_INIT_A64 = 1685
    CEFBS_HasBulkMemory, // anonymous_6250MEMORY_INIT_A64_S = 1686
    CEFBS_HasSIMD128, // convert_low_s_F64x2 = 1687
    CEFBS_HasSIMD128, // convert_low_s_F64x2_S = 1688
    CEFBS_HasSIMD128, // convert_low_u_F64x2 = 1689
    CEFBS_HasSIMD128, // convert_low_u_F64x2_S = 1690
    CEFBS_HasSIMD128, // demote_zero_F32x4 = 1691
    CEFBS_HasSIMD128, // demote_zero_F32x4_S = 1692
    CEFBS_HasSIMD128, // extend_high_s_I16x8 = 1693
    CEFBS_HasSIMD128, // extend_high_s_I16x8_S = 1694
    CEFBS_HasSIMD128, // extend_high_s_I32x4 = 1695
    CEFBS_HasSIMD128, // extend_high_s_I32x4_S = 1696
    CEFBS_HasSIMD128, // extend_high_s_I64x2 = 1697
    CEFBS_HasSIMD128, // extend_high_s_I64x2_S = 1698
    CEFBS_HasSIMD128, // extend_high_u_I16x8 = 1699
    CEFBS_HasSIMD128, // extend_high_u_I16x8_S = 1700
    CEFBS_HasSIMD128, // extend_high_u_I32x4 = 1701
    CEFBS_HasSIMD128, // extend_high_u_I32x4_S = 1702
    CEFBS_HasSIMD128, // extend_high_u_I64x2 = 1703
    CEFBS_HasSIMD128, // extend_high_u_I64x2_S = 1704
    CEFBS_HasSIMD128, // extend_low_s_I16x8 = 1705
    CEFBS_HasSIMD128, // extend_low_s_I16x8_S = 1706
    CEFBS_HasSIMD128, // extend_low_s_I32x4 = 1707
    CEFBS_HasSIMD128, // extend_low_s_I32x4_S = 1708
    CEFBS_HasSIMD128, // extend_low_s_I64x2 = 1709
    CEFBS_HasSIMD128, // extend_low_s_I64x2_S = 1710
    CEFBS_HasSIMD128, // extend_low_u_I16x8 = 1711
    CEFBS_HasSIMD128, // extend_low_u_I16x8_S = 1712
    CEFBS_HasSIMD128, // extend_low_u_I32x4 = 1713
    CEFBS_HasSIMD128, // extend_low_u_I32x4_S = 1714
    CEFBS_HasSIMD128, // extend_low_u_I64x2 = 1715
    CEFBS_HasSIMD128, // extend_low_u_I64x2_S = 1716
    CEFBS_HasSIMD128, // fp_to_sint_I32x4 = 1717
    CEFBS_HasSIMD128, // fp_to_sint_I32x4_S = 1718
    CEFBS_HasSIMD128, // fp_to_uint_I32x4 = 1719
    CEFBS_HasSIMD128, // fp_to_uint_I32x4_S = 1720
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I16x8 = 1721
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I16x8_S = 1722
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I32x4 = 1723
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I32x4_S = 1724
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I16x8 = 1725
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I16x8_S = 1726
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I32x4 = 1727
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I32x4_S = 1728
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_I32x4 = 1729
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_I32x4_S = 1730
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_zero_I32x4 = 1731
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_zero_I32x4_S = 1732
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_I32x4 = 1733
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_I32x4_S = 1734
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_zero_I32x4 = 1735
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_zero_I32x4_S = 1736
    CEFBS_HasSIMD128, // promote_low_F64x2 = 1737
    CEFBS_HasSIMD128, // promote_low_F64x2_S = 1738
    CEFBS_HasSIMD128, // sint_to_fp_F32x4 = 1739
    CEFBS_HasSIMD128, // sint_to_fp_F32x4_S = 1740
    CEFBS_HasSIMD128, // trunc_sat_zero_s_I32x4 = 1741
    CEFBS_HasSIMD128, // trunc_sat_zero_s_I32x4_S = 1742
    CEFBS_HasSIMD128, // trunc_sat_zero_u_I32x4 = 1743
    CEFBS_HasSIMD128, // trunc_sat_zero_u_I32x4_S = 1744
    CEFBS_HasSIMD128, // uint_to_fp_F32x4 = 1745
    CEFBS_HasSIMD128, // uint_to_fp_F32x4_S = 1746
  };

  assert(Opcode < 1747);
  FeatureBitset AvailableFeatures = computeAvailableFeatures(Features);
  const FeatureBitset &RequiredFeatures = FeatureBitsets[RequiredFeaturesRefs[Opcode]];
  FeatureBitset MissingFeatures =
      (AvailableFeatures & RequiredFeatures) ^
      RequiredFeatures;
  if (MissingFeatures.any()) {
    std::ostringstream Msg;
    Msg << "Attempting to emit " << &WebAssemblyInstrNameData[WebAssemblyInstrNameIndices[Opcode]]
        << " instruction but the ";
    for (unsigned i = 0, e = MissingFeatures.size(); i != e; ++i)
      if (MissingFeatures.test(i))
        Msg << SubtargetFeatureNames[i] << " ";
    Msg << "predicate(s) are not met";
    report_fatal_error(Msg.str().c_str());
  }
#endif // NDEBUG
}
} // end namespace WebAssembly_MC
} // end namespace llvm
#endif // ENABLE_INSTR_PREDICATE_VERIFIER

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace WebAssembly {

enum IsWasm64 {
	IsWasm64_1
};

enum StackBased {
	StackBased_0,
	StackBased_1
};

// getRegisterOpcode
LLVM_READONLY
int getRegisterOpcode(uint16_t Opcode) {
static const uint16_t getRegisterOpcodeTable[][2] = {
  { WebAssembly::CALL_PARAMS_S, WebAssembly::CALL_PARAMS },
  { WebAssembly::CALL_RESULTS_S, WebAssembly::CALL_RESULTS },
  { WebAssembly::CATCHRET_S, WebAssembly::CATCHRET },
  { WebAssembly::CLEANUPRET_S, WebAssembly::CLEANUPRET },
  { WebAssembly::COMPILER_FENCE_S, WebAssembly::COMPILER_FENCE },
  { WebAssembly::RET_CALL_RESULTS_S, WebAssembly::RET_CALL_RESULTS },
  { WebAssembly::ABS_F32_S, WebAssembly::ABS_F32 },
  { WebAssembly::ABS_F32x4_S, WebAssembly::ABS_F32x4 },
  { WebAssembly::ABS_F64_S, WebAssembly::ABS_F64 },
  { WebAssembly::ABS_F64x2_S, WebAssembly::ABS_F64x2 },
  { WebAssembly::ABS_I16x8_S, WebAssembly::ABS_I16x8 },
  { WebAssembly::ABS_I32x4_S, WebAssembly::ABS_I32x4 },
  { WebAssembly::ABS_I64x2_S, WebAssembly::ABS_I64x2 },
  { WebAssembly::ABS_I8x16_S, WebAssembly::ABS_I8x16 },
  { WebAssembly::ADD_F32_S, WebAssembly::ADD_F32 },
  { WebAssembly::ADD_F32x4_S, WebAssembly::ADD_F32x4 },
  { WebAssembly::ADD_F64_S, WebAssembly::ADD_F64 },
  { WebAssembly::ADD_F64x2_S, WebAssembly::ADD_F64x2 },
  { WebAssembly::ADD_I16x8_S, WebAssembly::ADD_I16x8 },
  { WebAssembly::ADD_I32_S, WebAssembly::ADD_I32 },
  { WebAssembly::ADD_I32x4_S, WebAssembly::ADD_I32x4 },
  { WebAssembly::ADD_I64_S, WebAssembly::ADD_I64 },
  { WebAssembly::ADD_I64x2_S, WebAssembly::ADD_I64x2 },
  { WebAssembly::ADD_I8x16_S, WebAssembly::ADD_I8x16 },
  { WebAssembly::ADD_SAT_S_I16x8_S, WebAssembly::ADD_SAT_S_I16x8 },
  { WebAssembly::ADD_SAT_S_I8x16_S, WebAssembly::ADD_SAT_S_I8x16 },
  { WebAssembly::ADD_SAT_U_I16x8_S, WebAssembly::ADD_SAT_U_I16x8 },
  { WebAssembly::ADD_SAT_U_I8x16_S, WebAssembly::ADD_SAT_U_I8x16 },
  { WebAssembly::ADJCALLSTACKDOWN_S, WebAssembly::ADJCALLSTACKDOWN },
  { WebAssembly::ADJCALLSTACKUP_S, WebAssembly::ADJCALLSTACKUP },
  { WebAssembly::ALLTRUE_I16x8_S, WebAssembly::ALLTRUE_I16x8 },
  { WebAssembly::ALLTRUE_I32x4_S, WebAssembly::ALLTRUE_I32x4 },
  { WebAssembly::ALLTRUE_I64x2_S, WebAssembly::ALLTRUE_I64x2 },
  { WebAssembly::ALLTRUE_I8x16_S, WebAssembly::ALLTRUE_I8x16 },
  { WebAssembly::ANDNOT_S, WebAssembly::ANDNOT },
  { WebAssembly::AND_I32_S, WebAssembly::AND_I32 },
  { WebAssembly::AND_I64_S, WebAssembly::AND_I64 },
  { WebAssembly::AND_S, WebAssembly::AND },
  { WebAssembly::ANYTRUE_S, WebAssembly::ANYTRUE },
  { WebAssembly::ARGUMENT_externref_S, WebAssembly::ARGUMENT_externref },
  { WebAssembly::ARGUMENT_f32_S, WebAssembly::ARGUMENT_f32 },
  { WebAssembly::ARGUMENT_f64_S, WebAssembly::ARGUMENT_f64 },
  { WebAssembly::ARGUMENT_funcref_S, WebAssembly::ARGUMENT_funcref },
  { WebAssembly::ARGUMENT_i32_S, WebAssembly::ARGUMENT_i32 },
  { WebAssembly::ARGUMENT_i64_S, WebAssembly::ARGUMENT_i64 },
  { WebAssembly::ARGUMENT_v16i8_S, WebAssembly::ARGUMENT_v16i8 },
  { WebAssembly::ARGUMENT_v2f64_S, WebAssembly::ARGUMENT_v2f64 },
  { WebAssembly::ARGUMENT_v2i64_S, WebAssembly::ARGUMENT_v2i64 },
  { WebAssembly::ARGUMENT_v4f32_S, WebAssembly::ARGUMENT_v4f32 },
  { WebAssembly::ARGUMENT_v4i32_S, WebAssembly::ARGUMENT_v4i32 },
  { WebAssembly::ARGUMENT_v8i16_S, WebAssembly::ARGUMENT_v8i16 },
  { WebAssembly::ATOMIC_FENCE_S, WebAssembly::ATOMIC_FENCE },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32_S, WebAssembly::ATOMIC_LOAD16_U_I32_A32 },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A64_S, WebAssembly::ATOMIC_LOAD16_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32_S, WebAssembly::ATOMIC_LOAD16_U_I64_A32 },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A64_S, WebAssembly::ATOMIC_LOAD16_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32_S, WebAssembly::ATOMIC_LOAD32_U_I64_A32 },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A64_S, WebAssembly::ATOMIC_LOAD32_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32_S, WebAssembly::ATOMIC_LOAD8_U_I32_A32 },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A64_S, WebAssembly::ATOMIC_LOAD8_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32_S, WebAssembly::ATOMIC_LOAD8_U_I64_A32 },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A64_S, WebAssembly::ATOMIC_LOAD8_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD_I32_A32_S, WebAssembly::ATOMIC_LOAD_I32_A32 },
  { WebAssembly::ATOMIC_LOAD_I32_A64_S, WebAssembly::ATOMIC_LOAD_I32_A64 },
  { WebAssembly::ATOMIC_LOAD_I64_A32_S, WebAssembly::ATOMIC_LOAD_I64_A32 },
  { WebAssembly::ATOMIC_LOAD_I64_A64_S, WebAssembly::ATOMIC_LOAD_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW_ADD_I32_A32 },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A64_S, WebAssembly::ATOMIC_RMW_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32_S, WebAssembly::ATOMIC_RMW_AND_I32_A32 },
  { WebAssembly::ATOMIC_RMW_AND_I32_A64_S, WebAssembly::ATOMIC_RMW_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32_S, WebAssembly::ATOMIC_RMW_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW_AND_I64_A64_S, WebAssembly::ATOMIC_RMW_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32_S, WebAssembly::ATOMIC_RMW_OR_I32_A32 },
  { WebAssembly::ATOMIC_RMW_OR_I32_A64_S, WebAssembly::ATOMIC_RMW_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32_S, WebAssembly::ATOMIC_RMW_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW_OR_I64_A64_S, WebAssembly::ATOMIC_RMW_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW_SUB_I32_A32 },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A64_S, WebAssembly::ATOMIC_RMW_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S, WebAssembly::ATOMIC_RMW_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW_XOR_I32_A32 },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A64_S, WebAssembly::ATOMIC_RMW_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW_XOR_I64_A64 },
  { WebAssembly::ATOMIC_STORE16_I32_A32_S, WebAssembly::ATOMIC_STORE16_I32_A32 },
  { WebAssembly::ATOMIC_STORE16_I32_A64_S, WebAssembly::ATOMIC_STORE16_I32_A64 },
  { WebAssembly::ATOMIC_STORE16_I64_A32_S, WebAssembly::ATOMIC_STORE16_I64_A32 },
  { WebAssembly::ATOMIC_STORE16_I64_A64_S, WebAssembly::ATOMIC_STORE16_I64_A64 },
  { WebAssembly::ATOMIC_STORE32_I64_A32_S, WebAssembly::ATOMIC_STORE32_I64_A32 },
  { WebAssembly::ATOMIC_STORE32_I64_A64_S, WebAssembly::ATOMIC_STORE32_I64_A64 },
  { WebAssembly::ATOMIC_STORE8_I32_A32_S, WebAssembly::ATOMIC_STORE8_I32_A32 },
  { WebAssembly::ATOMIC_STORE8_I32_A64_S, WebAssembly::ATOMIC_STORE8_I32_A64 },
  { WebAssembly::ATOMIC_STORE8_I64_A32_S, WebAssembly::ATOMIC_STORE8_I64_A32 },
  { WebAssembly::ATOMIC_STORE8_I64_A64_S, WebAssembly::ATOMIC_STORE8_I64_A64 },
  { WebAssembly::ATOMIC_STORE_I32_A32_S, WebAssembly::ATOMIC_STORE_I32_A32 },
  { WebAssembly::ATOMIC_STORE_I32_A64_S, WebAssembly::ATOMIC_STORE_I32_A64 },
  { WebAssembly::ATOMIC_STORE_I64_A32_S, WebAssembly::ATOMIC_STORE_I64_A32 },
  { WebAssembly::ATOMIC_STORE_I64_A64_S, WebAssembly::ATOMIC_STORE_I64_A64 },
  { WebAssembly::AVGR_U_I16x8_S, WebAssembly::AVGR_U_I16x8 },
  { WebAssembly::AVGR_U_I8x16_S, WebAssembly::AVGR_U_I8x16 },
  { WebAssembly::BITMASK_I16x8_S, WebAssembly::BITMASK_I16x8 },
  { WebAssembly::BITMASK_I32x4_S, WebAssembly::BITMASK_I32x4 },
  { WebAssembly::BITMASK_I64x2_S, WebAssembly::BITMASK_I64x2 },
  { WebAssembly::BITMASK_I8x16_S, WebAssembly::BITMASK_I8x16 },
  { WebAssembly::BITSELECT_S, WebAssembly::BITSELECT },
  { WebAssembly::BLOCK_S, WebAssembly::BLOCK },
  { WebAssembly::BR_IF_S, WebAssembly::BR_IF },
  { WebAssembly::BR_S, WebAssembly::BR },
  { WebAssembly::BR_TABLE_I32_S, WebAssembly::BR_TABLE_I32 },
  { WebAssembly::BR_TABLE_I64_S, WebAssembly::BR_TABLE_I64 },
  { WebAssembly::BR_UNLESS_S, WebAssembly::BR_UNLESS },
  { WebAssembly::CALL_INDIRECT_S, WebAssembly::CALL_INDIRECT },
  { WebAssembly::CALL_S, WebAssembly::CALL },
  { WebAssembly::CATCH_ALL_S, WebAssembly::CATCH_ALL },
  { WebAssembly::CATCH_S, WebAssembly::CATCH },
  { WebAssembly::CEIL_F32_S, WebAssembly::CEIL_F32 },
  { WebAssembly::CEIL_F32x4_S, WebAssembly::CEIL_F32x4 },
  { WebAssembly::CEIL_F64_S, WebAssembly::CEIL_F64 },
  { WebAssembly::CEIL_F64x2_S, WebAssembly::CEIL_F64x2 },
  { WebAssembly::CLZ_I32_S, WebAssembly::CLZ_I32 },
  { WebAssembly::CLZ_I64_S, WebAssembly::CLZ_I64 },
  { WebAssembly::CONST_F32_S, WebAssembly::CONST_F32 },
  { WebAssembly::CONST_F64_S, WebAssembly::CONST_F64 },
  { WebAssembly::CONST_I32_S, WebAssembly::CONST_I32 },
  { WebAssembly::CONST_I64_S, WebAssembly::CONST_I64 },
  { WebAssembly::CONST_V128_F32x4_S, WebAssembly::CONST_V128_F32x4 },
  { WebAssembly::CONST_V128_F64x2_S, WebAssembly::CONST_V128_F64x2 },
  { WebAssembly::CONST_V128_I16x8_S, WebAssembly::CONST_V128_I16x8 },
  { WebAssembly::CONST_V128_I32x4_S, WebAssembly::CONST_V128_I32x4 },
  { WebAssembly::CONST_V128_I64x2_S, WebAssembly::CONST_V128_I64x2 },
  { WebAssembly::CONST_V128_I8x16_S, WebAssembly::CONST_V128_I8x16 },
  { WebAssembly::COPYSIGN_F32_S, WebAssembly::COPYSIGN_F32 },
  { WebAssembly::COPYSIGN_F64_S, WebAssembly::COPYSIGN_F64 },
  { WebAssembly::COPY_EXTERNREF_S, WebAssembly::COPY_EXTERNREF },
  { WebAssembly::COPY_F32_S, WebAssembly::COPY_F32 },
  { WebAssembly::COPY_F64_S, WebAssembly::COPY_F64 },
  { WebAssembly::COPY_FUNCREF_S, WebAssembly::COPY_FUNCREF },
  { WebAssembly::COPY_I32_S, WebAssembly::COPY_I32 },
  { WebAssembly::COPY_I64_S, WebAssembly::COPY_I64 },
  { WebAssembly::COPY_V128_S, WebAssembly::COPY_V128 },
  { WebAssembly::CTZ_I32_S, WebAssembly::CTZ_I32 },
  { WebAssembly::CTZ_I64_S, WebAssembly::CTZ_I64 },
  { WebAssembly::DEBUG_UNREACHABLE_S, WebAssembly::DEBUG_UNREACHABLE },
  { WebAssembly::DELEGATE_S, WebAssembly::DELEGATE },
  { WebAssembly::DIV_F32_S, WebAssembly::DIV_F32 },
  { WebAssembly::DIV_F32x4_S, WebAssembly::DIV_F32x4 },
  { WebAssembly::DIV_F64_S, WebAssembly::DIV_F64 },
  { WebAssembly::DIV_F64x2_S, WebAssembly::DIV_F64x2 },
  { WebAssembly::DIV_S_I32_S, WebAssembly::DIV_S_I32 },
  { WebAssembly::DIV_S_I64_S, WebAssembly::DIV_S_I64 },
  { WebAssembly::DIV_U_I32_S, WebAssembly::DIV_U_I32 },
  { WebAssembly::DIV_U_I64_S, WebAssembly::DIV_U_I64 },
  { WebAssembly::DOT_S, WebAssembly::DOT },
  { WebAssembly::DROP_EXTERNREF_S, WebAssembly::DROP_EXTERNREF },
  { WebAssembly::DROP_F32_S, WebAssembly::DROP_F32 },
  { WebAssembly::DROP_F64_S, WebAssembly::DROP_F64 },
  { WebAssembly::DROP_FUNCREF_S, WebAssembly::DROP_FUNCREF },
  { WebAssembly::DROP_I32_S, WebAssembly::DROP_I32 },
  { WebAssembly::DROP_I64_S, WebAssembly::DROP_I64 },
  { WebAssembly::DROP_V128_S, WebAssembly::DROP_V128 },
  { WebAssembly::ELSE_S, WebAssembly::ELSE },
  { WebAssembly::END_BLOCK_S, WebAssembly::END_BLOCK },
  { WebAssembly::END_FUNCTION_S, WebAssembly::END_FUNCTION },
  { WebAssembly::END_IF_S, WebAssembly::END_IF },
  { WebAssembly::END_LOOP_S, WebAssembly::END_LOOP },
  { WebAssembly::END_S, WebAssembly::END },
  { WebAssembly::END_TRY_S, WebAssembly::END_TRY },
  { WebAssembly::EQZ_I32_S, WebAssembly::EQZ_I32 },
  { WebAssembly::EQZ_I64_S, WebAssembly::EQZ_I64 },
  { WebAssembly::EQ_F32_S, WebAssembly::EQ_F32 },
  { WebAssembly::EQ_F32x4_S, WebAssembly::EQ_F32x4 },
  { WebAssembly::EQ_F64_S, WebAssembly::EQ_F64 },
  { WebAssembly::EQ_F64x2_S, WebAssembly::EQ_F64x2 },
  { WebAssembly::EQ_I16x8_S, WebAssembly::EQ_I16x8 },
  { WebAssembly::EQ_I32_S, WebAssembly::EQ_I32 },
  { WebAssembly::EQ_I32x4_S, WebAssembly::EQ_I32x4 },
  { WebAssembly::EQ_I64_S, WebAssembly::EQ_I64 },
  { WebAssembly::EQ_I64x2_S, WebAssembly::EQ_I64x2 },
  { WebAssembly::EQ_I8x16_S, WebAssembly::EQ_I8x16 },
  { WebAssembly::EXTMUL_HIGH_S_I16x8_S, WebAssembly::EXTMUL_HIGH_S_I16x8 },
  { WebAssembly::EXTMUL_HIGH_S_I32x4_S, WebAssembly::EXTMUL_HIGH_S_I32x4 },
  { WebAssembly::EXTMUL_HIGH_S_I64x2_S, WebAssembly::EXTMUL_HIGH_S_I64x2 },
  { WebAssembly::EXTMUL_HIGH_U_I16x8_S, WebAssembly::EXTMUL_HIGH_U_I16x8 },
  { WebAssembly::EXTMUL_HIGH_U_I32x4_S, WebAssembly::EXTMUL_HIGH_U_I32x4 },
  { WebAssembly::EXTMUL_HIGH_U_I64x2_S, WebAssembly::EXTMUL_HIGH_U_I64x2 },
  { WebAssembly::EXTMUL_LOW_S_I16x8_S, WebAssembly::EXTMUL_LOW_S_I16x8 },
  { WebAssembly::EXTMUL_LOW_S_I32x4_S, WebAssembly::EXTMUL_LOW_S_I32x4 },
  { WebAssembly::EXTMUL_LOW_S_I64x2_S, WebAssembly::EXTMUL_LOW_S_I64x2 },
  { WebAssembly::EXTMUL_LOW_U_I16x8_S, WebAssembly::EXTMUL_LOW_U_I16x8 },
  { WebAssembly::EXTMUL_LOW_U_I32x4_S, WebAssembly::EXTMUL_LOW_U_I32x4 },
  { WebAssembly::EXTMUL_LOW_U_I64x2_S, WebAssembly::EXTMUL_LOW_U_I64x2 },
  { WebAssembly::EXTRACT_LANE_F32x4_S, WebAssembly::EXTRACT_LANE_F32x4 },
  { WebAssembly::EXTRACT_LANE_F64x2_S, WebAssembly::EXTRACT_LANE_F64x2 },
  { WebAssembly::EXTRACT_LANE_I16x8_s_S, WebAssembly::EXTRACT_LANE_I16x8_s },
  { WebAssembly::EXTRACT_LANE_I16x8_u_S, WebAssembly::EXTRACT_LANE_I16x8_u },
  { WebAssembly::EXTRACT_LANE_I32x4_S, WebAssembly::EXTRACT_LANE_I32x4 },
  { WebAssembly::EXTRACT_LANE_I64x2_S, WebAssembly::EXTRACT_LANE_I64x2 },
  { WebAssembly::EXTRACT_LANE_I8x16_s_S, WebAssembly::EXTRACT_LANE_I8x16_s },
  { WebAssembly::EXTRACT_LANE_I8x16_u_S, WebAssembly::EXTRACT_LANE_I8x16_u },
  { WebAssembly::F32_CONVERT_S_I32_S, WebAssembly::F32_CONVERT_S_I32 },
  { WebAssembly::F32_CONVERT_S_I64_S, WebAssembly::F32_CONVERT_S_I64 },
  { WebAssembly::F32_CONVERT_U_I32_S, WebAssembly::F32_CONVERT_U_I32 },
  { WebAssembly::F32_CONVERT_U_I64_S, WebAssembly::F32_CONVERT_U_I64 },
  { WebAssembly::F32_DEMOTE_F64_S, WebAssembly::F32_DEMOTE_F64 },
  { WebAssembly::F32_REINTERPRET_I32_S, WebAssembly::F32_REINTERPRET_I32 },
  { WebAssembly::F64_CONVERT_S_I32_S, WebAssembly::F64_CONVERT_S_I32 },
  { WebAssembly::F64_CONVERT_S_I64_S, WebAssembly::F64_CONVERT_S_I64 },
  { WebAssembly::F64_CONVERT_U_I32_S, WebAssembly::F64_CONVERT_U_I32 },
  { WebAssembly::F64_CONVERT_U_I64_S, WebAssembly::F64_CONVERT_U_I64 },
  { WebAssembly::F64_PROMOTE_F32_S, WebAssembly::F64_PROMOTE_F32 },
  { WebAssembly::F64_REINTERPRET_I64_S, WebAssembly::F64_REINTERPRET_I64 },
  { WebAssembly::FALLTHROUGH_RETURN_S, WebAssembly::FALLTHROUGH_RETURN },
  { WebAssembly::FLOOR_F32_S, WebAssembly::FLOOR_F32 },
  { WebAssembly::FLOOR_F32x4_S, WebAssembly::FLOOR_F32x4 },
  { WebAssembly::FLOOR_F64_S, WebAssembly::FLOOR_F64 },
  { WebAssembly::FLOOR_F64x2_S, WebAssembly::FLOOR_F64x2 },
  { WebAssembly::FP_TO_SINT_I32_F32_S, WebAssembly::FP_TO_SINT_I32_F32 },
  { WebAssembly::FP_TO_SINT_I32_F64_S, WebAssembly::FP_TO_SINT_I32_F64 },
  { WebAssembly::FP_TO_SINT_I64_F32_S, WebAssembly::FP_TO_SINT_I64_F32 },
  { WebAssembly::FP_TO_SINT_I64_F64_S, WebAssembly::FP_TO_SINT_I64_F64 },
  { WebAssembly::FP_TO_UINT_I32_F32_S, WebAssembly::FP_TO_UINT_I32_F32 },
  { WebAssembly::FP_TO_UINT_I32_F64_S, WebAssembly::FP_TO_UINT_I32_F64 },
  { WebAssembly::FP_TO_UINT_I64_F32_S, WebAssembly::FP_TO_UINT_I64_F32 },
  { WebAssembly::FP_TO_UINT_I64_F64_S, WebAssembly::FP_TO_UINT_I64_F64 },
  { WebAssembly::GE_F32_S, WebAssembly::GE_F32 },
  { WebAssembly::GE_F32x4_S, WebAssembly::GE_F32x4 },
  { WebAssembly::GE_F64_S, WebAssembly::GE_F64 },
  { WebAssembly::GE_F64x2_S, WebAssembly::GE_F64x2 },
  { WebAssembly::GE_S_I16x8_S, WebAssembly::GE_S_I16x8 },
  { WebAssembly::GE_S_I32_S, WebAssembly::GE_S_I32 },
  { WebAssembly::GE_S_I32x4_S, WebAssembly::GE_S_I32x4 },
  { WebAssembly::GE_S_I64_S, WebAssembly::GE_S_I64 },
  { WebAssembly::GE_S_I64x2_S, WebAssembly::GE_S_I64x2 },
  { WebAssembly::GE_S_I8x16_S, WebAssembly::GE_S_I8x16 },
  { WebAssembly::GE_U_I16x8_S, WebAssembly::GE_U_I16x8 },
  { WebAssembly::GE_U_I32_S, WebAssembly::GE_U_I32 },
  { WebAssembly::GE_U_I32x4_S, WebAssembly::GE_U_I32x4 },
  { WebAssembly::GE_U_I64_S, WebAssembly::GE_U_I64 },
  { WebAssembly::GE_U_I8x16_S, WebAssembly::GE_U_I8x16 },
  { WebAssembly::GLOBAL_GET_EXTERNREF_S, WebAssembly::GLOBAL_GET_EXTERNREF },
  { WebAssembly::GLOBAL_GET_F32_S, WebAssembly::GLOBAL_GET_F32 },
  { WebAssembly::GLOBAL_GET_F64_S, WebAssembly::GLOBAL_GET_F64 },
  { WebAssembly::GLOBAL_GET_FUNCREF_S, WebAssembly::GLOBAL_GET_FUNCREF },
  { WebAssembly::GLOBAL_GET_I32_S, WebAssembly::GLOBAL_GET_I32 },
  { WebAssembly::GLOBAL_GET_I64_S, WebAssembly::GLOBAL_GET_I64 },
  { WebAssembly::GLOBAL_GET_V128_S, WebAssembly::GLOBAL_GET_V128 },
  { WebAssembly::GLOBAL_SET_EXTERNREF_S, WebAssembly::GLOBAL_SET_EXTERNREF },
  { WebAssembly::GLOBAL_SET_F32_S, WebAssembly::GLOBAL_SET_F32 },
  { WebAssembly::GLOBAL_SET_F64_S, WebAssembly::GLOBAL_SET_F64 },
  { WebAssembly::GLOBAL_SET_FUNCREF_S, WebAssembly::GLOBAL_SET_FUNCREF },
  { WebAssembly::GLOBAL_SET_I32_S, WebAssembly::GLOBAL_SET_I32 },
  { WebAssembly::GLOBAL_SET_I64_S, WebAssembly::GLOBAL_SET_I64 },
  { WebAssembly::GLOBAL_SET_V128_S, WebAssembly::GLOBAL_SET_V128 },
  { WebAssembly::GT_F32_S, WebAssembly::GT_F32 },
  { WebAssembly::GT_F32x4_S, WebAssembly::GT_F32x4 },
  { WebAssembly::GT_F64_S, WebAssembly::GT_F64 },
  { WebAssembly::GT_F64x2_S, WebAssembly::GT_F64x2 },
  { WebAssembly::GT_S_I16x8_S, WebAssembly::GT_S_I16x8 },
  { WebAssembly::GT_S_I32_S, WebAssembly::GT_S_I32 },
  { WebAssembly::GT_S_I32x4_S, WebAssembly::GT_S_I32x4 },
  { WebAssembly::GT_S_I64_S, WebAssembly::GT_S_I64 },
  { WebAssembly::GT_S_I64x2_S, WebAssembly::GT_S_I64x2 },
  { WebAssembly::GT_S_I8x16_S, WebAssembly::GT_S_I8x16 },
  { WebAssembly::GT_U_I16x8_S, WebAssembly::GT_U_I16x8 },
  { WebAssembly::GT_U_I32_S, WebAssembly::GT_U_I32 },
  { WebAssembly::GT_U_I32x4_S, WebAssembly::GT_U_I32x4 },
  { WebAssembly::GT_U_I64_S, WebAssembly::GT_U_I64 },
  { WebAssembly::GT_U_I8x16_S, WebAssembly::GT_U_I8x16 },
  { WebAssembly::I32_EXTEND16_S_I32_S, WebAssembly::I32_EXTEND16_S_I32 },
  { WebAssembly::I32_EXTEND8_S_I32_S, WebAssembly::I32_EXTEND8_S_I32 },
  { WebAssembly::I32_REINTERPRET_F32_S, WebAssembly::I32_REINTERPRET_F32 },
  { WebAssembly::I32_TRUNC_S_F32_S, WebAssembly::I32_TRUNC_S_F32 },
  { WebAssembly::I32_TRUNC_S_F64_S, WebAssembly::I32_TRUNC_S_F64 },
  { WebAssembly::I32_TRUNC_S_SAT_F32_S, WebAssembly::I32_TRUNC_S_SAT_F32 },
  { WebAssembly::I32_TRUNC_S_SAT_F64_S, WebAssembly::I32_TRUNC_S_SAT_F64 },
  { WebAssembly::I32_TRUNC_U_F32_S, WebAssembly::I32_TRUNC_U_F32 },
  { WebAssembly::I32_TRUNC_U_F64_S, WebAssembly::I32_TRUNC_U_F64 },
  { WebAssembly::I32_TRUNC_U_SAT_F32_S, WebAssembly::I32_TRUNC_U_SAT_F32 },
  { WebAssembly::I32_TRUNC_U_SAT_F64_S, WebAssembly::I32_TRUNC_U_SAT_F64 },
  { WebAssembly::I32_WRAP_I64_S, WebAssembly::I32_WRAP_I64 },
  { WebAssembly::I64_EXTEND16_S_I64_S, WebAssembly::I64_EXTEND16_S_I64 },
  { WebAssembly::I64_EXTEND32_S_I64_S, WebAssembly::I64_EXTEND32_S_I64 },
  { WebAssembly::I64_EXTEND8_S_I64_S, WebAssembly::I64_EXTEND8_S_I64 },
  { WebAssembly::I64_EXTEND_S_I32_S, WebAssembly::I64_EXTEND_S_I32 },
  { WebAssembly::I64_EXTEND_U_I32_S, WebAssembly::I64_EXTEND_U_I32 },
  { WebAssembly::I64_REINTERPRET_F64_S, WebAssembly::I64_REINTERPRET_F64 },
  { WebAssembly::I64_TRUNC_S_F32_S, WebAssembly::I64_TRUNC_S_F32 },
  { WebAssembly::I64_TRUNC_S_F64_S, WebAssembly::I64_TRUNC_S_F64 },
  { WebAssembly::I64_TRUNC_S_SAT_F32_S, WebAssembly::I64_TRUNC_S_SAT_F32 },
  { WebAssembly::I64_TRUNC_S_SAT_F64_S, WebAssembly::I64_TRUNC_S_SAT_F64 },
  { WebAssembly::I64_TRUNC_U_F32_S, WebAssembly::I64_TRUNC_U_F32 },
  { WebAssembly::I64_TRUNC_U_F64_S, WebAssembly::I64_TRUNC_U_F64 },
  { WebAssembly::I64_TRUNC_U_SAT_F32_S, WebAssembly::I64_TRUNC_U_SAT_F32 },
  { WebAssembly::I64_TRUNC_U_SAT_F64_S, WebAssembly::I64_TRUNC_U_SAT_F64 },
  { WebAssembly::IF_S, WebAssembly::IF },
  { WebAssembly::LANESELECT_I16x8_S, WebAssembly::LANESELECT_I16x8 },
  { WebAssembly::LANESELECT_I32x4_S, WebAssembly::LANESELECT_I32x4 },
  { WebAssembly::LANESELECT_I64x2_S, WebAssembly::LANESELECT_I64x2 },
  { WebAssembly::LANESELECT_I8x16_S, WebAssembly::LANESELECT_I8x16 },
  { WebAssembly::LE_F32_S, WebAssembly::LE_F32 },
  { WebAssembly::LE_F32x4_S, WebAssembly::LE_F32x4 },
  { WebAssembly::LE_F64_S, WebAssembly::LE_F64 },
  { WebAssembly::LE_F64x2_S, WebAssembly::LE_F64x2 },
  { WebAssembly::LE_S_I16x8_S, WebAssembly::LE_S_I16x8 },
  { WebAssembly::LE_S_I32_S, WebAssembly::LE_S_I32 },
  { WebAssembly::LE_S_I32x4_S, WebAssembly::LE_S_I32x4 },
  { WebAssembly::LE_S_I64_S, WebAssembly::LE_S_I64 },
  { WebAssembly::LE_S_I64x2_S, WebAssembly::LE_S_I64x2 },
  { WebAssembly::LE_S_I8x16_S, WebAssembly::LE_S_I8x16 },
  { WebAssembly::LE_U_I16x8_S, WebAssembly::LE_U_I16x8 },
  { WebAssembly::LE_U_I32_S, WebAssembly::LE_U_I32 },
  { WebAssembly::LE_U_I32x4_S, WebAssembly::LE_U_I32x4 },
  { WebAssembly::LE_U_I64_S, WebAssembly::LE_U_I64 },
  { WebAssembly::LE_U_I8x16_S, WebAssembly::LE_U_I8x16 },
  { WebAssembly::LOAD16_SPLAT_A32_S, WebAssembly::LOAD16_SPLAT_A32 },
  { WebAssembly::LOAD16_SPLAT_A64_S, WebAssembly::LOAD16_SPLAT_A64 },
  { WebAssembly::LOAD16_S_I32_A32_S, WebAssembly::LOAD16_S_I32_A32 },
  { WebAssembly::LOAD16_S_I32_A64_S, WebAssembly::LOAD16_S_I32_A64 },
  { WebAssembly::LOAD16_S_I64_A32_S, WebAssembly::LOAD16_S_I64_A32 },
  { WebAssembly::LOAD16_S_I64_A64_S, WebAssembly::LOAD16_S_I64_A64 },
  { WebAssembly::LOAD16_U_I32_A32_S, WebAssembly::LOAD16_U_I32_A32 },
  { WebAssembly::LOAD16_U_I32_A64_S, WebAssembly::LOAD16_U_I32_A64 },
  { WebAssembly::LOAD16_U_I64_A32_S, WebAssembly::LOAD16_U_I64_A32 },
  { WebAssembly::LOAD16_U_I64_A64_S, WebAssembly::LOAD16_U_I64_A64 },
  { WebAssembly::LOAD32_SPLAT_A32_S, WebAssembly::LOAD32_SPLAT_A32 },
  { WebAssembly::LOAD32_SPLAT_A64_S, WebAssembly::LOAD32_SPLAT_A64 },
  { WebAssembly::LOAD32_S_I64_A32_S, WebAssembly::LOAD32_S_I64_A32 },
  { WebAssembly::LOAD32_S_I64_A64_S, WebAssembly::LOAD32_S_I64_A64 },
  { WebAssembly::LOAD32_U_I64_A32_S, WebAssembly::LOAD32_U_I64_A32 },
  { WebAssembly::LOAD32_U_I64_A64_S, WebAssembly::LOAD32_U_I64_A64 },
  { WebAssembly::LOAD64_SPLAT_A32_S, WebAssembly::LOAD64_SPLAT_A32 },
  { WebAssembly::LOAD64_SPLAT_A64_S, WebAssembly::LOAD64_SPLAT_A64 },
  { WebAssembly::LOAD8_SPLAT_A32_S, WebAssembly::LOAD8_SPLAT_A32 },
  { WebAssembly::LOAD8_SPLAT_A64_S, WebAssembly::LOAD8_SPLAT_A64 },
  { WebAssembly::LOAD8_S_I32_A32_S, WebAssembly::LOAD8_S_I32_A32 },
  { WebAssembly::LOAD8_S_I32_A64_S, WebAssembly::LOAD8_S_I32_A64 },
  { WebAssembly::LOAD8_S_I64_A32_S, WebAssembly::LOAD8_S_I64_A32 },
  { WebAssembly::LOAD8_S_I64_A64_S, WebAssembly::LOAD8_S_I64_A64 },
  { WebAssembly::LOAD8_U_I32_A32_S, WebAssembly::LOAD8_U_I32_A32 },
  { WebAssembly::LOAD8_U_I32_A64_S, WebAssembly::LOAD8_U_I32_A64 },
  { WebAssembly::LOAD8_U_I64_A32_S, WebAssembly::LOAD8_U_I64_A32 },
  { WebAssembly::LOAD8_U_I64_A64_S, WebAssembly::LOAD8_U_I64_A64 },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A32_S, WebAssembly::LOAD_EXTEND_S_I16x8_A32 },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A64_S, WebAssembly::LOAD_EXTEND_S_I16x8_A64 },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A32_S, WebAssembly::LOAD_EXTEND_S_I32x4_A32 },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A64_S, WebAssembly::LOAD_EXTEND_S_I32x4_A64 },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A32_S, WebAssembly::LOAD_EXTEND_S_I64x2_A32 },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A64_S, WebAssembly::LOAD_EXTEND_S_I64x2_A64 },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A32_S, WebAssembly::LOAD_EXTEND_U_I16x8_A32 },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A64_S, WebAssembly::LOAD_EXTEND_U_I16x8_A64 },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A32_S, WebAssembly::LOAD_EXTEND_U_I32x4_A32 },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A64_S, WebAssembly::LOAD_EXTEND_U_I32x4_A64 },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A32_S, WebAssembly::LOAD_EXTEND_U_I64x2_A32 },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A64_S, WebAssembly::LOAD_EXTEND_U_I64x2_A64 },
  { WebAssembly::LOAD_F32_A32_S, WebAssembly::LOAD_F32_A32 },
  { WebAssembly::LOAD_F32_A64_S, WebAssembly::LOAD_F32_A64 },
  { WebAssembly::LOAD_F64_A32_S, WebAssembly::LOAD_F64_A32 },
  { WebAssembly::LOAD_F64_A64_S, WebAssembly::LOAD_F64_A64 },
  { WebAssembly::LOAD_I32_A32_S, WebAssembly::LOAD_I32_A32 },
  { WebAssembly::LOAD_I32_A64_S, WebAssembly::LOAD_I32_A64 },
  { WebAssembly::LOAD_I64_A32_S, WebAssembly::LOAD_I64_A32 },
  { WebAssembly::LOAD_I64_A64_S, WebAssembly::LOAD_I64_A64 },
  { WebAssembly::LOAD_LANE_I16x8_A32_S, WebAssembly::LOAD_LANE_I16x8_A32 },
  { WebAssembly::LOAD_LANE_I16x8_A64_S, WebAssembly::LOAD_LANE_I16x8_A64 },
  { WebAssembly::LOAD_LANE_I32x4_A32_S, WebAssembly::LOAD_LANE_I32x4_A32 },
  { WebAssembly::LOAD_LANE_I32x4_A64_S, WebAssembly::LOAD_LANE_I32x4_A64 },
  { WebAssembly::LOAD_LANE_I64x2_A32_S, WebAssembly::LOAD_LANE_I64x2_A32 },
  { WebAssembly::LOAD_LANE_I64x2_A64_S, WebAssembly::LOAD_LANE_I64x2_A64 },
  { WebAssembly::LOAD_LANE_I8x16_A32_S, WebAssembly::LOAD_LANE_I8x16_A32 },
  { WebAssembly::LOAD_LANE_I8x16_A64_S, WebAssembly::LOAD_LANE_I8x16_A64 },
  { WebAssembly::LOAD_V128_A32_S, WebAssembly::LOAD_V128_A32 },
  { WebAssembly::LOAD_V128_A64_S, WebAssembly::LOAD_V128_A64 },
  { WebAssembly::LOAD_ZERO_I32x4_A32_S, WebAssembly::LOAD_ZERO_I32x4_A32 },
  { WebAssembly::LOAD_ZERO_I32x4_A64_S, WebAssembly::LOAD_ZERO_I32x4_A64 },
  { WebAssembly::LOAD_ZERO_I64x2_A32_S, WebAssembly::LOAD_ZERO_I64x2_A32 },
  { WebAssembly::LOAD_ZERO_I64x2_A64_S, WebAssembly::LOAD_ZERO_I64x2_A64 },
  { WebAssembly::LOCAL_GET_EXTERNREF_S, WebAssembly::LOCAL_GET_EXTERNREF },
  { WebAssembly::LOCAL_GET_F32_S, WebAssembly::LOCAL_GET_F32 },
  { WebAssembly::LOCAL_GET_F64_S, WebAssembly::LOCAL_GET_F64 },
  { WebAssembly::LOCAL_GET_FUNCREF_S, WebAssembly::LOCAL_GET_FUNCREF },
  { WebAssembly::LOCAL_GET_I32_S, WebAssembly::LOCAL_GET_I32 },
  { WebAssembly::LOCAL_GET_I64_S, WebAssembly::LOCAL_GET_I64 },
  { WebAssembly::LOCAL_GET_V128_S, WebAssembly::LOCAL_GET_V128 },
  { WebAssembly::LOCAL_SET_EXTERNREF_S, WebAssembly::LOCAL_SET_EXTERNREF },
  { WebAssembly::LOCAL_SET_F32_S, WebAssembly::LOCAL_SET_F32 },
  { WebAssembly::LOCAL_SET_F64_S, WebAssembly::LOCAL_SET_F64 },
  { WebAssembly::LOCAL_SET_FUNCREF_S, WebAssembly::LOCAL_SET_FUNCREF },
  { WebAssembly::LOCAL_SET_I32_S, WebAssembly::LOCAL_SET_I32 },
  { WebAssembly::LOCAL_SET_I64_S, WebAssembly::LOCAL_SET_I64 },
  { WebAssembly::LOCAL_SET_V128_S, WebAssembly::LOCAL_SET_V128 },
  { WebAssembly::LOCAL_TEE_EXTERNREF_S, WebAssembly::LOCAL_TEE_EXTERNREF },
  { WebAssembly::LOCAL_TEE_F32_S, WebAssembly::LOCAL_TEE_F32 },
  { WebAssembly::LOCAL_TEE_F64_S, WebAssembly::LOCAL_TEE_F64 },
  { WebAssembly::LOCAL_TEE_FUNCREF_S, WebAssembly::LOCAL_TEE_FUNCREF },
  { WebAssembly::LOCAL_TEE_I32_S, WebAssembly::LOCAL_TEE_I32 },
  { WebAssembly::LOCAL_TEE_I64_S, WebAssembly::LOCAL_TEE_I64 },
  { WebAssembly::LOCAL_TEE_V128_S, WebAssembly::LOCAL_TEE_V128 },
  { WebAssembly::LOOP_S, WebAssembly::LOOP },
  { WebAssembly::LT_F32_S, WebAssembly::LT_F32 },
  { WebAssembly::LT_F32x4_S, WebAssembly::LT_F32x4 },
  { WebAssembly::LT_F64_S, WebAssembly::LT_F64 },
  { WebAssembly::LT_F64x2_S, WebAssembly::LT_F64x2 },
  { WebAssembly::LT_S_I16x8_S, WebAssembly::LT_S_I16x8 },
  { WebAssembly::LT_S_I32_S, WebAssembly::LT_S_I32 },
  { WebAssembly::LT_S_I32x4_S, WebAssembly::LT_S_I32x4 },
  { WebAssembly::LT_S_I64_S, WebAssembly::LT_S_I64 },
  { WebAssembly::LT_S_I64x2_S, WebAssembly::LT_S_I64x2 },
  { WebAssembly::LT_S_I8x16_S, WebAssembly::LT_S_I8x16 },
  { WebAssembly::LT_U_I16x8_S, WebAssembly::LT_U_I16x8 },
  { WebAssembly::LT_U_I32_S, WebAssembly::LT_U_I32 },
  { WebAssembly::LT_U_I32x4_S, WebAssembly::LT_U_I32x4 },
  { WebAssembly::LT_U_I64_S, WebAssembly::LT_U_I64 },
  { WebAssembly::LT_U_I8x16_S, WebAssembly::LT_U_I8x16 },
  { WebAssembly::MADD_F32x4_S, WebAssembly::MADD_F32x4 },
  { WebAssembly::MADD_F64x2_S, WebAssembly::MADD_F64x2 },
  { WebAssembly::MAX_F32_S, WebAssembly::MAX_F32 },
  { WebAssembly::MAX_F32x4_S, WebAssembly::MAX_F32x4 },
  { WebAssembly::MAX_F64_S, WebAssembly::MAX_F64 },
  { WebAssembly::MAX_F64x2_S, WebAssembly::MAX_F64x2 },
  { WebAssembly::MAX_S_I16x8_S, WebAssembly::MAX_S_I16x8 },
  { WebAssembly::MAX_S_I32x4_S, WebAssembly::MAX_S_I32x4 },
  { WebAssembly::MAX_S_I8x16_S, WebAssembly::MAX_S_I8x16 },
  { WebAssembly::MAX_U_I16x8_S, WebAssembly::MAX_U_I16x8 },
  { WebAssembly::MAX_U_I32x4_S, WebAssembly::MAX_U_I32x4 },
  { WebAssembly::MAX_U_I8x16_S, WebAssembly::MAX_U_I8x16 },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S, WebAssembly::MEMORY_ATOMIC_NOTIFY_A32 },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT32_A32 },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S, WebAssembly::MEMORY_ATOMIC_WAIT32_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT64_A32 },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S, WebAssembly::MEMORY_ATOMIC_WAIT64_A64 },
  { WebAssembly::MIN_F32_S, WebAssembly::MIN_F32 },
  { WebAssembly::MIN_F32x4_S, WebAssembly::MIN_F32x4 },
  { WebAssembly::MIN_F64_S, WebAssembly::MIN_F64 },
  { WebAssembly::MIN_F64x2_S, WebAssembly::MIN_F64x2 },
  { WebAssembly::MIN_S_I16x8_S, WebAssembly::MIN_S_I16x8 },
  { WebAssembly::MIN_S_I32x4_S, WebAssembly::MIN_S_I32x4 },
  { WebAssembly::MIN_S_I8x16_S, WebAssembly::MIN_S_I8x16 },
  { WebAssembly::MIN_U_I16x8_S, WebAssembly::MIN_U_I16x8 },
  { WebAssembly::MIN_U_I32x4_S, WebAssembly::MIN_U_I32x4 },
  { WebAssembly::MIN_U_I8x16_S, WebAssembly::MIN_U_I8x16 },
  { WebAssembly::MUL_F32_S, WebAssembly::MUL_F32 },
  { WebAssembly::MUL_F32x4_S, WebAssembly::MUL_F32x4 },
  { WebAssembly::MUL_F64_S, WebAssembly::MUL_F64 },
  { WebAssembly::MUL_F64x2_S, WebAssembly::MUL_F64x2 },
  { WebAssembly::MUL_I16x8_S, WebAssembly::MUL_I16x8 },
  { WebAssembly::MUL_I32_S, WebAssembly::MUL_I32 },
  { WebAssembly::MUL_I32x4_S, WebAssembly::MUL_I32x4 },
  { WebAssembly::MUL_I64_S, WebAssembly::MUL_I64 },
  { WebAssembly::MUL_I64x2_S, WebAssembly::MUL_I64x2 },
  { WebAssembly::NARROW_S_I16x8_S, WebAssembly::NARROW_S_I16x8 },
  { WebAssembly::NARROW_S_I8x16_S, WebAssembly::NARROW_S_I8x16 },
  { WebAssembly::NARROW_U_I16x8_S, WebAssembly::NARROW_U_I16x8 },
  { WebAssembly::NARROW_U_I8x16_S, WebAssembly::NARROW_U_I8x16 },
  { WebAssembly::NEAREST_F32_S, WebAssembly::NEAREST_F32 },
  { WebAssembly::NEAREST_F32x4_S, WebAssembly::NEAREST_F32x4 },
  { WebAssembly::NEAREST_F64_S, WebAssembly::NEAREST_F64 },
  { WebAssembly::NEAREST_F64x2_S, WebAssembly::NEAREST_F64x2 },
  { WebAssembly::NEG_F32_S, WebAssembly::NEG_F32 },
  { WebAssembly::NEG_F32x4_S, WebAssembly::NEG_F32x4 },
  { WebAssembly::NEG_F64_S, WebAssembly::NEG_F64 },
  { WebAssembly::NEG_F64x2_S, WebAssembly::NEG_F64x2 },
  { WebAssembly::NEG_I16x8_S, WebAssembly::NEG_I16x8 },
  { WebAssembly::NEG_I32x4_S, WebAssembly::NEG_I32x4 },
  { WebAssembly::NEG_I64x2_S, WebAssembly::NEG_I64x2 },
  { WebAssembly::NEG_I8x16_S, WebAssembly::NEG_I8x16 },
  { WebAssembly::NE_F32_S, WebAssembly::NE_F32 },
  { WebAssembly::NE_F32x4_S, WebAssembly::NE_F32x4 },
  { WebAssembly::NE_F64_S, WebAssembly::NE_F64 },
  { WebAssembly::NE_F64x2_S, WebAssembly::NE_F64x2 },
  { WebAssembly::NE_I16x8_S, WebAssembly::NE_I16x8 },
  { WebAssembly::NE_I32_S, WebAssembly::NE_I32 },
  { WebAssembly::NE_I32x4_S, WebAssembly::NE_I32x4 },
  { WebAssembly::NE_I64_S, WebAssembly::NE_I64 },
  { WebAssembly::NE_I64x2_S, WebAssembly::NE_I64x2 },
  { WebAssembly::NE_I8x16_S, WebAssembly::NE_I8x16 },
  { WebAssembly::NMADD_F32x4_S, WebAssembly::NMADD_F32x4 },
  { WebAssembly::NMADD_F64x2_S, WebAssembly::NMADD_F64x2 },
  { WebAssembly::NOP_S, WebAssembly::NOP },
  { WebAssembly::NOT_S, WebAssembly::NOT },
  { WebAssembly::OR_I32_S, WebAssembly::OR_I32 },
  { WebAssembly::OR_I64_S, WebAssembly::OR_I64 },
  { WebAssembly::OR_S, WebAssembly::OR },
  { WebAssembly::PMAX_F32x4_S, WebAssembly::PMAX_F32x4 },
  { WebAssembly::PMAX_F64x2_S, WebAssembly::PMAX_F64x2 },
  { WebAssembly::PMIN_F32x4_S, WebAssembly::PMIN_F32x4 },
  { WebAssembly::PMIN_F64x2_S, WebAssembly::PMIN_F64x2 },
  { WebAssembly::POPCNT_I32_S, WebAssembly::POPCNT_I32 },
  { WebAssembly::POPCNT_I64_S, WebAssembly::POPCNT_I64 },
  { WebAssembly::POPCNT_I8x16_S, WebAssembly::POPCNT_I8x16 },
  { WebAssembly::Q15MULR_SAT_S_I16x8_S, WebAssembly::Q15MULR_SAT_S_I16x8 },
  { WebAssembly::REF_IS_NULL_EXTERNREF_S, WebAssembly::REF_IS_NULL_EXTERNREF },
  { WebAssembly::REF_IS_NULL_FUNCREF_S, WebAssembly::REF_IS_NULL_FUNCREF },
  { WebAssembly::REF_NULL_EXTERNREF_S, WebAssembly::REF_NULL_EXTERNREF },
  { WebAssembly::REF_NULL_FUNCREF_S, WebAssembly::REF_NULL_FUNCREF },
  { WebAssembly::RELAXED_DOT_ADD_S, WebAssembly::RELAXED_DOT_ADD },
  { WebAssembly::RELAXED_DOT_BFLOAT_S, WebAssembly::RELAXED_DOT_BFLOAT },
  { WebAssembly::RELAXED_DOT_S, WebAssembly::RELAXED_DOT },
  { WebAssembly::RELAXED_Q15MULR_S_I16x8_S, WebAssembly::RELAXED_Q15MULR_S_I16x8 },
  { WebAssembly::RELAXED_SWIZZLE_S, WebAssembly::RELAXED_SWIZZLE },
  { WebAssembly::REM_S_I32_S, WebAssembly::REM_S_I32 },
  { WebAssembly::REM_S_I64_S, WebAssembly::REM_S_I64 },
  { WebAssembly::REM_U_I32_S, WebAssembly::REM_U_I32 },
  { WebAssembly::REM_U_I64_S, WebAssembly::REM_U_I64 },
  { WebAssembly::REPLACE_LANE_F32x4_S, WebAssembly::REPLACE_LANE_F32x4 },
  { WebAssembly::REPLACE_LANE_F64x2_S, WebAssembly::REPLACE_LANE_F64x2 },
  { WebAssembly::REPLACE_LANE_I16x8_S, WebAssembly::REPLACE_LANE_I16x8 },
  { WebAssembly::REPLACE_LANE_I32x4_S, WebAssembly::REPLACE_LANE_I32x4 },
  { WebAssembly::REPLACE_LANE_I64x2_S, WebAssembly::REPLACE_LANE_I64x2 },
  { WebAssembly::REPLACE_LANE_I8x16_S, WebAssembly::REPLACE_LANE_I8x16 },
  { WebAssembly::RETHROW_S, WebAssembly::RETHROW },
  { WebAssembly::RETURN_S, WebAssembly::RETURN },
  { WebAssembly::RET_CALL_INDIRECT_S, WebAssembly::RET_CALL_INDIRECT },
  { WebAssembly::RET_CALL_S, WebAssembly::RET_CALL },
  { WebAssembly::ROTL_I32_S, WebAssembly::ROTL_I32 },
  { WebAssembly::ROTL_I64_S, WebAssembly::ROTL_I64 },
  { WebAssembly::ROTR_I32_S, WebAssembly::ROTR_I32 },
  { WebAssembly::ROTR_I64_S, WebAssembly::ROTR_I64 },
  { WebAssembly::SELECT_EXTERNREF_S, WebAssembly::SELECT_EXTERNREF },
  { WebAssembly::SELECT_F32_S, WebAssembly::SELECT_F32 },
  { WebAssembly::SELECT_F64_S, WebAssembly::SELECT_F64 },
  { WebAssembly::SELECT_FUNCREF_S, WebAssembly::SELECT_FUNCREF },
  { WebAssembly::SELECT_I32_S, WebAssembly::SELECT_I32 },
  { WebAssembly::SELECT_I64_S, WebAssembly::SELECT_I64 },
  { WebAssembly::SELECT_V128_S, WebAssembly::SELECT_V128 },
  { WebAssembly::SHL_I16x8_S, WebAssembly::SHL_I16x8 },
  { WebAssembly::SHL_I32_S, WebAssembly::SHL_I32 },
  { WebAssembly::SHL_I32x4_S, WebAssembly::SHL_I32x4 },
  { WebAssembly::SHL_I64_S, WebAssembly::SHL_I64 },
  { WebAssembly::SHL_I64x2_S, WebAssembly::SHL_I64x2 },
  { WebAssembly::SHL_I8x16_S, WebAssembly::SHL_I8x16 },
  { WebAssembly::SHR_S_I16x8_S, WebAssembly::SHR_S_I16x8 },
  { WebAssembly::SHR_S_I32_S, WebAssembly::SHR_S_I32 },
  { WebAssembly::SHR_S_I32x4_S, WebAssembly::SHR_S_I32x4 },
  { WebAssembly::SHR_S_I64_S, WebAssembly::SHR_S_I64 },
  { WebAssembly::SHR_S_I64x2_S, WebAssembly::SHR_S_I64x2 },
  { WebAssembly::SHR_S_I8x16_S, WebAssembly::SHR_S_I8x16 },
  { WebAssembly::SHR_U_I16x8_S, WebAssembly::SHR_U_I16x8 },
  { WebAssembly::SHR_U_I32_S, WebAssembly::SHR_U_I32 },
  { WebAssembly::SHR_U_I32x4_S, WebAssembly::SHR_U_I32x4 },
  { WebAssembly::SHR_U_I64_S, WebAssembly::SHR_U_I64 },
  { WebAssembly::SHR_U_I64x2_S, WebAssembly::SHR_U_I64x2 },
  { WebAssembly::SHR_U_I8x16_S, WebAssembly::SHR_U_I8x16 },
  { WebAssembly::SHUFFLE_S, WebAssembly::SHUFFLE },
  { WebAssembly::SIMD_RELAXED_FMAX_F32x4_S, WebAssembly::SIMD_RELAXED_FMAX_F32x4 },
  { WebAssembly::SIMD_RELAXED_FMAX_F64x2_S, WebAssembly::SIMD_RELAXED_FMAX_F64x2 },
  { WebAssembly::SIMD_RELAXED_FMIN_F32x4_S, WebAssembly::SIMD_RELAXED_FMIN_F32x4 },
  { WebAssembly::SIMD_RELAXED_FMIN_F64x2_S, WebAssembly::SIMD_RELAXED_FMIN_F64x2 },
  { WebAssembly::SPLAT_F32x4_S, WebAssembly::SPLAT_F32x4 },
  { WebAssembly::SPLAT_F64x2_S, WebAssembly::SPLAT_F64x2 },
  { WebAssembly::SPLAT_I16x8_S, WebAssembly::SPLAT_I16x8 },
  { WebAssembly::SPLAT_I32x4_S, WebAssembly::SPLAT_I32x4 },
  { WebAssembly::SPLAT_I64x2_S, WebAssembly::SPLAT_I64x2 },
  { WebAssembly::SPLAT_I8x16_S, WebAssembly::SPLAT_I8x16 },
  { WebAssembly::SQRT_F32_S, WebAssembly::SQRT_F32 },
  { WebAssembly::SQRT_F32x4_S, WebAssembly::SQRT_F32x4 },
  { WebAssembly::SQRT_F64_S, WebAssembly::SQRT_F64 },
  { WebAssembly::SQRT_F64x2_S, WebAssembly::SQRT_F64x2 },
  { WebAssembly::STORE16_I32_A32_S, WebAssembly::STORE16_I32_A32 },
  { WebAssembly::STORE16_I32_A64_S, WebAssembly::STORE16_I32_A64 },
  { WebAssembly::STORE16_I64_A32_S, WebAssembly::STORE16_I64_A32 },
  { WebAssembly::STORE16_I64_A64_S, WebAssembly::STORE16_I64_A64 },
  { WebAssembly::STORE32_I64_A32_S, WebAssembly::STORE32_I64_A32 },
  { WebAssembly::STORE32_I64_A64_S, WebAssembly::STORE32_I64_A64 },
  { WebAssembly::STORE8_I32_A32_S, WebAssembly::STORE8_I32_A32 },
  { WebAssembly::STORE8_I32_A64_S, WebAssembly::STORE8_I32_A64 },
  { WebAssembly::STORE8_I64_A32_S, WebAssembly::STORE8_I64_A32 },
  { WebAssembly::STORE8_I64_A64_S, WebAssembly::STORE8_I64_A64 },
  { WebAssembly::STORE_F32_A32_S, WebAssembly::STORE_F32_A32 },
  { WebAssembly::STORE_F32_A64_S, WebAssembly::STORE_F32_A64 },
  { WebAssembly::STORE_F64_A32_S, WebAssembly::STORE_F64_A32 },
  { WebAssembly::STORE_F64_A64_S, WebAssembly::STORE_F64_A64 },
  { WebAssembly::STORE_I32_A32_S, WebAssembly::STORE_I32_A32 },
  { WebAssembly::STORE_I32_A64_S, WebAssembly::STORE_I32_A64 },
  { WebAssembly::STORE_I64_A32_S, WebAssembly::STORE_I64_A32 },
  { WebAssembly::STORE_I64_A64_S, WebAssembly::STORE_I64_A64 },
  { WebAssembly::STORE_LANE_I16x8_A32_S, WebAssembly::STORE_LANE_I16x8_A32 },
  { WebAssembly::STORE_LANE_I16x8_A64_S, WebAssembly::STORE_LANE_I16x8_A64 },
  { WebAssembly::STORE_LANE_I32x4_A32_S, WebAssembly::STORE_LANE_I32x4_A32 },
  { WebAssembly::STORE_LANE_I32x4_A64_S, WebAssembly::STORE_LANE_I32x4_A64 },
  { WebAssembly::STORE_LANE_I64x2_A32_S, WebAssembly::STORE_LANE_I64x2_A32 },
  { WebAssembly::STORE_LANE_I64x2_A64_S, WebAssembly::STORE_LANE_I64x2_A64 },
  { WebAssembly::STORE_LANE_I8x16_A32_S, WebAssembly::STORE_LANE_I8x16_A32 },
  { WebAssembly::STORE_LANE_I8x16_A64_S, WebAssembly::STORE_LANE_I8x16_A64 },
  { WebAssembly::STORE_V128_A32_S, WebAssembly::STORE_V128_A32 },
  { WebAssembly::STORE_V128_A64_S, WebAssembly::STORE_V128_A64 },
  { WebAssembly::SUB_F32_S, WebAssembly::SUB_F32 },
  { WebAssembly::SUB_F32x4_S, WebAssembly::SUB_F32x4 },
  { WebAssembly::SUB_F64_S, WebAssembly::SUB_F64 },
  { WebAssembly::SUB_F64x2_S, WebAssembly::SUB_F64x2 },
  { WebAssembly::SUB_I16x8_S, WebAssembly::SUB_I16x8 },
  { WebAssembly::SUB_I32_S, WebAssembly::SUB_I32 },
  { WebAssembly::SUB_I32x4_S, WebAssembly::SUB_I32x4 },
  { WebAssembly::SUB_I64_S, WebAssembly::SUB_I64 },
  { WebAssembly::SUB_I64x2_S, WebAssembly::SUB_I64x2 },
  { WebAssembly::SUB_I8x16_S, WebAssembly::SUB_I8x16 },
  { WebAssembly::SUB_SAT_S_I16x8_S, WebAssembly::SUB_SAT_S_I16x8 },
  { WebAssembly::SUB_SAT_S_I8x16_S, WebAssembly::SUB_SAT_S_I8x16 },
  { WebAssembly::SUB_SAT_U_I16x8_S, WebAssembly::SUB_SAT_U_I16x8 },
  { WebAssembly::SUB_SAT_U_I8x16_S, WebAssembly::SUB_SAT_U_I8x16 },
  { WebAssembly::SWIZZLE_S, WebAssembly::SWIZZLE },
  { WebAssembly::TABLE_COPY_S, WebAssembly::TABLE_COPY },
  { WebAssembly::TABLE_FILL_EXTERNREF_S, WebAssembly::TABLE_FILL_EXTERNREF },
  { WebAssembly::TABLE_FILL_FUNCREF_S, WebAssembly::TABLE_FILL_FUNCREF },
  { WebAssembly::TABLE_GET_EXTERNREF_S, WebAssembly::TABLE_GET_EXTERNREF },
  { WebAssembly::TABLE_GET_FUNCREF_S, WebAssembly::TABLE_GET_FUNCREF },
  { WebAssembly::TABLE_GROW_EXTERNREF_S, WebAssembly::TABLE_GROW_EXTERNREF },
  { WebAssembly::TABLE_GROW_FUNCREF_S, WebAssembly::TABLE_GROW_FUNCREF },
  { WebAssembly::TABLE_SET_EXTERNREF_S, WebAssembly::TABLE_SET_EXTERNREF },
  { WebAssembly::TABLE_SET_FUNCREF_S, WebAssembly::TABLE_SET_FUNCREF },
  { WebAssembly::TABLE_SIZE_S, WebAssembly::TABLE_SIZE },
  { WebAssembly::TEE_EXTERNREF_S, WebAssembly::TEE_EXTERNREF },
  { WebAssembly::TEE_F32_S, WebAssembly::TEE_F32 },
  { WebAssembly::TEE_F64_S, WebAssembly::TEE_F64 },
  { WebAssembly::TEE_FUNCREF_S, WebAssembly::TEE_FUNCREF },
  { WebAssembly::TEE_I32_S, WebAssembly::TEE_I32 },
  { WebAssembly::TEE_I64_S, WebAssembly::TEE_I64 },
  { WebAssembly::TEE_V128_S, WebAssembly::TEE_V128 },
  { WebAssembly::THROW_S, WebAssembly::THROW },
  { WebAssembly::TRUNC_F32_S, WebAssembly::TRUNC_F32 },
  { WebAssembly::TRUNC_F32x4_S, WebAssembly::TRUNC_F32x4 },
  { WebAssembly::TRUNC_F64_S, WebAssembly::TRUNC_F64 },
  { WebAssembly::TRUNC_F64x2_S, WebAssembly::TRUNC_F64x2 },
  { WebAssembly::TRY_S, WebAssembly::TRY },
  { WebAssembly::UNREACHABLE_S, WebAssembly::UNREACHABLE },
  { WebAssembly::XOR_I32_S, WebAssembly::XOR_I32 },
  { WebAssembly::XOR_I64_S, WebAssembly::XOR_I64 },
  { WebAssembly::XOR_S, WebAssembly::XOR },
  { WebAssembly::anonymous_4396MEMORY_GROW_A32_S, WebAssembly::anonymous_4396MEMORY_GROW_A32 },
  { WebAssembly::anonymous_4396MEMORY_SIZE_A32_S, WebAssembly::anonymous_4396MEMORY_SIZE_A32 },
  { WebAssembly::anonymous_4397MEMORY_GROW_A64_S, WebAssembly::anonymous_4397MEMORY_GROW_A64 },
  { WebAssembly::anonymous_4397MEMORY_SIZE_A64_S, WebAssembly::anonymous_4397MEMORY_SIZE_A64 },
  { WebAssembly::anonymous_6249DATA_DROP_S, WebAssembly::anonymous_6249DATA_DROP },
  { WebAssembly::anonymous_6249MEMORY_COPY_A32_S, WebAssembly::anonymous_6249MEMORY_COPY_A32 },
  { WebAssembly::anonymous_6249MEMORY_FILL_A32_S, WebAssembly::anonymous_6249MEMORY_FILL_A32 },
  { WebAssembly::anonymous_6249MEMORY_INIT_A32_S, WebAssembly::anonymous_6249MEMORY_INIT_A32 },
  { WebAssembly::anonymous_6250DATA_DROP_S, WebAssembly::anonymous_6250DATA_DROP },
  { WebAssembly::anonymous_6250MEMORY_COPY_A64_S, WebAssembly::anonymous_6250MEMORY_COPY_A64 },
  { WebAssembly::anonymous_6250MEMORY_FILL_A64_S, WebAssembly::anonymous_6250MEMORY_FILL_A64 },
  { WebAssembly::anonymous_6250MEMORY_INIT_A64_S, WebAssembly::anonymous_6250MEMORY_INIT_A64 },
  { WebAssembly::convert_low_s_F64x2_S, WebAssembly::convert_low_s_F64x2 },
  { WebAssembly::convert_low_u_F64x2_S, WebAssembly::convert_low_u_F64x2 },
  { WebAssembly::demote_zero_F32x4_S, WebAssembly::demote_zero_F32x4 },
  { WebAssembly::extend_high_s_I16x8_S, WebAssembly::extend_high_s_I16x8 },
  { WebAssembly::extend_high_s_I32x4_S, WebAssembly::extend_high_s_I32x4 },
  { WebAssembly::extend_high_s_I64x2_S, WebAssembly::extend_high_s_I64x2 },
  { WebAssembly::extend_high_u_I16x8_S, WebAssembly::extend_high_u_I16x8 },
  { WebAssembly::extend_high_u_I32x4_S, WebAssembly::extend_high_u_I32x4 },
  { WebAssembly::extend_high_u_I64x2_S, WebAssembly::extend_high_u_I64x2 },
  { WebAssembly::extend_low_s_I16x8_S, WebAssembly::extend_low_s_I16x8 },
  { WebAssembly::extend_low_s_I32x4_S, WebAssembly::extend_low_s_I32x4 },
  { WebAssembly::extend_low_s_I64x2_S, WebAssembly::extend_low_s_I64x2 },
  { WebAssembly::extend_low_u_I16x8_S, WebAssembly::extend_low_u_I16x8 },
  { WebAssembly::extend_low_u_I32x4_S, WebAssembly::extend_low_u_I32x4 },
  { WebAssembly::extend_low_u_I64x2_S, WebAssembly::extend_low_u_I64x2 },
  { WebAssembly::fp_to_sint_I32x4_S, WebAssembly::fp_to_sint_I32x4 },
  { WebAssembly::fp_to_uint_I32x4_S, WebAssembly::fp_to_uint_I32x4 },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I16x8_S, WebAssembly::int_wasm_extadd_pairwise_signed_I16x8 },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I32x4_S, WebAssembly::int_wasm_extadd_pairwise_signed_I32x4 },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8_S, WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8 },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4_S, WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_signed_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_signed_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4 },
  { WebAssembly::promote_low_F64x2_S, WebAssembly::promote_low_F64x2 },
  { WebAssembly::sint_to_fp_F32x4_S, WebAssembly::sint_to_fp_F32x4 },
  { WebAssembly::trunc_sat_zero_s_I32x4_S, WebAssembly::trunc_sat_zero_s_I32x4 },
  { WebAssembly::trunc_sat_zero_u_I32x4_S, WebAssembly::trunc_sat_zero_u_I32x4 },
  { WebAssembly::uint_to_fp_F32x4_S, WebAssembly::uint_to_fp_F32x4 },
}; // End of getRegisterOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 750;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getRegisterOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getRegisterOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getRegisterOpcodeTable[mid][1];
}

// getStackOpcode
LLVM_READONLY
int getStackOpcode(uint16_t Opcode) {
static const uint16_t getStackOpcodeTable[][2] = {
  { WebAssembly::CALL_PARAMS, WebAssembly::CALL_PARAMS_S },
  { WebAssembly::CALL_RESULTS, WebAssembly::CALL_RESULTS_S },
  { WebAssembly::CATCHRET, WebAssembly::CATCHRET_S },
  { WebAssembly::CLEANUPRET, WebAssembly::CLEANUPRET_S },
  { WebAssembly::COMPILER_FENCE, WebAssembly::COMPILER_FENCE_S },
  { WebAssembly::RET_CALL_RESULTS, WebAssembly::RET_CALL_RESULTS_S },
  { WebAssembly::ABS_F32, WebAssembly::ABS_F32_S },
  { WebAssembly::ABS_F32x4, WebAssembly::ABS_F32x4_S },
  { WebAssembly::ABS_F64, WebAssembly::ABS_F64_S },
  { WebAssembly::ABS_F64x2, WebAssembly::ABS_F64x2_S },
  { WebAssembly::ABS_I16x8, WebAssembly::ABS_I16x8_S },
  { WebAssembly::ABS_I32x4, WebAssembly::ABS_I32x4_S },
  { WebAssembly::ABS_I64x2, WebAssembly::ABS_I64x2_S },
  { WebAssembly::ABS_I8x16, WebAssembly::ABS_I8x16_S },
  { WebAssembly::ADD_F32, WebAssembly::ADD_F32_S },
  { WebAssembly::ADD_F32x4, WebAssembly::ADD_F32x4_S },
  { WebAssembly::ADD_F64, WebAssembly::ADD_F64_S },
  { WebAssembly::ADD_F64x2, WebAssembly::ADD_F64x2_S },
  { WebAssembly::ADD_I16x8, WebAssembly::ADD_I16x8_S },
  { WebAssembly::ADD_I32, WebAssembly::ADD_I32_S },
  { WebAssembly::ADD_I32x4, WebAssembly::ADD_I32x4_S },
  { WebAssembly::ADD_I64, WebAssembly::ADD_I64_S },
  { WebAssembly::ADD_I64x2, WebAssembly::ADD_I64x2_S },
  { WebAssembly::ADD_I8x16, WebAssembly::ADD_I8x16_S },
  { WebAssembly::ADD_SAT_S_I16x8, WebAssembly::ADD_SAT_S_I16x8_S },
  { WebAssembly::ADD_SAT_S_I8x16, WebAssembly::ADD_SAT_S_I8x16_S },
  { WebAssembly::ADD_SAT_U_I16x8, WebAssembly::ADD_SAT_U_I16x8_S },
  { WebAssembly::ADD_SAT_U_I8x16, WebAssembly::ADD_SAT_U_I8x16_S },
  { WebAssembly::ADJCALLSTACKDOWN, WebAssembly::ADJCALLSTACKDOWN_S },
  { WebAssembly::ADJCALLSTACKUP, WebAssembly::ADJCALLSTACKUP_S },
  { WebAssembly::ALLTRUE_I16x8, WebAssembly::ALLTRUE_I16x8_S },
  { WebAssembly::ALLTRUE_I32x4, WebAssembly::ALLTRUE_I32x4_S },
  { WebAssembly::ALLTRUE_I64x2, WebAssembly::ALLTRUE_I64x2_S },
  { WebAssembly::ALLTRUE_I8x16, WebAssembly::ALLTRUE_I8x16_S },
  { WebAssembly::AND, WebAssembly::AND_S },
  { WebAssembly::ANDNOT, WebAssembly::ANDNOT_S },
  { WebAssembly::AND_I32, WebAssembly::AND_I32_S },
  { WebAssembly::AND_I64, WebAssembly::AND_I64_S },
  { WebAssembly::ANYTRUE, WebAssembly::ANYTRUE_S },
  { WebAssembly::ARGUMENT_externref, WebAssembly::ARGUMENT_externref_S },
  { WebAssembly::ARGUMENT_f32, WebAssembly::ARGUMENT_f32_S },
  { WebAssembly::ARGUMENT_f64, WebAssembly::ARGUMENT_f64_S },
  { WebAssembly::ARGUMENT_funcref, WebAssembly::ARGUMENT_funcref_S },
  { WebAssembly::ARGUMENT_i32, WebAssembly::ARGUMENT_i32_S },
  { WebAssembly::ARGUMENT_i64, WebAssembly::ARGUMENT_i64_S },
  { WebAssembly::ARGUMENT_v16i8, WebAssembly::ARGUMENT_v16i8_S },
  { WebAssembly::ARGUMENT_v2f64, WebAssembly::ARGUMENT_v2f64_S },
  { WebAssembly::ARGUMENT_v2i64, WebAssembly::ARGUMENT_v2i64_S },
  { WebAssembly::ARGUMENT_v4f32, WebAssembly::ARGUMENT_v4f32_S },
  { WebAssembly::ARGUMENT_v4i32, WebAssembly::ARGUMENT_v4i32_S },
  { WebAssembly::ARGUMENT_v8i16, WebAssembly::ARGUMENT_v8i16_S },
  { WebAssembly::ATOMIC_FENCE, WebAssembly::ATOMIC_FENCE_S },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32, WebAssembly::ATOMIC_LOAD16_U_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A64, WebAssembly::ATOMIC_LOAD16_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32, WebAssembly::ATOMIC_LOAD16_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A64, WebAssembly::ATOMIC_LOAD16_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32, WebAssembly::ATOMIC_LOAD32_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A64, WebAssembly::ATOMIC_LOAD32_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32, WebAssembly::ATOMIC_LOAD8_U_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A64, WebAssembly::ATOMIC_LOAD8_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32, WebAssembly::ATOMIC_LOAD8_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A64, WebAssembly::ATOMIC_LOAD8_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD_I32_A32, WebAssembly::ATOMIC_LOAD_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD_I32_A64, WebAssembly::ATOMIC_LOAD_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD_I64_A32, WebAssembly::ATOMIC_LOAD_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD_I64_A64, WebAssembly::ATOMIC_LOAD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32, WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A64, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32, WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A64, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32, WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A64, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32, WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A64, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32, WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A64, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32, WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A64, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32, WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A64, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32, WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A64, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32, WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A64, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32, WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A64, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32, WebAssembly::ATOMIC_RMW_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A64, WebAssembly::ATOMIC_RMW_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32, WebAssembly::ATOMIC_RMW_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A64, WebAssembly::ATOMIC_RMW_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32, WebAssembly::ATOMIC_RMW_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A64, WebAssembly::ATOMIC_RMW_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32, WebAssembly::ATOMIC_RMW_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A64, WebAssembly::ATOMIC_RMW_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32, WebAssembly::ATOMIC_RMW_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A64, WebAssembly::ATOMIC_RMW_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32, WebAssembly::ATOMIC_RMW_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A64, WebAssembly::ATOMIC_RMW_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32, WebAssembly::ATOMIC_RMW_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A64, WebAssembly::ATOMIC_RMW_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32, WebAssembly::ATOMIC_RMW_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A64, WebAssembly::ATOMIC_RMW_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32, WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A64, WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32, WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A64, WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32, WebAssembly::ATOMIC_RMW_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A64, WebAssembly::ATOMIC_RMW_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32, WebAssembly::ATOMIC_RMW_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A64, WebAssembly::ATOMIC_RMW_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_STORE16_I32_A32, WebAssembly::ATOMIC_STORE16_I32_A32_S },
  { WebAssembly::ATOMIC_STORE16_I32_A64, WebAssembly::ATOMIC_STORE16_I32_A64_S },
  { WebAssembly::ATOMIC_STORE16_I64_A32, WebAssembly::ATOMIC_STORE16_I64_A32_S },
  { WebAssembly::ATOMIC_STORE16_I64_A64, WebAssembly::ATOMIC_STORE16_I64_A64_S },
  { WebAssembly::ATOMIC_STORE32_I64_A32, WebAssembly::ATOMIC_STORE32_I64_A32_S },
  { WebAssembly::ATOMIC_STORE32_I64_A64, WebAssembly::ATOMIC_STORE32_I64_A64_S },
  { WebAssembly::ATOMIC_STORE8_I32_A32, WebAssembly::ATOMIC_STORE8_I32_A32_S },
  { WebAssembly::ATOMIC_STORE8_I32_A64, WebAssembly::ATOMIC_STORE8_I32_A64_S },
  { WebAssembly::ATOMIC_STORE8_I64_A32, WebAssembly::ATOMIC_STORE8_I64_A32_S },
  { WebAssembly::ATOMIC_STORE8_I64_A64, WebAssembly::ATOMIC_STORE8_I64_A64_S },
  { WebAssembly::ATOMIC_STORE_I32_A32, WebAssembly::ATOMIC_STORE_I32_A32_S },
  { WebAssembly::ATOMIC_STORE_I32_A64, WebAssembly::ATOMIC_STORE_I32_A64_S },
  { WebAssembly::ATOMIC_STORE_I64_A32, WebAssembly::ATOMIC_STORE_I64_A32_S },
  { WebAssembly::ATOMIC_STORE_I64_A64, WebAssembly::ATOMIC_STORE_I64_A64_S },
  { WebAssembly::AVGR_U_I16x8, WebAssembly::AVGR_U_I16x8_S },
  { WebAssembly::AVGR_U_I8x16, WebAssembly::AVGR_U_I8x16_S },
  { WebAssembly::BITMASK_I16x8, WebAssembly::BITMASK_I16x8_S },
  { WebAssembly::BITMASK_I32x4, WebAssembly::BITMASK_I32x4_S },
  { WebAssembly::BITMASK_I64x2, WebAssembly::BITMASK_I64x2_S },
  { WebAssembly::BITMASK_I8x16, WebAssembly::BITMASK_I8x16_S },
  { WebAssembly::BITSELECT, WebAssembly::BITSELECT_S },
  { WebAssembly::BLOCK, WebAssembly::BLOCK_S },
  { WebAssembly::BR, WebAssembly::BR_S },
  { WebAssembly::BR_IF, WebAssembly::BR_IF_S },
  { WebAssembly::BR_TABLE_I32, WebAssembly::BR_TABLE_I32_S },
  { WebAssembly::BR_TABLE_I64, WebAssembly::BR_TABLE_I64_S },
  { WebAssembly::BR_UNLESS, WebAssembly::BR_UNLESS_S },
  { WebAssembly::CALL, WebAssembly::CALL_S },
  { WebAssembly::CALL_INDIRECT, WebAssembly::CALL_INDIRECT_S },
  { WebAssembly::CATCH, WebAssembly::CATCH_S },
  { WebAssembly::CATCH_ALL, WebAssembly::CATCH_ALL_S },
  { WebAssembly::CEIL_F32, WebAssembly::CEIL_F32_S },
  { WebAssembly::CEIL_F32x4, WebAssembly::CEIL_F32x4_S },
  { WebAssembly::CEIL_F64, WebAssembly::CEIL_F64_S },
  { WebAssembly::CEIL_F64x2, WebAssembly::CEIL_F64x2_S },
  { WebAssembly::CLZ_I32, WebAssembly::CLZ_I32_S },
  { WebAssembly::CLZ_I64, WebAssembly::CLZ_I64_S },
  { WebAssembly::CONST_F32, WebAssembly::CONST_F32_S },
  { WebAssembly::CONST_F64, WebAssembly::CONST_F64_S },
  { WebAssembly::CONST_I32, WebAssembly::CONST_I32_S },
  { WebAssembly::CONST_I64, WebAssembly::CONST_I64_S },
  { WebAssembly::CONST_V128_F32x4, WebAssembly::CONST_V128_F32x4_S },
  { WebAssembly::CONST_V128_F64x2, WebAssembly::CONST_V128_F64x2_S },
  { WebAssembly::CONST_V128_I16x8, WebAssembly::CONST_V128_I16x8_S },
  { WebAssembly::CONST_V128_I32x4, WebAssembly::CONST_V128_I32x4_S },
  { WebAssembly::CONST_V128_I64x2, WebAssembly::CONST_V128_I64x2_S },
  { WebAssembly::CONST_V128_I8x16, WebAssembly::CONST_V128_I8x16_S },
  { WebAssembly::COPYSIGN_F32, WebAssembly::COPYSIGN_F32_S },
  { WebAssembly::COPYSIGN_F64, WebAssembly::COPYSIGN_F64_S },
  { WebAssembly::COPY_EXTERNREF, WebAssembly::COPY_EXTERNREF_S },
  { WebAssembly::COPY_F32, WebAssembly::COPY_F32_S },
  { WebAssembly::COPY_F64, WebAssembly::COPY_F64_S },
  { WebAssembly::COPY_FUNCREF, WebAssembly::COPY_FUNCREF_S },
  { WebAssembly::COPY_I32, WebAssembly::COPY_I32_S },
  { WebAssembly::COPY_I64, WebAssembly::COPY_I64_S },
  { WebAssembly::COPY_V128, WebAssembly::COPY_V128_S },
  { WebAssembly::CTZ_I32, WebAssembly::CTZ_I32_S },
  { WebAssembly::CTZ_I64, WebAssembly::CTZ_I64_S },
  { WebAssembly::DEBUG_UNREACHABLE, WebAssembly::DEBUG_UNREACHABLE_S },
  { WebAssembly::DELEGATE, WebAssembly::DELEGATE_S },
  { WebAssembly::DIV_F32, WebAssembly::DIV_F32_S },
  { WebAssembly::DIV_F32x4, WebAssembly::DIV_F32x4_S },
  { WebAssembly::DIV_F64, WebAssembly::DIV_F64_S },
  { WebAssembly::DIV_F64x2, WebAssembly::DIV_F64x2_S },
  { WebAssembly::DIV_S_I32, WebAssembly::DIV_S_I32_S },
  { WebAssembly::DIV_S_I64, WebAssembly::DIV_S_I64_S },
  { WebAssembly::DIV_U_I32, WebAssembly::DIV_U_I32_S },
  { WebAssembly::DIV_U_I64, WebAssembly::DIV_U_I64_S },
  { WebAssembly::DOT, WebAssembly::DOT_S },
  { WebAssembly::DROP_EXTERNREF, WebAssembly::DROP_EXTERNREF_S },
  { WebAssembly::DROP_F32, WebAssembly::DROP_F32_S },
  { WebAssembly::DROP_F64, WebAssembly::DROP_F64_S },
  { WebAssembly::DROP_FUNCREF, WebAssembly::DROP_FUNCREF_S },
  { WebAssembly::DROP_I32, WebAssembly::DROP_I32_S },
  { WebAssembly::DROP_I64, WebAssembly::DROP_I64_S },
  { WebAssembly::DROP_V128, WebAssembly::DROP_V128_S },
  { WebAssembly::ELSE, WebAssembly::ELSE_S },
  { WebAssembly::END, WebAssembly::END_S },
  { WebAssembly::END_BLOCK, WebAssembly::END_BLOCK_S },
  { WebAssembly::END_FUNCTION, WebAssembly::END_FUNCTION_S },
  { WebAssembly::END_IF, WebAssembly::END_IF_S },
  { WebAssembly::END_LOOP, WebAssembly::END_LOOP_S },
  { WebAssembly::END_TRY, WebAssembly::END_TRY_S },
  { WebAssembly::EQZ_I32, WebAssembly::EQZ_I32_S },
  { WebAssembly::EQZ_I64, WebAssembly::EQZ_I64_S },
  { WebAssembly::EQ_F32, WebAssembly::EQ_F32_S },
  { WebAssembly::EQ_F32x4, WebAssembly::EQ_F32x4_S },
  { WebAssembly::EQ_F64, WebAssembly::EQ_F64_S },
  { WebAssembly::EQ_F64x2, WebAssembly::EQ_F64x2_S },
  { WebAssembly::EQ_I16x8, WebAssembly::EQ_I16x8_S },
  { WebAssembly::EQ_I32, WebAssembly::EQ_I32_S },
  { WebAssembly::EQ_I32x4, WebAssembly::EQ_I32x4_S },
  { WebAssembly::EQ_I64, WebAssembly::EQ_I64_S },
  { WebAssembly::EQ_I64x2, WebAssembly::EQ_I64x2_S },
  { WebAssembly::EQ_I8x16, WebAssembly::EQ_I8x16_S },
  { WebAssembly::EXTMUL_HIGH_S_I16x8, WebAssembly::EXTMUL_HIGH_S_I16x8_S },
  { WebAssembly::EXTMUL_HIGH_S_I32x4, WebAssembly::EXTMUL_HIGH_S_I32x4_S },
  { WebAssembly::EXTMUL_HIGH_S_I64x2, WebAssembly::EXTMUL_HIGH_S_I64x2_S },
  { WebAssembly::EXTMUL_HIGH_U_I16x8, WebAssembly::EXTMUL_HIGH_U_I16x8_S },
  { WebAssembly::EXTMUL_HIGH_U_I32x4, WebAssembly::EXTMUL_HIGH_U_I32x4_S },
  { WebAssembly::EXTMUL_HIGH_U_I64x2, WebAssembly::EXTMUL_HIGH_U_I64x2_S },
  { WebAssembly::EXTMUL_LOW_S_I16x8, WebAssembly::EXTMUL_LOW_S_I16x8_S },
  { WebAssembly::EXTMUL_LOW_S_I32x4, WebAssembly::EXTMUL_LOW_S_I32x4_S },
  { WebAssembly::EXTMUL_LOW_S_I64x2, WebAssembly::EXTMUL_LOW_S_I64x2_S },
  { WebAssembly::EXTMUL_LOW_U_I16x8, WebAssembly::EXTMUL_LOW_U_I16x8_S },
  { WebAssembly::EXTMUL_LOW_U_I32x4, WebAssembly::EXTMUL_LOW_U_I32x4_S },
  { WebAssembly::EXTMUL_LOW_U_I64x2, WebAssembly::EXTMUL_LOW_U_I64x2_S },
  { WebAssembly::EXTRACT_LANE_F32x4, WebAssembly::EXTRACT_LANE_F32x4_S },
  { WebAssembly::EXTRACT_LANE_F64x2, WebAssembly::EXTRACT_LANE_F64x2_S },
  { WebAssembly::EXTRACT_LANE_I16x8_s, WebAssembly::EXTRACT_LANE_I16x8_s_S },
  { WebAssembly::EXTRACT_LANE_I16x8_u, WebAssembly::EXTRACT_LANE_I16x8_u_S },
  { WebAssembly::EXTRACT_LANE_I32x4, WebAssembly::EXTRACT_LANE_I32x4_S },
  { WebAssembly::EXTRACT_LANE_I64x2, WebAssembly::EXTRACT_LANE_I64x2_S },
  { WebAssembly::EXTRACT_LANE_I8x16_s, WebAssembly::EXTRACT_LANE_I8x16_s_S },
  { WebAssembly::EXTRACT_LANE_I8x16_u, WebAssembly::EXTRACT_LANE_I8x16_u_S },
  { WebAssembly::F32_CONVERT_S_I32, WebAssembly::F32_CONVERT_S_I32_S },
  { WebAssembly::F32_CONVERT_S_I64, WebAssembly::F32_CONVERT_S_I64_S },
  { WebAssembly::F32_CONVERT_U_I32, WebAssembly::F32_CONVERT_U_I32_S },
  { WebAssembly::F32_CONVERT_U_I64, WebAssembly::F32_CONVERT_U_I64_S },
  { WebAssembly::F32_DEMOTE_F64, WebAssembly::F32_DEMOTE_F64_S },
  { WebAssembly::F32_REINTERPRET_I32, WebAssembly::F32_REINTERPRET_I32_S },
  { WebAssembly::F64_CONVERT_S_I32, WebAssembly::F64_CONVERT_S_I32_S },
  { WebAssembly::F64_CONVERT_S_I64, WebAssembly::F64_CONVERT_S_I64_S },
  { WebAssembly::F64_CONVERT_U_I32, WebAssembly::F64_CONVERT_U_I32_S },
  { WebAssembly::F64_CONVERT_U_I64, WebAssembly::F64_CONVERT_U_I64_S },
  { WebAssembly::F64_PROMOTE_F32, WebAssembly::F64_PROMOTE_F32_S },
  { WebAssembly::F64_REINTERPRET_I64, WebAssembly::F64_REINTERPRET_I64_S },
  { WebAssembly::FALLTHROUGH_RETURN, WebAssembly::FALLTHROUGH_RETURN_S },
  { WebAssembly::FLOOR_F32, WebAssembly::FLOOR_F32_S },
  { WebAssembly::FLOOR_F32x4, WebAssembly::FLOOR_F32x4_S },
  { WebAssembly::FLOOR_F64, WebAssembly::FLOOR_F64_S },
  { WebAssembly::FLOOR_F64x2, WebAssembly::FLOOR_F64x2_S },
  { WebAssembly::FP_TO_SINT_I32_F32, WebAssembly::FP_TO_SINT_I32_F32_S },
  { WebAssembly::FP_TO_SINT_I32_F64, WebAssembly::FP_TO_SINT_I32_F64_S },
  { WebAssembly::FP_TO_SINT_I64_F32, WebAssembly::FP_TO_SINT_I64_F32_S },
  { WebAssembly::FP_TO_SINT_I64_F64, WebAssembly::FP_TO_SINT_I64_F64_S },
  { WebAssembly::FP_TO_UINT_I32_F32, WebAssembly::FP_TO_UINT_I32_F32_S },
  { WebAssembly::FP_TO_UINT_I32_F64, WebAssembly::FP_TO_UINT_I32_F64_S },
  { WebAssembly::FP_TO_UINT_I64_F32, WebAssembly::FP_TO_UINT_I64_F32_S },
  { WebAssembly::FP_TO_UINT_I64_F64, WebAssembly::FP_TO_UINT_I64_F64_S },
  { WebAssembly::GE_F32, WebAssembly::GE_F32_S },
  { WebAssembly::GE_F32x4, WebAssembly::GE_F32x4_S },
  { WebAssembly::GE_F64, WebAssembly::GE_F64_S },
  { WebAssembly::GE_F64x2, WebAssembly::GE_F64x2_S },
  { WebAssembly::GE_S_I16x8, WebAssembly::GE_S_I16x8_S },
  { WebAssembly::GE_S_I32, WebAssembly::GE_S_I32_S },
  { WebAssembly::GE_S_I32x4, WebAssembly::GE_S_I32x4_S },
  { WebAssembly::GE_S_I64, WebAssembly::GE_S_I64_S },
  { WebAssembly::GE_S_I64x2, WebAssembly::GE_S_I64x2_S },
  { WebAssembly::GE_S_I8x16, WebAssembly::GE_S_I8x16_S },
  { WebAssembly::GE_U_I16x8, WebAssembly::GE_U_I16x8_S },
  { WebAssembly::GE_U_I32, WebAssembly::GE_U_I32_S },
  { WebAssembly::GE_U_I32x4, WebAssembly::GE_U_I32x4_S },
  { WebAssembly::GE_U_I64, WebAssembly::GE_U_I64_S },
  { WebAssembly::GE_U_I8x16, WebAssembly::GE_U_I8x16_S },
  { WebAssembly::GLOBAL_GET_EXTERNREF, WebAssembly::GLOBAL_GET_EXTERNREF_S },
  { WebAssembly::GLOBAL_GET_F32, WebAssembly::GLOBAL_GET_F32_S },
  { WebAssembly::GLOBAL_GET_F64, WebAssembly::GLOBAL_GET_F64_S },
  { WebAssembly::GLOBAL_GET_FUNCREF, WebAssembly::GLOBAL_GET_FUNCREF_S },
  { WebAssembly::GLOBAL_GET_I32, WebAssembly::GLOBAL_GET_I32_S },
  { WebAssembly::GLOBAL_GET_I64, WebAssembly::GLOBAL_GET_I64_S },
  { WebAssembly::GLOBAL_GET_V128, WebAssembly::GLOBAL_GET_V128_S },
  { WebAssembly::GLOBAL_SET_EXTERNREF, WebAssembly::GLOBAL_SET_EXTERNREF_S },
  { WebAssembly::GLOBAL_SET_F32, WebAssembly::GLOBAL_SET_F32_S },
  { WebAssembly::GLOBAL_SET_F64, WebAssembly::GLOBAL_SET_F64_S },
  { WebAssembly::GLOBAL_SET_FUNCREF, WebAssembly::GLOBAL_SET_FUNCREF_S },
  { WebAssembly::GLOBAL_SET_I32, WebAssembly::GLOBAL_SET_I32_S },
  { WebAssembly::GLOBAL_SET_I64, WebAssembly::GLOBAL_SET_I64_S },
  { WebAssembly::GLOBAL_SET_V128, WebAssembly::GLOBAL_SET_V128_S },
  { WebAssembly::GT_F32, WebAssembly::GT_F32_S },
  { WebAssembly::GT_F32x4, WebAssembly::GT_F32x4_S },
  { WebAssembly::GT_F64, WebAssembly::GT_F64_S },
  { WebAssembly::GT_F64x2, WebAssembly::GT_F64x2_S },
  { WebAssembly::GT_S_I16x8, WebAssembly::GT_S_I16x8_S },
  { WebAssembly::GT_S_I32, WebAssembly::GT_S_I32_S },
  { WebAssembly::GT_S_I32x4, WebAssembly::GT_S_I32x4_S },
  { WebAssembly::GT_S_I64, WebAssembly::GT_S_I64_S },
  { WebAssembly::GT_S_I64x2, WebAssembly::GT_S_I64x2_S },
  { WebAssembly::GT_S_I8x16, WebAssembly::GT_S_I8x16_S },
  { WebAssembly::GT_U_I16x8, WebAssembly::GT_U_I16x8_S },
  { WebAssembly::GT_U_I32, WebAssembly::GT_U_I32_S },
  { WebAssembly::GT_U_I32x4, WebAssembly::GT_U_I32x4_S },
  { WebAssembly::GT_U_I64, WebAssembly::GT_U_I64_S },
  { WebAssembly::GT_U_I8x16, WebAssembly::GT_U_I8x16_S },
  { WebAssembly::I32_EXTEND16_S_I32, WebAssembly::I32_EXTEND16_S_I32_S },
  { WebAssembly::I32_EXTEND8_S_I32, WebAssembly::I32_EXTEND8_S_I32_S },
  { WebAssembly::I32_REINTERPRET_F32, WebAssembly::I32_REINTERPRET_F32_S },
  { WebAssembly::I32_TRUNC_S_F32, WebAssembly::I32_TRUNC_S_F32_S },
  { WebAssembly::I32_TRUNC_S_F64, WebAssembly::I32_TRUNC_S_F64_S },
  { WebAssembly::I32_TRUNC_S_SAT_F32, WebAssembly::I32_TRUNC_S_SAT_F32_S },
  { WebAssembly::I32_TRUNC_S_SAT_F64, WebAssembly::I32_TRUNC_S_SAT_F64_S },
  { WebAssembly::I32_TRUNC_U_F32, WebAssembly::I32_TRUNC_U_F32_S },
  { WebAssembly::I32_TRUNC_U_F64, WebAssembly::I32_TRUNC_U_F64_S },
  { WebAssembly::I32_TRUNC_U_SAT_F32, WebAssembly::I32_TRUNC_U_SAT_F32_S },
  { WebAssembly::I32_TRUNC_U_SAT_F64, WebAssembly::I32_TRUNC_U_SAT_F64_S },
  { WebAssembly::I32_WRAP_I64, WebAssembly::I32_WRAP_I64_S },
  { WebAssembly::I64_EXTEND16_S_I64, WebAssembly::I64_EXTEND16_S_I64_S },
  { WebAssembly::I64_EXTEND32_S_I64, WebAssembly::I64_EXTEND32_S_I64_S },
  { WebAssembly::I64_EXTEND8_S_I64, WebAssembly::I64_EXTEND8_S_I64_S },
  { WebAssembly::I64_EXTEND_S_I32, WebAssembly::I64_EXTEND_S_I32_S },
  { WebAssembly::I64_EXTEND_U_I32, WebAssembly::I64_EXTEND_U_I32_S },
  { WebAssembly::I64_REINTERPRET_F64, WebAssembly::I64_REINTERPRET_F64_S },
  { WebAssembly::I64_TRUNC_S_F32, WebAssembly::I64_TRUNC_S_F32_S },
  { WebAssembly::I64_TRUNC_S_F64, WebAssembly::I64_TRUNC_S_F64_S },
  { WebAssembly::I64_TRUNC_S_SAT_F32, WebAssembly::I64_TRUNC_S_SAT_F32_S },
  { WebAssembly::I64_TRUNC_S_SAT_F64, WebAssembly::I64_TRUNC_S_SAT_F64_S },
  { WebAssembly::I64_TRUNC_U_F32, WebAssembly::I64_TRUNC_U_F32_S },
  { WebAssembly::I64_TRUNC_U_F64, WebAssembly::I64_TRUNC_U_F64_S },
  { WebAssembly::I64_TRUNC_U_SAT_F32, WebAssembly::I64_TRUNC_U_SAT_F32_S },
  { WebAssembly::I64_TRUNC_U_SAT_F64, WebAssembly::I64_TRUNC_U_SAT_F64_S },
  { WebAssembly::IF, WebAssembly::IF_S },
  { WebAssembly::LANESELECT_I16x8, WebAssembly::LANESELECT_I16x8_S },
  { WebAssembly::LANESELECT_I32x4, WebAssembly::LANESELECT_I32x4_S },
  { WebAssembly::LANESELECT_I64x2, WebAssembly::LANESELECT_I64x2_S },
  { WebAssembly::LANESELECT_I8x16, WebAssembly::LANESELECT_I8x16_S },
  { WebAssembly::LE_F32, WebAssembly::LE_F32_S },
  { WebAssembly::LE_F32x4, WebAssembly::LE_F32x4_S },
  { WebAssembly::LE_F64, WebAssembly::LE_F64_S },
  { WebAssembly::LE_F64x2, WebAssembly::LE_F64x2_S },
  { WebAssembly::LE_S_I16x8, WebAssembly::LE_S_I16x8_S },
  { WebAssembly::LE_S_I32, WebAssembly::LE_S_I32_S },
  { WebAssembly::LE_S_I32x4, WebAssembly::LE_S_I32x4_S },
  { WebAssembly::LE_S_I64, WebAssembly::LE_S_I64_S },
  { WebAssembly::LE_S_I64x2, WebAssembly::LE_S_I64x2_S },
  { WebAssembly::LE_S_I8x16, WebAssembly::LE_S_I8x16_S },
  { WebAssembly::LE_U_I16x8, WebAssembly::LE_U_I16x8_S },
  { WebAssembly::LE_U_I32, WebAssembly::LE_U_I32_S },
  { WebAssembly::LE_U_I32x4, WebAssembly::LE_U_I32x4_S },
  { WebAssembly::LE_U_I64, WebAssembly::LE_U_I64_S },
  { WebAssembly::LE_U_I8x16, WebAssembly::LE_U_I8x16_S },
  { WebAssembly::LOAD16_SPLAT_A32, WebAssembly::LOAD16_SPLAT_A32_S },
  { WebAssembly::LOAD16_SPLAT_A64, WebAssembly::LOAD16_SPLAT_A64_S },
  { WebAssembly::LOAD16_S_I32_A32, WebAssembly::LOAD16_S_I32_A32_S },
  { WebAssembly::LOAD16_S_I32_A64, WebAssembly::LOAD16_S_I32_A64_S },
  { WebAssembly::LOAD16_S_I64_A32, WebAssembly::LOAD16_S_I64_A32_S },
  { WebAssembly::LOAD16_S_I64_A64, WebAssembly::LOAD16_S_I64_A64_S },
  { WebAssembly::LOAD16_U_I32_A32, WebAssembly::LOAD16_U_I32_A32_S },
  { WebAssembly::LOAD16_U_I32_A64, WebAssembly::LOAD16_U_I32_A64_S },
  { WebAssembly::LOAD16_U_I64_A32, WebAssembly::LOAD16_U_I64_A32_S },
  { WebAssembly::LOAD16_U_I64_A64, WebAssembly::LOAD16_U_I64_A64_S },
  { WebAssembly::LOAD32_SPLAT_A32, WebAssembly::LOAD32_SPLAT_A32_S },
  { WebAssembly::LOAD32_SPLAT_A64, WebAssembly::LOAD32_SPLAT_A64_S },
  { WebAssembly::LOAD32_S_I64_A32, WebAssembly::LOAD32_S_I64_A32_S },
  { WebAssembly::LOAD32_S_I64_A64, WebAssembly::LOAD32_S_I64_A64_S },
  { WebAssembly::LOAD32_U_I64_A32, WebAssembly::LOAD32_U_I64_A32_S },
  { WebAssembly::LOAD32_U_I64_A64, WebAssembly::LOAD32_U_I64_A64_S },
  { WebAssembly::LOAD64_SPLAT_A32, WebAssembly::LOAD64_SPLAT_A32_S },
  { WebAssembly::LOAD64_SPLAT_A64, WebAssembly::LOAD64_SPLAT_A64_S },
  { WebAssembly::LOAD8_SPLAT_A32, WebAssembly::LOAD8_SPLAT_A32_S },
  { WebAssembly::LOAD8_SPLAT_A64, WebAssembly::LOAD8_SPLAT_A64_S },
  { WebAssembly::LOAD8_S_I32_A32, WebAssembly::LOAD8_S_I32_A32_S },
  { WebAssembly::LOAD8_S_I32_A64, WebAssembly::LOAD8_S_I32_A64_S },
  { WebAssembly::LOAD8_S_I64_A32, WebAssembly::LOAD8_S_I64_A32_S },
  { WebAssembly::LOAD8_S_I64_A64, WebAssembly::LOAD8_S_I64_A64_S },
  { WebAssembly::LOAD8_U_I32_A32, WebAssembly::LOAD8_U_I32_A32_S },
  { WebAssembly::LOAD8_U_I32_A64, WebAssembly::LOAD8_U_I32_A64_S },
  { WebAssembly::LOAD8_U_I64_A32, WebAssembly::LOAD8_U_I64_A32_S },
  { WebAssembly::LOAD8_U_I64_A64, WebAssembly::LOAD8_U_I64_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A32, WebAssembly::LOAD_EXTEND_S_I16x8_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A64, WebAssembly::LOAD_EXTEND_S_I16x8_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A32, WebAssembly::LOAD_EXTEND_S_I32x4_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A64, WebAssembly::LOAD_EXTEND_S_I32x4_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A32, WebAssembly::LOAD_EXTEND_S_I64x2_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A64, WebAssembly::LOAD_EXTEND_S_I64x2_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A32, WebAssembly::LOAD_EXTEND_U_I16x8_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A64, WebAssembly::LOAD_EXTEND_U_I16x8_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A32, WebAssembly::LOAD_EXTEND_U_I32x4_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A64, WebAssembly::LOAD_EXTEND_U_I32x4_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A32, WebAssembly::LOAD_EXTEND_U_I64x2_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A64, WebAssembly::LOAD_EXTEND_U_I64x2_A64_S },
  { WebAssembly::LOAD_F32_A32, WebAssembly::LOAD_F32_A32_S },
  { WebAssembly::LOAD_F32_A64, WebAssembly::LOAD_F32_A64_S },
  { WebAssembly::LOAD_F64_A32, WebAssembly::LOAD_F64_A32_S },
  { WebAssembly::LOAD_F64_A64, WebAssembly::LOAD_F64_A64_S },
  { WebAssembly::LOAD_I32_A32, WebAssembly::LOAD_I32_A32_S },
  { WebAssembly::LOAD_I32_A64, WebAssembly::LOAD_I32_A64_S },
  { WebAssembly::LOAD_I64_A32, WebAssembly::LOAD_I64_A32_S },
  { WebAssembly::LOAD_I64_A64, WebAssembly::LOAD_I64_A64_S },
  { WebAssembly::LOAD_LANE_I16x8_A32, WebAssembly::LOAD_LANE_I16x8_A32_S },
  { WebAssembly::LOAD_LANE_I16x8_A64, WebAssembly::LOAD_LANE_I16x8_A64_S },
  { WebAssembly::LOAD_LANE_I32x4_A32, WebAssembly::LOAD_LANE_I32x4_A32_S },
  { WebAssembly::LOAD_LANE_I32x4_A64, WebAssembly::LOAD_LANE_I32x4_A64_S },
  { WebAssembly::LOAD_LANE_I64x2_A32, WebAssembly::LOAD_LANE_I64x2_A32_S },
  { WebAssembly::LOAD_LANE_I64x2_A64, WebAssembly::LOAD_LANE_I64x2_A64_S },
  { WebAssembly::LOAD_LANE_I8x16_A32, WebAssembly::LOAD_LANE_I8x16_A32_S },
  { WebAssembly::LOAD_LANE_I8x16_A64, WebAssembly::LOAD_LANE_I8x16_A64_S },
  { WebAssembly::LOAD_V128_A32, WebAssembly::LOAD_V128_A32_S },
  { WebAssembly::LOAD_V128_A64, WebAssembly::LOAD_V128_A64_S },
  { WebAssembly::LOAD_ZERO_I32x4_A32, WebAssembly::LOAD_ZERO_I32x4_A32_S },
  { WebAssembly::LOAD_ZERO_I32x4_A64, WebAssembly::LOAD_ZERO_I32x4_A64_S },
  { WebAssembly::LOAD_ZERO_I64x2_A32, WebAssembly::LOAD_ZERO_I64x2_A32_S },
  { WebAssembly::LOAD_ZERO_I64x2_A64, WebAssembly::LOAD_ZERO_I64x2_A64_S },
  { WebAssembly::LOCAL_GET_EXTERNREF, WebAssembly::LOCAL_GET_EXTERNREF_S },
  { WebAssembly::LOCAL_GET_F32, WebAssembly::LOCAL_GET_F32_S },
  { WebAssembly::LOCAL_GET_F64, WebAssembly::LOCAL_GET_F64_S },
  { WebAssembly::LOCAL_GET_FUNCREF, WebAssembly::LOCAL_GET_FUNCREF_S },
  { WebAssembly::LOCAL_GET_I32, WebAssembly::LOCAL_GET_I32_S },
  { WebAssembly::LOCAL_GET_I64, WebAssembly::LOCAL_GET_I64_S },
  { WebAssembly::LOCAL_GET_V128, WebAssembly::LOCAL_GET_V128_S },
  { WebAssembly::LOCAL_SET_EXTERNREF, WebAssembly::LOCAL_SET_EXTERNREF_S },
  { WebAssembly::LOCAL_SET_F32, WebAssembly::LOCAL_SET_F32_S },
  { WebAssembly::LOCAL_SET_F64, WebAssembly::LOCAL_SET_F64_S },
  { WebAssembly::LOCAL_SET_FUNCREF, WebAssembly::LOCAL_SET_FUNCREF_S },
  { WebAssembly::LOCAL_SET_I32, WebAssembly::LOCAL_SET_I32_S },
  { WebAssembly::LOCAL_SET_I64, WebAssembly::LOCAL_SET_I64_S },
  { WebAssembly::LOCAL_SET_V128, WebAssembly::LOCAL_SET_V128_S },
  { WebAssembly::LOCAL_TEE_EXTERNREF, WebAssembly::LOCAL_TEE_EXTERNREF_S },
  { WebAssembly::LOCAL_TEE_F32, WebAssembly::LOCAL_TEE_F32_S },
  { WebAssembly::LOCAL_TEE_F64, WebAssembly::LOCAL_TEE_F64_S },
  { WebAssembly::LOCAL_TEE_FUNCREF, WebAssembly::LOCAL_TEE_FUNCREF_S },
  { WebAssembly::LOCAL_TEE_I32, WebAssembly::LOCAL_TEE_I32_S },
  { WebAssembly::LOCAL_TEE_I64, WebAssembly::LOCAL_TEE_I64_S },
  { WebAssembly::LOCAL_TEE_V128, WebAssembly::LOCAL_TEE_V128_S },
  { WebAssembly::LOOP, WebAssembly::LOOP_S },
  { WebAssembly::LT_F32, WebAssembly::LT_F32_S },
  { WebAssembly::LT_F32x4, WebAssembly::LT_F32x4_S },
  { WebAssembly::LT_F64, WebAssembly::LT_F64_S },
  { WebAssembly::LT_F64x2, WebAssembly::LT_F64x2_S },
  { WebAssembly::LT_S_I16x8, WebAssembly::LT_S_I16x8_S },
  { WebAssembly::LT_S_I32, WebAssembly::LT_S_I32_S },
  { WebAssembly::LT_S_I32x4, WebAssembly::LT_S_I32x4_S },
  { WebAssembly::LT_S_I64, WebAssembly::LT_S_I64_S },
  { WebAssembly::LT_S_I64x2, WebAssembly::LT_S_I64x2_S },
  { WebAssembly::LT_S_I8x16, WebAssembly::LT_S_I8x16_S },
  { WebAssembly::LT_U_I16x8, WebAssembly::LT_U_I16x8_S },
  { WebAssembly::LT_U_I32, WebAssembly::LT_U_I32_S },
  { WebAssembly::LT_U_I32x4, WebAssembly::LT_U_I32x4_S },
  { WebAssembly::LT_U_I64, WebAssembly::LT_U_I64_S },
  { WebAssembly::LT_U_I8x16, WebAssembly::LT_U_I8x16_S },
  { WebAssembly::MADD_F32x4, WebAssembly::MADD_F32x4_S },
  { WebAssembly::MADD_F64x2, WebAssembly::MADD_F64x2_S },
  { WebAssembly::MAX_F32, WebAssembly::MAX_F32_S },
  { WebAssembly::MAX_F32x4, WebAssembly::MAX_F32x4_S },
  { WebAssembly::MAX_F64, WebAssembly::MAX_F64_S },
  { WebAssembly::MAX_F64x2, WebAssembly::MAX_F64x2_S },
  { WebAssembly::MAX_S_I16x8, WebAssembly::MAX_S_I16x8_S },
  { WebAssembly::MAX_S_I32x4, WebAssembly::MAX_S_I32x4_S },
  { WebAssembly::MAX_S_I8x16, WebAssembly::MAX_S_I8x16_S },
  { WebAssembly::MAX_U_I16x8, WebAssembly::MAX_U_I16x8_S },
  { WebAssembly::MAX_U_I32x4, WebAssembly::MAX_U_I32x4_S },
  { WebAssembly::MAX_U_I8x16, WebAssembly::MAX_U_I8x16_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32, WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A64, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32, WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A64, WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32, WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A64, WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S },
  { WebAssembly::MIN_F32, WebAssembly::MIN_F32_S },
  { WebAssembly::MIN_F32x4, WebAssembly::MIN_F32x4_S },
  { WebAssembly::MIN_F64, WebAssembly::MIN_F64_S },
  { WebAssembly::MIN_F64x2, WebAssembly::MIN_F64x2_S },
  { WebAssembly::MIN_S_I16x8, WebAssembly::MIN_S_I16x8_S },
  { WebAssembly::MIN_S_I32x4, WebAssembly::MIN_S_I32x4_S },
  { WebAssembly::MIN_S_I8x16, WebAssembly::MIN_S_I8x16_S },
  { WebAssembly::MIN_U_I16x8, WebAssembly::MIN_U_I16x8_S },
  { WebAssembly::MIN_U_I32x4, WebAssembly::MIN_U_I32x4_S },
  { WebAssembly::MIN_U_I8x16, WebAssembly::MIN_U_I8x16_S },
  { WebAssembly::MUL_F32, WebAssembly::MUL_F32_S },
  { WebAssembly::MUL_F32x4, WebAssembly::MUL_F32x4_S },
  { WebAssembly::MUL_F64, WebAssembly::MUL_F64_S },
  { WebAssembly::MUL_F64x2, WebAssembly::MUL_F64x2_S },
  { WebAssembly::MUL_I16x8, WebAssembly::MUL_I16x8_S },
  { WebAssembly::MUL_I32, WebAssembly::MUL_I32_S },
  { WebAssembly::MUL_I32x4, WebAssembly::MUL_I32x4_S },
  { WebAssembly::MUL_I64, WebAssembly::MUL_I64_S },
  { WebAssembly::MUL_I64x2, WebAssembly::MUL_I64x2_S },
  { WebAssembly::NARROW_S_I16x8, WebAssembly::NARROW_S_I16x8_S },
  { WebAssembly::NARROW_S_I8x16, WebAssembly::NARROW_S_I8x16_S },
  { WebAssembly::NARROW_U_I16x8, WebAssembly::NARROW_U_I16x8_S },
  { WebAssembly::NARROW_U_I8x16, WebAssembly::NARROW_U_I8x16_S },
  { WebAssembly::NEAREST_F32, WebAssembly::NEAREST_F32_S },
  { WebAssembly::NEAREST_F32x4, WebAssembly::NEAREST_F32x4_S },
  { WebAssembly::NEAREST_F64, WebAssembly::NEAREST_F64_S },
  { WebAssembly::NEAREST_F64x2, WebAssembly::NEAREST_F64x2_S },
  { WebAssembly::NEG_F32, WebAssembly::NEG_F32_S },
  { WebAssembly::NEG_F32x4, WebAssembly::NEG_F32x4_S },
  { WebAssembly::NEG_F64, WebAssembly::NEG_F64_S },
  { WebAssembly::NEG_F64x2, WebAssembly::NEG_F64x2_S },
  { WebAssembly::NEG_I16x8, WebAssembly::NEG_I16x8_S },
  { WebAssembly::NEG_I32x4, WebAssembly::NEG_I32x4_S },
  { WebAssembly::NEG_I64x2, WebAssembly::NEG_I64x2_S },
  { WebAssembly::NEG_I8x16, WebAssembly::NEG_I8x16_S },
  { WebAssembly::NE_F32, WebAssembly::NE_F32_S },
  { WebAssembly::NE_F32x4, WebAssembly::NE_F32x4_S },
  { WebAssembly::NE_F64, WebAssembly::NE_F64_S },
  { WebAssembly::NE_F64x2, WebAssembly::NE_F64x2_S },
  { WebAssembly::NE_I16x8, WebAssembly::NE_I16x8_S },
  { WebAssembly::NE_I32, WebAssembly::NE_I32_S },
  { WebAssembly::NE_I32x4, WebAssembly::NE_I32x4_S },
  { WebAssembly::NE_I64, WebAssembly::NE_I64_S },
  { WebAssembly::NE_I64x2, WebAssembly::NE_I64x2_S },
  { WebAssembly::NE_I8x16, WebAssembly::NE_I8x16_S },
  { WebAssembly::NMADD_F32x4, WebAssembly::NMADD_F32x4_S },
  { WebAssembly::NMADD_F64x2, WebAssembly::NMADD_F64x2_S },
  { WebAssembly::NOP, WebAssembly::NOP_S },
  { WebAssembly::NOT, WebAssembly::NOT_S },
  { WebAssembly::OR, WebAssembly::OR_S },
  { WebAssembly::OR_I32, WebAssembly::OR_I32_S },
  { WebAssembly::OR_I64, WebAssembly::OR_I64_S },
  { WebAssembly::PMAX_F32x4, WebAssembly::PMAX_F32x4_S },
  { WebAssembly::PMAX_F64x2, WebAssembly::PMAX_F64x2_S },
  { WebAssembly::PMIN_F32x4, WebAssembly::PMIN_F32x4_S },
  { WebAssembly::PMIN_F64x2, WebAssembly::PMIN_F64x2_S },
  { WebAssembly::POPCNT_I32, WebAssembly::POPCNT_I32_S },
  { WebAssembly::POPCNT_I64, WebAssembly::POPCNT_I64_S },
  { WebAssembly::POPCNT_I8x16, WebAssembly::POPCNT_I8x16_S },
  { WebAssembly::Q15MULR_SAT_S_I16x8, WebAssembly::Q15MULR_SAT_S_I16x8_S },
  { WebAssembly::REF_IS_NULL_EXTERNREF, WebAssembly::REF_IS_NULL_EXTERNREF_S },
  { WebAssembly::REF_IS_NULL_FUNCREF, WebAssembly::REF_IS_NULL_FUNCREF_S },
  { WebAssembly::REF_NULL_EXTERNREF, WebAssembly::REF_NULL_EXTERNREF_S },
  { WebAssembly::REF_NULL_FUNCREF, WebAssembly::REF_NULL_FUNCREF_S },
  { WebAssembly::RELAXED_DOT, WebAssembly::RELAXED_DOT_S },
  { WebAssembly::RELAXED_DOT_ADD, WebAssembly::RELAXED_DOT_ADD_S },
  { WebAssembly::RELAXED_DOT_BFLOAT, WebAssembly::RELAXED_DOT_BFLOAT_S },
  { WebAssembly::RELAXED_Q15MULR_S_I16x8, WebAssembly::RELAXED_Q15MULR_S_I16x8_S },
  { WebAssembly::RELAXED_SWIZZLE, WebAssembly::RELAXED_SWIZZLE_S },
  { WebAssembly::REM_S_I32, WebAssembly::REM_S_I32_S },
  { WebAssembly::REM_S_I64, WebAssembly::REM_S_I64_S },
  { WebAssembly::REM_U_I32, WebAssembly::REM_U_I32_S },
  { WebAssembly::REM_U_I64, WebAssembly::REM_U_I64_S },
  { WebAssembly::REPLACE_LANE_F32x4, WebAssembly::REPLACE_LANE_F32x4_S },
  { WebAssembly::REPLACE_LANE_F64x2, WebAssembly::REPLACE_LANE_F64x2_S },
  { WebAssembly::REPLACE_LANE_I16x8, WebAssembly::REPLACE_LANE_I16x8_S },
  { WebAssembly::REPLACE_LANE_I32x4, WebAssembly::REPLACE_LANE_I32x4_S },
  { WebAssembly::REPLACE_LANE_I64x2, WebAssembly::REPLACE_LANE_I64x2_S },
  { WebAssembly::REPLACE_LANE_I8x16, WebAssembly::REPLACE_LANE_I8x16_S },
  { WebAssembly::RETHROW, WebAssembly::RETHROW_S },
  { WebAssembly::RETURN, WebAssembly::RETURN_S },
  { WebAssembly::RET_CALL, WebAssembly::RET_CALL_S },
  { WebAssembly::RET_CALL_INDIRECT, WebAssembly::RET_CALL_INDIRECT_S },
  { WebAssembly::ROTL_I32, WebAssembly::ROTL_I32_S },
  { WebAssembly::ROTL_I64, WebAssembly::ROTL_I64_S },
  { WebAssembly::ROTR_I32, WebAssembly::ROTR_I32_S },
  { WebAssembly::ROTR_I64, WebAssembly::ROTR_I64_S },
  { WebAssembly::SELECT_EXTERNREF, WebAssembly::SELECT_EXTERNREF_S },
  { WebAssembly::SELECT_F32, WebAssembly::SELECT_F32_S },
  { WebAssembly::SELECT_F64, WebAssembly::SELECT_F64_S },
  { WebAssembly::SELECT_FUNCREF, WebAssembly::SELECT_FUNCREF_S },
  { WebAssembly::SELECT_I32, WebAssembly::SELECT_I32_S },
  { WebAssembly::SELECT_I64, WebAssembly::SELECT_I64_S },
  { WebAssembly::SELECT_V128, WebAssembly::SELECT_V128_S },
  { WebAssembly::SHL_I16x8, WebAssembly::SHL_I16x8_S },
  { WebAssembly::SHL_I32, WebAssembly::SHL_I32_S },
  { WebAssembly::SHL_I32x4, WebAssembly::SHL_I32x4_S },
  { WebAssembly::SHL_I64, WebAssembly::SHL_I64_S },
  { WebAssembly::SHL_I64x2, WebAssembly::SHL_I64x2_S },
  { WebAssembly::SHL_I8x16, WebAssembly::SHL_I8x16_S },
  { WebAssembly::SHR_S_I16x8, WebAssembly::SHR_S_I16x8_S },
  { WebAssembly::SHR_S_I32, WebAssembly::SHR_S_I32_S },
  { WebAssembly::SHR_S_I32x4, WebAssembly::SHR_S_I32x4_S },
  { WebAssembly::SHR_S_I64, WebAssembly::SHR_S_I64_S },
  { WebAssembly::SHR_S_I64x2, WebAssembly::SHR_S_I64x2_S },
  { WebAssembly::SHR_S_I8x16, WebAssembly::SHR_S_I8x16_S },
  { WebAssembly::SHR_U_I16x8, WebAssembly::SHR_U_I16x8_S },
  { WebAssembly::SHR_U_I32, WebAssembly::SHR_U_I32_S },
  { WebAssembly::SHR_U_I32x4, WebAssembly::SHR_U_I32x4_S },
  { WebAssembly::SHR_U_I64, WebAssembly::SHR_U_I64_S },
  { WebAssembly::SHR_U_I64x2, WebAssembly::SHR_U_I64x2_S },
  { WebAssembly::SHR_U_I8x16, WebAssembly::SHR_U_I8x16_S },
  { WebAssembly::SHUFFLE, WebAssembly::SHUFFLE_S },
  { WebAssembly::SIMD_RELAXED_FMAX_F32x4, WebAssembly::SIMD_RELAXED_FMAX_F32x4_S },
  { WebAssembly::SIMD_RELAXED_FMAX_F64x2, WebAssembly::SIMD_RELAXED_FMAX_F64x2_S },
  { WebAssembly::SIMD_RELAXED_FMIN_F32x4, WebAssembly::SIMD_RELAXED_FMIN_F32x4_S },
  { WebAssembly::SIMD_RELAXED_FMIN_F64x2, WebAssembly::SIMD_RELAXED_FMIN_F64x2_S },
  { WebAssembly::SPLAT_F32x4, WebAssembly::SPLAT_F32x4_S },
  { WebAssembly::SPLAT_F64x2, WebAssembly::SPLAT_F64x2_S },
  { WebAssembly::SPLAT_I16x8, WebAssembly::SPLAT_I16x8_S },
  { WebAssembly::SPLAT_I32x4, WebAssembly::SPLAT_I32x4_S },
  { WebAssembly::SPLAT_I64x2, WebAssembly::SPLAT_I64x2_S },
  { WebAssembly::SPLAT_I8x16, WebAssembly::SPLAT_I8x16_S },
  { WebAssembly::SQRT_F32, WebAssembly::SQRT_F32_S },
  { WebAssembly::SQRT_F32x4, WebAssembly::SQRT_F32x4_S },
  { WebAssembly::SQRT_F64, WebAssembly::SQRT_F64_S },
  { WebAssembly::SQRT_F64x2, WebAssembly::SQRT_F64x2_S },
  { WebAssembly::STORE16_I32_A32, WebAssembly::STORE16_I32_A32_S },
  { WebAssembly::STORE16_I32_A64, WebAssembly::STORE16_I32_A64_S },
  { WebAssembly::STORE16_I64_A32, WebAssembly::STORE16_I64_A32_S },
  { WebAssembly::STORE16_I64_A64, WebAssembly::STORE16_I64_A64_S },
  { WebAssembly::STORE32_I64_A32, WebAssembly::STORE32_I64_A32_S },
  { WebAssembly::STORE32_I64_A64, WebAssembly::STORE32_I64_A64_S },
  { WebAssembly::STORE8_I32_A32, WebAssembly::STORE8_I32_A32_S },
  { WebAssembly::STORE8_I32_A64, WebAssembly::STORE8_I32_A64_S },
  { WebAssembly::STORE8_I64_A32, WebAssembly::STORE8_I64_A32_S },
  { WebAssembly::STORE8_I64_A64, WebAssembly::STORE8_I64_A64_S },
  { WebAssembly::STORE_F32_A32, WebAssembly::STORE_F32_A32_S },
  { WebAssembly::STORE_F32_A64, WebAssembly::STORE_F32_A64_S },
  { WebAssembly::STORE_F64_A32, WebAssembly::STORE_F64_A32_S },
  { WebAssembly::STORE_F64_A64, WebAssembly::STORE_F64_A64_S },
  { WebAssembly::STORE_I32_A32, WebAssembly::STORE_I32_A32_S },
  { WebAssembly::STORE_I32_A64, WebAssembly::STORE_I32_A64_S },
  { WebAssembly::STORE_I64_A32, WebAssembly::STORE_I64_A32_S },
  { WebAssembly::STORE_I64_A64, WebAssembly::STORE_I64_A64_S },
  { WebAssembly::STORE_LANE_I16x8_A32, WebAssembly::STORE_LANE_I16x8_A32_S },
  { WebAssembly::STORE_LANE_I16x8_A64, WebAssembly::STORE_LANE_I16x8_A64_S },
  { WebAssembly::STORE_LANE_I32x4_A32, WebAssembly::STORE_LANE_I32x4_A32_S },
  { WebAssembly::STORE_LANE_I32x4_A64, WebAssembly::STORE_LANE_I32x4_A64_S },
  { WebAssembly::STORE_LANE_I64x2_A32, WebAssembly::STORE_LANE_I64x2_A32_S },
  { WebAssembly::STORE_LANE_I64x2_A64, WebAssembly::STORE_LANE_I64x2_A64_S },
  { WebAssembly::STORE_LANE_I8x16_A32, WebAssembly::STORE_LANE_I8x16_A32_S },
  { WebAssembly::STORE_LANE_I8x16_A64, WebAssembly::STORE_LANE_I8x16_A64_S },
  { WebAssembly::STORE_V128_A32, WebAssembly::STORE_V128_A32_S },
  { WebAssembly::STORE_V128_A64, WebAssembly::STORE_V128_A64_S },
  { WebAssembly::SUB_F32, WebAssembly::SUB_F32_S },
  { WebAssembly::SUB_F32x4, WebAssembly::SUB_F32x4_S },
  { WebAssembly::SUB_F64, WebAssembly::SUB_F64_S },
  { WebAssembly::SUB_F64x2, WebAssembly::SUB_F64x2_S },
  { WebAssembly::SUB_I16x8, WebAssembly::SUB_I16x8_S },
  { WebAssembly::SUB_I32, WebAssembly::SUB_I32_S },
  { WebAssembly::SUB_I32x4, WebAssembly::SUB_I32x4_S },
  { WebAssembly::SUB_I64, WebAssembly::SUB_I64_S },
  { WebAssembly::SUB_I64x2, WebAssembly::SUB_I64x2_S },
  { WebAssembly::SUB_I8x16, WebAssembly::SUB_I8x16_S },
  { WebAssembly::SUB_SAT_S_I16x8, WebAssembly::SUB_SAT_S_I16x8_S },
  { WebAssembly::SUB_SAT_S_I8x16, WebAssembly::SUB_SAT_S_I8x16_S },
  { WebAssembly::SUB_SAT_U_I16x8, WebAssembly::SUB_SAT_U_I16x8_S },
  { WebAssembly::SUB_SAT_U_I8x16, WebAssembly::SUB_SAT_U_I8x16_S },
  { WebAssembly::SWIZZLE, WebAssembly::SWIZZLE_S },
  { WebAssembly::TABLE_COPY, WebAssembly::TABLE_COPY_S },
  { WebAssembly::TABLE_FILL_EXTERNREF, WebAssembly::TABLE_FILL_EXTERNREF_S },
  { WebAssembly::TABLE_FILL_FUNCREF, WebAssembly::TABLE_FILL_FUNCREF_S },
  { WebAssembly::TABLE_GET_EXTERNREF, WebAssembly::TABLE_GET_EXTERNREF_S },
  { WebAssembly::TABLE_GET_FUNCREF, WebAssembly::TABLE_GET_FUNCREF_S },
  { WebAssembly::TABLE_GROW_EXTERNREF, WebAssembly::TABLE_GROW_EXTERNREF_S },
  { WebAssembly::TABLE_GROW_FUNCREF, WebAssembly::TABLE_GROW_FUNCREF_S },
  { WebAssembly::TABLE_SET_EXTERNREF, WebAssembly::TABLE_SET_EXTERNREF_S },
  { WebAssembly::TABLE_SET_FUNCREF, WebAssembly::TABLE_SET_FUNCREF_S },
  { WebAssembly::TABLE_SIZE, WebAssembly::TABLE_SIZE_S },
  { WebAssembly::TEE_EXTERNREF, WebAssembly::TEE_EXTERNREF_S },
  { WebAssembly::TEE_F32, WebAssembly::TEE_F32_S },
  { WebAssembly::TEE_F64, WebAssembly::TEE_F64_S },
  { WebAssembly::TEE_FUNCREF, WebAssembly::TEE_FUNCREF_S },
  { WebAssembly::TEE_I32, WebAssembly::TEE_I32_S },
  { WebAssembly::TEE_I64, WebAssembly::TEE_I64_S },
  { WebAssembly::TEE_V128, WebAssembly::TEE_V128_S },
  { WebAssembly::THROW, WebAssembly::THROW_S },
  { WebAssembly::TRUNC_F32, WebAssembly::TRUNC_F32_S },
  { WebAssembly::TRUNC_F32x4, WebAssembly::TRUNC_F32x4_S },
  { WebAssembly::TRUNC_F64, WebAssembly::TRUNC_F64_S },
  { WebAssembly::TRUNC_F64x2, WebAssembly::TRUNC_F64x2_S },
  { WebAssembly::TRY, WebAssembly::TRY_S },
  { WebAssembly::UNREACHABLE, WebAssembly::UNREACHABLE_S },
  { WebAssembly::XOR, WebAssembly::XOR_S },
  { WebAssembly::XOR_I32, WebAssembly::XOR_I32_S },
  { WebAssembly::XOR_I64, WebAssembly::XOR_I64_S },
  { WebAssembly::anonymous_4396MEMORY_GROW_A32, WebAssembly::anonymous_4396MEMORY_GROW_A32_S },
  { WebAssembly::anonymous_4396MEMORY_SIZE_A32, WebAssembly::anonymous_4396MEMORY_SIZE_A32_S },
  { WebAssembly::anonymous_4397MEMORY_GROW_A64, WebAssembly::anonymous_4397MEMORY_GROW_A64_S },
  { WebAssembly::anonymous_4397MEMORY_SIZE_A64, WebAssembly::anonymous_4397MEMORY_SIZE_A64_S },
  { WebAssembly::anonymous_6249DATA_DROP, WebAssembly::anonymous_6249DATA_DROP_S },
  { WebAssembly::anonymous_6249MEMORY_COPY_A32, WebAssembly::anonymous_6249MEMORY_COPY_A32_S },
  { WebAssembly::anonymous_6249MEMORY_FILL_A32, WebAssembly::anonymous_6249MEMORY_FILL_A32_S },
  { WebAssembly::anonymous_6249MEMORY_INIT_A32, WebAssembly::anonymous_6249MEMORY_INIT_A32_S },
  { WebAssembly::anonymous_6250DATA_DROP, WebAssembly::anonymous_6250DATA_DROP_S },
  { WebAssembly::anonymous_6250MEMORY_COPY_A64, WebAssembly::anonymous_6250MEMORY_COPY_A64_S },
  { WebAssembly::anonymous_6250MEMORY_FILL_A64, WebAssembly::anonymous_6250MEMORY_FILL_A64_S },
  { WebAssembly::anonymous_6250MEMORY_INIT_A64, WebAssembly::anonymous_6250MEMORY_INIT_A64_S },
  { WebAssembly::convert_low_s_F64x2, WebAssembly::convert_low_s_F64x2_S },
  { WebAssembly::convert_low_u_F64x2, WebAssembly::convert_low_u_F64x2_S },
  { WebAssembly::demote_zero_F32x4, WebAssembly::demote_zero_F32x4_S },
  { WebAssembly::extend_high_s_I16x8, WebAssembly::extend_high_s_I16x8_S },
  { WebAssembly::extend_high_s_I32x4, WebAssembly::extend_high_s_I32x4_S },
  { WebAssembly::extend_high_s_I64x2, WebAssembly::extend_high_s_I64x2_S },
  { WebAssembly::extend_high_u_I16x8, WebAssembly::extend_high_u_I16x8_S },
  { WebAssembly::extend_high_u_I32x4, WebAssembly::extend_high_u_I32x4_S },
  { WebAssembly::extend_high_u_I64x2, WebAssembly::extend_high_u_I64x2_S },
  { WebAssembly::extend_low_s_I16x8, WebAssembly::extend_low_s_I16x8_S },
  { WebAssembly::extend_low_s_I32x4, WebAssembly::extend_low_s_I32x4_S },
  { WebAssembly::extend_low_s_I64x2, WebAssembly::extend_low_s_I64x2_S },
  { WebAssembly::extend_low_u_I16x8, WebAssembly::extend_low_u_I16x8_S },
  { WebAssembly::extend_low_u_I32x4, WebAssembly::extend_low_u_I32x4_S },
  { WebAssembly::extend_low_u_I64x2, WebAssembly::extend_low_u_I64x2_S },
  { WebAssembly::fp_to_sint_I32x4, WebAssembly::fp_to_sint_I32x4_S },
  { WebAssembly::fp_to_uint_I32x4, WebAssembly::fp_to_uint_I32x4_S },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I16x8, WebAssembly::int_wasm_extadd_pairwise_signed_I16x8_S },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I32x4, WebAssembly::int_wasm_extadd_pairwise_signed_I32x4_S },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8, WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8_S },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4, WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_signed_I32x4, WebAssembly::int_wasm_relaxed_trunc_signed_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4, WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4, WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4, WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4_S },
  { WebAssembly::promote_low_F64x2, WebAssembly::promote_low_F64x2_S },
  { WebAssembly::sint_to_fp_F32x4, WebAssembly::sint_to_fp_F32x4_S },
  { WebAssembly::trunc_sat_zero_s_I32x4, WebAssembly::trunc_sat_zero_s_I32x4_S },
  { WebAssembly::trunc_sat_zero_u_I32x4, WebAssembly::trunc_sat_zero_u_I32x4_S },
  { WebAssembly::uint_to_fp_F32x4, WebAssembly::uint_to_fp_F32x4_S },
}; // End of getStackOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 750;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getStackOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getStackOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getStackOpcodeTable[mid][1];
}

// getWasm64Opcode
LLVM_READONLY
int getWasm64Opcode(uint16_t Opcode) {
static const uint16_t getWasm64OpcodeTable[][2] = {
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32, WebAssembly::ATOMIC_LOAD16_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32_S, WebAssembly::ATOMIC_LOAD16_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32, WebAssembly::ATOMIC_LOAD16_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32_S, WebAssembly::ATOMIC_LOAD16_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32, WebAssembly::ATOMIC_LOAD32_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32_S, WebAssembly::ATOMIC_LOAD32_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32, WebAssembly::ATOMIC_LOAD8_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32_S, WebAssembly::ATOMIC_LOAD8_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32, WebAssembly::ATOMIC_LOAD8_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32_S, WebAssembly::ATOMIC_LOAD8_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD_I32_A32, WebAssembly::ATOMIC_LOAD_I32_A64 },
  { WebAssembly::ATOMIC_LOAD_I32_A32_S, WebAssembly::ATOMIC_LOAD_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD_I64_A32, WebAssembly::ATOMIC_LOAD_I64_A64 },
  { WebAssembly::ATOMIC_LOAD_I64_A32_S, WebAssembly::ATOMIC_LOAD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32, WebAssembly::ATOMIC_RMW_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32, WebAssembly::ATOMIC_RMW_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32, WebAssembly::ATOMIC_RMW_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32_S, WebAssembly::ATOMIC_RMW_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32, WebAssembly::ATOMIC_RMW_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32_S, WebAssembly::ATOMIC_RMW_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32, WebAssembly::ATOMIC_RMW_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32_S, WebAssembly::ATOMIC_RMW_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32, WebAssembly::ATOMIC_RMW_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32_S, WebAssembly::ATOMIC_RMW_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32, WebAssembly::ATOMIC_RMW_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32, WebAssembly::ATOMIC_RMW_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32, WebAssembly::ATOMIC_RMW_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32, WebAssembly::ATOMIC_RMW_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32, WebAssembly::ATOMIC_RMW_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32, WebAssembly::ATOMIC_RMW_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_STORE16_I32_A32, WebAssembly::ATOMIC_STORE16_I32_A64 },
  { WebAssembly::ATOMIC_STORE16_I32_A32_S, WebAssembly::ATOMIC_STORE16_I32_A64_S },
  { WebAssembly::ATOMIC_STORE16_I64_A32, WebAssembly::ATOMIC_STORE16_I64_A64 },
  { WebAssembly::ATOMIC_STORE16_I64_A32_S, WebAssembly::ATOMIC_STORE16_I64_A64_S },
  { WebAssembly::ATOMIC_STORE32_I64_A32, WebAssembly::ATOMIC_STORE32_I64_A64 },
  { WebAssembly::ATOMIC_STORE32_I64_A32_S, WebAssembly::ATOMIC_STORE32_I64_A64_S },
  { WebAssembly::ATOMIC_STORE8_I32_A32, WebAssembly::ATOMIC_STORE8_I32_A64 },
  { WebAssembly::ATOMIC_STORE8_I32_A32_S, WebAssembly::ATOMIC_STORE8_I32_A64_S },
  { WebAssembly::ATOMIC_STORE8_I64_A32, WebAssembly::ATOMIC_STORE8_I64_A64 },
  { WebAssembly::ATOMIC_STORE8_I64_A32_S, WebAssembly::ATOMIC_STORE8_I64_A64_S },
  { WebAssembly::ATOMIC_STORE_I32_A32, WebAssembly::ATOMIC_STORE_I32_A64 },
  { WebAssembly::ATOMIC_STORE_I32_A32_S, WebAssembly::ATOMIC_STORE_I32_A64_S },
  { WebAssembly::ATOMIC_STORE_I64_A32, WebAssembly::ATOMIC_STORE_I64_A64 },
  { WebAssembly::ATOMIC_STORE_I64_A32_S, WebAssembly::ATOMIC_STORE_I64_A64_S },
  { WebAssembly::LOAD16_S_I32_A32, WebAssembly::LOAD16_S_I32_A64 },
  { WebAssembly::LOAD16_S_I32_A32_S, WebAssembly::LOAD16_S_I32_A64_S },
  { WebAssembly::LOAD16_S_I64_A32, WebAssembly::LOAD16_S_I64_A64 },
  { WebAssembly::LOAD16_S_I64_A32_S, WebAssembly::LOAD16_S_I64_A64_S },
  { WebAssembly::LOAD16_U_I32_A32, WebAssembly::LOAD16_U_I32_A64 },
  { WebAssembly::LOAD16_U_I32_A32_S, WebAssembly::LOAD16_U_I32_A64_S },
  { WebAssembly::LOAD16_U_I64_A32, WebAssembly::LOAD16_U_I64_A64 },
  { WebAssembly::LOAD16_U_I64_A32_S, WebAssembly::LOAD16_U_I64_A64_S },
  { WebAssembly::LOAD32_S_I64_A32, WebAssembly::LOAD32_S_I64_A64 },
  { WebAssembly::LOAD32_S_I64_A32_S, WebAssembly::LOAD32_S_I64_A64_S },
  { WebAssembly::LOAD32_U_I64_A32, WebAssembly::LOAD32_U_I64_A64 },
  { WebAssembly::LOAD32_U_I64_A32_S, WebAssembly::LOAD32_U_I64_A64_S },
  { WebAssembly::LOAD8_S_I32_A32, WebAssembly::LOAD8_S_I32_A64 },
  { WebAssembly::LOAD8_S_I32_A32_S, WebAssembly::LOAD8_S_I32_A64_S },
  { WebAssembly::LOAD8_S_I64_A32, WebAssembly::LOAD8_S_I64_A64 },
  { WebAssembly::LOAD8_S_I64_A32_S, WebAssembly::LOAD8_S_I64_A64_S },
  { WebAssembly::LOAD8_U_I32_A32, WebAssembly::LOAD8_U_I32_A64 },
  { WebAssembly::LOAD8_U_I32_A32_S, WebAssembly::LOAD8_U_I32_A64_S },
  { WebAssembly::LOAD8_U_I64_A32, WebAssembly::LOAD8_U_I64_A64 },
  { WebAssembly::LOAD8_U_I64_A32_S, WebAssembly::LOAD8_U_I64_A64_S },
  { WebAssembly::LOAD_F32_A32, WebAssembly::LOAD_F32_A64 },
  { WebAssembly::LOAD_F32_A32_S, WebAssembly::LOAD_F32_A64_S },
  { WebAssembly::LOAD_F64_A32, WebAssembly::LOAD_F64_A64 },
  { WebAssembly::LOAD_F64_A32_S, WebAssembly::LOAD_F64_A64_S },
  { WebAssembly::LOAD_I32_A32, WebAssembly::LOAD_I32_A64 },
  { WebAssembly::LOAD_I32_A32_S, WebAssembly::LOAD_I32_A64_S },
  { WebAssembly::LOAD_I64_A32, WebAssembly::LOAD_I64_A64 },
  { WebAssembly::LOAD_I64_A32_S, WebAssembly::LOAD_I64_A64_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64 },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32, WebAssembly::MEMORY_ATOMIC_WAIT32_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32, WebAssembly::MEMORY_ATOMIC_WAIT64_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S },
  { WebAssembly::STORE16_I32_A32, WebAssembly::STORE16_I32_A64 },
  { WebAssembly::STORE16_I32_A32_S, WebAssembly::STORE16_I32_A64_S },
  { WebAssembly::STORE16_I64_A32, WebAssembly::STORE16_I64_A64 },
  { WebAssembly::STORE16_I64_A32_S, WebAssembly::STORE16_I64_A64_S },
  { WebAssembly::STORE32_I64_A32, WebAssembly::STORE32_I64_A64 },
  { WebAssembly::STORE32_I64_A32_S, WebAssembly::STORE32_I64_A64_S },
  { WebAssembly::STORE8_I32_A32, WebAssembly::STORE8_I32_A64 },
  { WebAssembly::STORE8_I32_A32_S, WebAssembly::STORE8_I32_A64_S },
  { WebAssembly::STORE8_I64_A32, WebAssembly::STORE8_I64_A64 },
  { WebAssembly::STORE8_I64_A32_S, WebAssembly::STORE8_I64_A64_S },
  { WebAssembly::STORE_F32_A32, WebAssembly::STORE_F32_A64 },
  { WebAssembly::STORE_F32_A32_S, WebAssembly::STORE_F32_A64_S },
  { WebAssembly::STORE_F64_A32, WebAssembly::STORE_F64_A64 },
  { WebAssembly::STORE_F64_A32_S, WebAssembly::STORE_F64_A64_S },
  { WebAssembly::STORE_I32_A32, WebAssembly::STORE_I32_A64 },
  { WebAssembly::STORE_I32_A32_S, WebAssembly::STORE_I32_A64_S },
  { WebAssembly::STORE_I64_A32, WebAssembly::STORE_I64_A64 },
  { WebAssembly::STORE_I64_A32_S, WebAssembly::STORE_I64_A64_S },
}; // End of getWasm64OpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 178;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getWasm64OpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getWasm64OpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getWasm64OpcodeTable[mid][1];
}

} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRMAP_INFO

